

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 13:01:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataCOMMON
   215  01E7                     __pidataCOMMON:
   216                           
   217                           ;initializer for _DISPLAY
   218  01E7  3401               	retlw	1
   219                           
   220                           	psect	idataBANK0
   221  01DD                     __pidataBANK0:
   222                           
   223                           ;initializer for _NUMEROS
   224  01DD  343F               	retlw	63
   225  01DE  3406               	retlw	6
   226  01DF  345B               	retlw	91
   227  01E0  344F               	retlw	79
   228  01E1  3466               	retlw	102
   229  01E2  346D               	retlw	109
   230  01E3  347D               	retlw	125
   231  01E4  3407               	retlw	7
   232  01E5  347F               	retlw	127
   233  01E6  3467               	retlw	103
   234  0005                     _PORTA	set	5
   235  001E                     _ADRESH	set	30
   236  0006                     _PORTB	set	6
   237  001F                     _ADCON0bits	set	31
   238  000C                     _PIR1bits	set	12
   239  0009                     _PORTEbits	set	9
   240  0007                     _PORTC	set	7
   241  0009                     _PORTE	set	9
   242  0001                     _TMR0	set	1
   243  000B                     _INTCONbits	set	11
   244  005A                     _T0IF	set	90
   245  008C                     _PIE1bits	set	140
   246  008F                     _OSCCONbits	set	143
   247  009F                     _ADCON1bits	set	159
   248  0081                     _OPTION_REG	set	129
   249  0089                     _TRISE	set	137
   250  0087                     _TRISC	set	135
   251  0086                     _TRISB	set	134
   252  0085                     _TRISA	set	133
   253  0189                     _ANSELH	set	393
   254  0188                     _ANSEL	set	392
   255                           
   256                           	psect	cinit
   257  0011                     start_initialization:	
   258                           ; #config settings
   259                           
   260  0011                     __initialization:
   261                           
   262                           ; Initialize objects allocated to BANK0
   263  0011  1383               	bcf	3,7	;select IRP bank0
   264  0012  3035               	movlw	low (__pdataBANK0+10)
   265  0013  00FD               	movwf	btemp+-1
   266  0014  3001               	movlw	high __pidataBANK0
   267  0015  00FE               	movwf	btemp
   268  0016  30DD               	movlw	low __pidataBANK0
   269  0017  00FF               	movwf	btemp+1
   270  0018  302B               	movlw	low __pdataBANK0
   271  0019  0084               	movwf	4
   272  001A  120A  118A  21CE  120A  118A  	fcall	init_ram0
   273                           
   274                           ; Initialize objects allocated to COMMON
   275  001F  120A  118A  21E7  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   276  0024  00F8               	movwf	__pdataCOMMON& (0+127)
   277                           
   278                           ; Clear objects allocated to BANK0
   279  0025  01B5               	clrf	__pbssBANK0& (0+127)
   280  0026  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   281  0027  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   282  0028  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   283  0029  01B9               	clrf	(__pbssBANK0+4)& (0+127)
   284  002A  01BA               	clrf	(__pbssBANK0+5)& (0+127)
   285  002B  01BB               	clrf	(__pbssBANK0+6)& (0+127)
   286  002C  01BC               	clrf	(__pbssBANK0+7)& (0+127)
   287  002D                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  002D                     __end_of__initialization:
   291  002D  0183               	clrf	3
   292  002E  120A  118A  2971   	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	dataCOMMON
   295  0078                     __pdataCOMMON:
   296  0078                     _DISPLAY:
   297  0078                     	ds	1
   298                           
   299                           	psect	bssBANK0
   300  0035                     __pbssBANK0:
   301  0035                     _VAL:
   302  0035                     	ds	2
   303  0037                     _UNIDADES:
   304  0037                     	ds	2
   305  0039                     _DECENAS:
   306  0039                     	ds	2
   307  003B                     _CENTENAS:
   308  003B                     	ds	2
   309                           
   310                           	psect	dataBANK0
   311  002B                     __pdataBANK0:
   312  002B                     _NUMEROS:
   313  002B                     	ds	10
   314                           
   315                           	psect	inittext
   316  01CA                     init_fetch0:	
   317                           ;	Called with low address in FSR and high address in W
   318                           
   319  01CA  087E               	movf	btemp,w
   320  01CB  008A               	movwf	10
   321  01CC  087F               	movf	btemp+1,w
   322  01CD  0082               	movwf	2
   323  01CE                     init_ram0:	
   324                           ;Called with:
   325                           ;	high address of idata address in btemp 
   326                           ;	low address of idata address in btemp+1 
   327                           ;	low address of data in FSR
   328                           ;	high address + 1 of data in btemp-1
   329                           
   330  01CE  120A  118A  21CA  120A  118A  	fcall	init_fetch0
   331  01D3  0080               	movwf	0
   332  01D4  0A84               	incf	4,f
   333  01D5  0804               	movf	4,w
   334  01D6  067D               	xorwf	btemp+-1,w
   335  01D7  1903               	btfsc	3,2
   336  01D8  3400               	retlw	0
   337  01D9  0AFF               	incf	btemp+1,f
   338  01DA  1903               	btfsc	3,2
   339  01DB  0AFE               	incf	btemp,f
   340  01DC  29CE               	goto	init_ram0
   341                           
   342                           	psect	cstackCOMMON
   343  0070                     __pcstackCOMMON:
   344  0070                     ?_isr:
   345  0070                     ??_isr:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_setup:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ?_main:	
   352                           ; 1 bytes @ 0x0
   353                           
   354                           
   355                           ; 1 bytes @ 0x0
   356  0070                     	ds	5
   357  0075                     ??_setup:
   358  0075                     ??___wmul:	
   359                           ; 1 bytes @ 0x5
   360                           
   361  0075                     ??___lwdiv:	
   362                           ; 1 bytes @ 0x5
   363                           
   364  0075                     ___wmul@product:	
   365                           ; 1 bytes @ 0x5
   366                           
   367                           
   368                           ; 2 bytes @ 0x5
   369  0075                     	ds	2
   370  0077                     ??_VALORES:
   371  0077                     ??_main:	
   372                           ; 1 bytes @ 0x7
   373                           
   374                           
   375                           ; 1 bytes @ 0x7
   376  0077                     	ds	1
   377                           
   378                           	psect	cstackBANK0
   379  0020                     __pcstackBANK0:
   380  0020                     ?___wmul:
   381  0020                     ?___lwdiv:	
   382                           ; 2 bytes @ 0x0
   383                           
   384  0020                     ___wmul@multiplier:	
   385                           ; 2 bytes @ 0x0
   386                           
   387  0020                     ___lwdiv@divisor:	
   388                           ; 2 bytes @ 0x0
   389                           
   390                           
   391                           ; 2 bytes @ 0x0
   392  0020                     	ds	2
   393  0022                     ___wmul@multiplicand:
   394  0022                     ___lwdiv@dividend:	
   395                           ; 2 bytes @ 0x2
   396                           
   397                           
   398                           ; 2 bytes @ 0x2
   399  0022                     	ds	2
   400  0024                     ___lwdiv@counter:
   401                           
   402                           ; 1 bytes @ 0x4
   403  0024                     	ds	1
   404  0025                     ___lwdiv@quotient:
   405                           
   406                           ; 2 bytes @ 0x5
   407  0025                     	ds	2
   408  0027                     ?_VALORES:
   409  0027                     VALORES@arg1:	
   410                           ; 1 bytes @ 0x7
   411                           
   412                           
   413                           ; 2 bytes @ 0x7
   414  0027                     	ds	2
   415  0029                     VALORES@temp:
   416                           
   417                           ; 2 bytes @ 0x9
   418  0029                     	ds	2
   419                           
   420                           	psect	maintext
   421  0171                     __pmaintext:	
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 173 in file "Main8.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, status,2, status,0, pclath, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : B00/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0
   443 ;;      Temps:          1       0       0       0       0
   444 ;;      Totals:         1       0       0       0       0
   445 ;;Total ram usage:        1 bytes
   446 ;; Hardware stack levels required when called:    3
   447 ;; This function calls:
   448 ;;		_VALORES
   449 ;;		_setup
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _main
   457  0171                     _main:
   458  0171                     l1107:	
   459                           ;incstack = 0
   460                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   461                           
   462                           
   463                           ;Main8.c: 174:     setup();
   464  0171  120A  118A  2138  120A  118A  	fcall	_setup
   465  0176                     l1109:
   466                           
   467                           ;Main8.c: 175:     ADCON0bits.GO = 1;
   468  0176  1283               	bcf	3,5	;RP0=0, select bank0
   469  0177  1303               	bcf	3,6	;RP1=0, select bank0
   470  0178  149F               	bsf	31,1	;volatile
   471  0179                     l1111:
   472                           
   473                           ;Main8.c: 179:         if (ADCON0bits.GO == 0){
   474  0179  1283               	bcf	3,5	;RP0=0, select bank0
   475  017A  1303               	bcf	3,6	;RP1=0, select bank0
   476  017B  189F               	btfsc	31,1	;volatile
   477  017C  297E               	goto	u441
   478  017D  297F               	goto	u440
   479  017E                     u441:
   480  017E  2996               	goto	l1123
   481  017F                     u440:
   482  017F                     l1113:
   483                           
   484                           ;Main8.c: 180:             if(ADCON0bits.CHS == 0){
   485  017F  0C1F               	rrf	31,w	;volatile
   486  0180  00F7               	movwf	??_main
   487  0181  0C77               	rrf	??_main,w
   488  0182  390F               	andlw	15
   489  0183  3A00               	xorlw	0
   490  0184  1D03               	skipz
   491  0185  2987               	goto	u451
   492  0186  2988               	goto	u450
   493  0187                     u451:
   494  0187  298D               	goto	l1117
   495  0188                     u450:
   496  0188                     l1115:
   497                           
   498                           ;Main8.c: 181:                 ADCON0bits.CHS = 2;
   499  0188  081F               	movf	31,w	;volatile
   500  0189  39C3               	andlw	-61
   501  018A  3808               	iorlw	8
   502  018B  009F               	movwf	31	;volatile
   503                           
   504                           ;Main8.c: 182:                 }
   505  018C  298F               	goto	l1119
   506  018D                     l1117:
   507                           
   508                           ;Main8.c: 184:                 ADCON0bits.CHS = 0;
   509  018D  30C3               	movlw	-61
   510  018E  059F               	andwf	31,f	;volatile
   511  018F                     l1119:
   512                           
   513                           ;Main8.c: 186:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   514  018F  3021               	movlw	33
   515  0190  00F7               	movwf	??_main
   516  0191                     u467:
   517  0191  0BF7               	decfsz	??_main,f
   518  0192  2991               	goto	u467
   519  0193                     l1121:
   520                           
   521                           ;Main8.c: 187:             ADCON0bits.GO = 1;
   522  0193  1283               	bcf	3,5	;RP0=0, select bank0
   523  0194  1303               	bcf	3,6	;RP1=0, select bank0
   524  0195  149F               	bsf	31,1	;volatile
   525  0196                     l1123:
   526                           
   527                           ;Main8.c: 189:         VALORES(VAL);
   528  0196  0836               	movf	_VAL+1,w
   529  0197  00A8               	movwf	VALORES@arg1+1
   530  0198  0835               	movf	_VAL,w
   531  0199  00A7               	movwf	VALORES@arg1
   532  019A  120A  118A  2093  120A  118A  	fcall	_VALORES
   533  019F  2979               	goto	l1111
   534  01A0  120A  118A  280E   	ljmp	start
   535  01A3                     __end_of_main:
   536                           
   537                           	psect	text1
   538  0138                     __ptext1:	
   539 ;; *************** function _setup *****************
   540 ;; Defined at:
   541 ;;		line 127 in file "Main8.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          1       0       0       0       0
   558 ;;      Totals:         1       0       0       0       0
   559 ;;Total ram usage:        1 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _setup
   571  0138                     _setup:
   572  0138                     l909:	
   573                           ;incstack = 0
   574                           ; Regs used in _setup: [wreg+status,2+status,0]
   575                           
   576                           
   577                           ;Main8.c: 129:     ANSEL = 0B00000101;
   578  0138  3005               	movlw	5
   579  0139  1683               	bsf	3,5	;RP0=1, select bank3
   580  013A  1703               	bsf	3,6	;RP1=1, select bank3
   581  013B  0088               	movwf	8	;volatile
   582  013C                     l911:
   583                           
   584                           ;Main8.c: 130:     ANSELH = 0X00;
   585  013C  0189               	clrf	9	;volatile
   586  013D                     l913:
   587                           
   588                           ;Main8.c: 132:     TRISA = 0B00000101;
   589  013D  3005               	movlw	5
   590  013E  1683               	bsf	3,5	;RP0=1, select bank1
   591  013F  1303               	bcf	3,6	;RP1=0, select bank1
   592  0140  0085               	movwf	5	;volatile
   593                           
   594                           ;Main8.c: 133:     TRISB = 0X00;
   595  0141  0186               	clrf	6	;volatile
   596                           
   597                           ;Main8.c: 134:     TRISC = 0X00;
   598  0142  0187               	clrf	7	;volatile
   599                           
   600                           ;Main8.c: 135:     TRISE = 0X00;
   601  0143  0189               	clrf	9	;volatile
   602                           
   603                           ;Main8.c: 137:     PORTA = 0X00;
   604  0144  1283               	bcf	3,5	;RP0=0, select bank0
   605  0145  1303               	bcf	3,6	;RP1=0, select bank0
   606  0146  0185               	clrf	5	;volatile
   607                           
   608                           ;Main8.c: 138:     PORTB = 0X00;
   609  0147  0186               	clrf	6	;volatile
   610                           
   611                           ;Main8.c: 139:     PORTC = 0X00;
   612  0148  0187               	clrf	7	;volatile
   613                           
   614                           ;Main8.c: 140:     PORTE = 0X00;
   615  0149  0189               	clrf	9	;volatile
   616  014A                     l915:
   617                           
   618                           ;Main8.c: 142:     OPTION_REG = 0B11010100;
   619  014A  30D4               	movlw	212
   620  014B  1683               	bsf	3,5	;RP0=1, select bank1
   621  014C  1303               	bcf	3,6	;RP1=0, select bank1
   622  014D  0081               	movwf	1	;volatile
   623  014E                     l917:
   624                           
   625                           ;Main8.c: 145:     ADCON0bits.ADON = 1;
   626  014E  1283               	bcf	3,5	;RP0=0, select bank0
   627  014F  1303               	bcf	3,6	;RP1=0, select bank0
   628  0150  141F               	bsf	31,0	;volatile
   629  0151                     l919:
   630                           
   631                           ;Main8.c: 146:     ADCON0bits.CHS = 2;
   632  0151  081F               	movf	31,w	;volatile
   633  0152  39C3               	andlw	-61
   634  0153  3808               	iorlw	8
   635  0154  009F               	movwf	31	;volatile
   636  0155                     l921:
   637                           
   638                           ;Main8.c: 147:     _delay((unsigned long)((100)*(4000000/4000000.0)));
   639  0155  3021               	movlw	33
   640  0156  00F5               	movwf	??_setup
   641  0157                     u477:
   642  0157  0BF5               	decfsz	??_setup,f
   643  0158  2957               	goto	u477
   644  0159                     l923:
   645                           
   646                           ;Main8.c: 149:     ADCON0bits.ADCS = 1;
   647  0159  1283               	bcf	3,5	;RP0=0, select bank0
   648  015A  1303               	bcf	3,6	;RP1=0, select bank0
   649  015B  081F               	movf	31,w	;volatile
   650  015C  393F               	andlw	-193
   651  015D  3840               	iorlw	64
   652  015E  009F               	movwf	31	;volatile
   653  015F                     l925:
   654                           
   655                           ;Main8.c: 150:     ADCON1bits.ADFM = 0;
   656  015F  1683               	bsf	3,5	;RP0=1, select bank1
   657  0160  1303               	bcf	3,6	;RP1=0, select bank1
   658  0161  139F               	bcf	31,7	;volatile
   659  0162                     l927:
   660                           
   661                           ;Main8.c: 151:     ADCON1bits.VCFG0 = 0;
   662  0162  121F               	bcf	31,4	;volatile
   663  0163                     l929:
   664                           
   665                           ;Main8.c: 152:     ADCON1bits.VCFG1 = 0;
   666  0163  129F               	bcf	31,5	;volatile
   667  0164                     l931:
   668                           
   669                           ;Main8.c: 155:     OSCCONbits.SCS = 1;
   670  0164  140F               	bsf	15,0	;volatile
   671  0165                     l933:
   672                           
   673                           ;Main8.c: 156:     OSCCONbits.IRCF2 = 1;
   674  0165  170F               	bsf	15,6	;volatile
   675  0166                     l935:
   676                           
   677                           ;Main8.c: 157:     OSCCONbits.IRCF1 = 1;
   678  0166  168F               	bsf	15,5	;volatile
   679  0167                     l937:
   680                           
   681                           ;Main8.c: 158:     OSCCONbits.IRCF0 = 0;
   682  0167  120F               	bcf	15,4	;volatile
   683  0168                     l939:
   684                           
   685                           ;Main8.c: 160:     INTCONbits.GIE = 1;
   686  0168  178B               	bsf	11,7	;volatile
   687  0169                     l941:
   688                           
   689                           ;Main8.c: 161:     INTCONbits.T0IE = 1;
   690  0169  168B               	bsf	11,5	;volatile
   691  016A                     l943:
   692                           
   693                           ;Main8.c: 162:     INTCONbits.T0IF = 0;
   694  016A  110B               	bcf	11,2	;volatile
   695  016B                     l945:
   696                           
   697                           ;Main8.c: 163:     INTCONbits.PEIE = 1;
   698  016B  170B               	bsf	11,6	;volatile
   699  016C                     l947:
   700                           
   701                           ;Main8.c: 164:     PIE1bits.ADIE = 1;
   702  016C  170C               	bsf	12,6	;volatile
   703  016D                     l949:
   704                           
   705                           ;Main8.c: 165:     PIR1bits.ADIF = 0;
   706  016D  1283               	bcf	3,5	;RP0=0, select bank0
   707  016E  1303               	bcf	3,6	;RP1=0, select bank0
   708  016F  130C               	bcf	12,6	;volatile
   709  0170                     l75:
   710  0170  0008               	return
   711  0171                     __end_of_setup:
   712                           
   713                           	psect	text2
   714  0093                     __ptext2:	
   715 ;; *************** function _VALORES *****************
   716 ;; Defined at:
   717 ;;		line 197 in file "Main8.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  arg1            2    7[BANK0 ] unsigned int 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  temp            2    9[BANK0 ] unsigned int 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       2       0       0       0
   732 ;;      Locals:         0       2       0       0       0
   733 ;;      Temps:          0       0       0       0       0
   734 ;;      Totals:         0       4       0       0       0
   735 ;;Total ram usage:        4 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    2
   738 ;; This function calls:
   739 ;;		___lwdiv
   740 ;;		___wmul
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _VALORES
   748  0093                     _VALORES:
   749  0093                     l1097:	
   750                           ;incstack = 0
   751                           ; Regs used in _VALORES: [wreg+status,2+status,0+pclath+cstack]
   752                           
   753                           
   754                           ;Main8.c: 198:     unsigned int temp;;Main8.c: 199:     temp = arg1;
   755  0093  1283               	bcf	3,5	;RP0=0, select bank0
   756  0094  1303               	bcf	3,6	;RP1=0, select bank0
   757  0095  0828               	movf	VALORES@arg1+1,w
   758  0096  00AA               	movwf	VALORES@temp+1
   759  0097  0827               	movf	VALORES@arg1,w
   760  0098  00A9               	movwf	VALORES@temp
   761  0099                     l1099:
   762                           
   763                           ;Main8.c: 200:     CENTENAS = temp/100;
   764  0099  3064               	movlw	100
   765  009A  00A0               	movwf	___lwdiv@divisor
   766  009B  3000               	movlw	0
   767  009C  00A1               	movwf	___lwdiv@divisor+1
   768  009D  082A               	movf	VALORES@temp+1,w
   769  009E  00A3               	movwf	___lwdiv@dividend+1
   770  009F  0829               	movf	VALORES@temp,w
   771  00A0  00A2               	movwf	___lwdiv@dividend
   772  00A1  120A  118A  20F2  120A  118A  	fcall	___lwdiv
   773  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   774  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   775  00A8  0821               	movf	?___lwdiv+1,w
   776  00A9  00BC               	movwf	_CENTENAS+1
   777  00AA  0820               	movf	?___lwdiv,w
   778  00AB  00BB               	movwf	_CENTENAS
   779  00AC                     l1101:
   780                           
   781                           ;Main8.c: 201:     temp = temp-CENTENAS*100;
   782  00AC  083C               	movf	_CENTENAS+1,w
   783  00AD  00A1               	movwf	___wmul@multiplier+1
   784  00AE  083B               	movf	_CENTENAS,w
   785  00AF  00A0               	movwf	___wmul@multiplier
   786  00B0  309C               	movlw	156
   787  00B1  00A2               	movwf	___wmul@multiplicand
   788  00B2  30FF               	movlw	255
   789  00B3  00A3               	movwf	___wmul@multiplicand+1
   790  00B4  120A  118A  21A3  120A  118A  	fcall	___wmul
   791  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   792  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   793  00BB  0829               	movf	VALORES@temp,w
   794  00BC  0720               	addwf	?___wmul,w
   795  00BD  00A9               	movwf	VALORES@temp
   796  00BE  082A               	movf	VALORES@temp+1,w
   797  00BF  1803               	skipnc
   798  00C0  0A2A               	incf	VALORES@temp+1,w
   799  00C1  0721               	addwf	?___wmul+1,w
   800  00C2  00AA               	movwf	VALORES@temp+1
   801  00C3                     l1103:
   802                           
   803                           ;Main8.c: 202:     DECENAS = temp/10;
   804  00C3  300A               	movlw	10
   805  00C4  00A0               	movwf	___lwdiv@divisor
   806  00C5  3000               	movlw	0
   807  00C6  00A1               	movwf	___lwdiv@divisor+1
   808  00C7  082A               	movf	VALORES@temp+1,w
   809  00C8  00A3               	movwf	___lwdiv@dividend+1
   810  00C9  0829               	movf	VALORES@temp,w
   811  00CA  00A2               	movwf	___lwdiv@dividend
   812  00CB  120A  118A  20F2  120A  118A  	fcall	___lwdiv
   813  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   814  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   815  00D2  0821               	movf	?___lwdiv+1,w
   816  00D3  00BA               	movwf	_DECENAS+1
   817  00D4  0820               	movf	?___lwdiv,w
   818  00D5  00B9               	movwf	_DECENAS
   819  00D6                     l1105:
   820                           
   821                           ;Main8.c: 203:     temp = temp-DECENAS*10;
   822  00D6  083A               	movf	_DECENAS+1,w
   823  00D7  00A1               	movwf	___wmul@multiplier+1
   824  00D8  0839               	movf	_DECENAS,w
   825  00D9  00A0               	movwf	___wmul@multiplier
   826  00DA  30F6               	movlw	246
   827  00DB  00A2               	movwf	___wmul@multiplicand
   828  00DC  30FF               	movlw	255
   829  00DD  00A3               	movwf	___wmul@multiplicand+1
   830  00DE  120A  118A  21A3  120A  118A  	fcall	___wmul
   831  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   832  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   833  00E5  0829               	movf	VALORES@temp,w
   834  00E6  0720               	addwf	?___wmul,w
   835  00E7  00A9               	movwf	VALORES@temp
   836  00E8  082A               	movf	VALORES@temp+1,w
   837  00E9  1803               	skipnc
   838  00EA  0A2A               	incf	VALORES@temp+1,w
   839  00EB  0721               	addwf	?___wmul+1,w
   840  00EC  00AA               	movwf	VALORES@temp+1
   841                           
   842                           ;Main8.c: 204:     UNIDADES = temp;
   843  00ED  082A               	movf	VALORES@temp+1,w
   844  00EE  00B8               	movwf	_UNIDADES+1
   845  00EF  0829               	movf	VALORES@temp,w
   846  00F0  00B7               	movwf	_UNIDADES
   847  00F1                     l89:
   848  00F1  0008               	return
   849  00F2                     __end_of_VALORES:
   850                           
   851                           	psect	text3
   852  01A3                     __ptext3:	
   853 ;; *************** function ___wmul *****************
   854 ;; Defined at:
   855 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  multiplier      2    0[BANK0 ] unsigned int 
   858 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  product         2    5[COMMON] unsigned int 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  2    0[BANK0 ] unsigned int 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       4       0       0       0
   871 ;;      Locals:         2       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0
   873 ;;      Totals:         2       4       0       0       0
   874 ;;Total ram usage:        6 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; Hardware stack levels required when called:    1
   877 ;; This function calls:
   878 ;;		Nothing
   879 ;; This function is called by:
   880 ;;		_VALORES
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function ___wmul
   886  01A3                     ___wmul:
   887  01A3                     l1057:	
   888                           ;incstack = 0
   889                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   890                           
   891  01A3  01F5               	clrf	___wmul@product
   892  01A4  01F6               	clrf	___wmul@product+1
   893  01A5                     l1059:
   894  01A5  1283               	bcf	3,5	;RP0=0, select bank0
   895  01A6  1303               	bcf	3,6	;RP1=0, select bank0
   896  01A7  1C20               	btfss	___wmul@multiplier,0
   897  01A8  29AA               	goto	u331
   898  01A9  29AB               	goto	u330
   899  01AA                     u331:
   900  01AA  29B1               	goto	l175
   901  01AB                     u330:
   902  01AB                     l1061:
   903  01AB  0822               	movf	___wmul@multiplicand,w
   904  01AC  07F5               	addwf	___wmul@product,f
   905  01AD  1803               	skipnc
   906  01AE  0AF6               	incf	___wmul@product+1,f
   907  01AF  0823               	movf	___wmul@multiplicand+1,w
   908  01B0  07F6               	addwf	___wmul@product+1,f
   909  01B1                     l175:
   910  01B1  3001               	movlw	1
   911  01B2                     u345:
   912  01B2  1003               	clrc
   913  01B3  0DA2               	rlf	___wmul@multiplicand,f
   914  01B4  0DA3               	rlf	___wmul@multiplicand+1,f
   915  01B5  3EFF               	addlw	-1
   916  01B6  1D03               	skipz
   917  01B7  29B2               	goto	u345
   918  01B8                     l1063:
   919  01B8  3001               	movlw	1
   920  01B9                     u355:
   921  01B9  1003               	clrc
   922  01BA  0CA1               	rrf	___wmul@multiplier+1,f
   923  01BB  0CA0               	rrf	___wmul@multiplier,f
   924  01BC  3EFF               	addlw	-1
   925  01BD  1D03               	skipz
   926  01BE  29B9               	goto	u355
   927  01BF                     l1065:
   928  01BF  0820               	movf	___wmul@multiplier,w
   929  01C0  0421               	iorwf	___wmul@multiplier+1,w
   930  01C1  1D03               	btfss	3,2
   931  01C2  29C4               	goto	u361
   932  01C3  29C5               	goto	u360
   933  01C4                     u361:
   934  01C4  29A5               	goto	l1059
   935  01C5                     u360:
   936  01C5                     l1067:
   937  01C5  0876               	movf	___wmul@product+1,w
   938  01C6  00A1               	movwf	?___wmul+1
   939  01C7  0875               	movf	___wmul@product,w
   940  01C8  00A0               	movwf	?___wmul
   941  01C9                     l177:
   942  01C9  0008               	return
   943  01CA                     __end_of___wmul:
   944                           
   945                           	psect	text4
   946  00F2                     __ptext4:	
   947 ;; *************** function ___lwdiv *****************
   948 ;; Defined at:
   949 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  divisor         2    0[BANK0 ] unsigned int 
   952 ;;  dividend        2    2[BANK0 ] unsigned int 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  quotient        2    5[BANK0 ] unsigned int 
   955 ;;  counter         1    4[BANK0 ] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  2    0[BANK0 ] unsigned int 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       4       0       0       0
   966 ;;      Locals:         0       3       0       0       0
   967 ;;      Temps:          1       0       0       0       0
   968 ;;      Totals:         1       7       0       0       0
   969 ;;Total ram usage:        8 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_VALORES
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function ___lwdiv
   981  00F2                     ___lwdiv:
   982  00F2                     l1071:	
   983                           ;incstack = 0
   984                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   985                           
   986  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   987  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   988  00F4  01A5               	clrf	___lwdiv@quotient
   989  00F5  01A6               	clrf	___lwdiv@quotient+1
   990  00F6                     l1073:
   991  00F6  0820               	movf	___lwdiv@divisor,w
   992  00F7  0421               	iorwf	___lwdiv@divisor+1,w
   993  00F8  1903               	btfsc	3,2
   994  00F9  28FB               	goto	u371
   995  00FA  28FC               	goto	u370
   996  00FB                     u371:
   997  00FB  2933               	goto	l1093
   998  00FC                     u370:
   999  00FC                     l1075:
  1000  00FC  01A4               	clrf	___lwdiv@counter
  1001  00FD  0AA4               	incf	___lwdiv@counter,f
  1002  00FE  290A               	goto	l1081
  1003  00FF                     l1077:
  1004  00FF  3001               	movlw	1
  1005  0100                     u385:
  1006  0100  1003               	clrc
  1007  0101  0DA0               	rlf	___lwdiv@divisor,f
  1008  0102  0DA1               	rlf	___lwdiv@divisor+1,f
  1009  0103  3EFF               	addlw	-1
  1010  0104  1D03               	skipz
  1011  0105  2900               	goto	u385
  1012  0106                     l1079:
  1013  0106  3001               	movlw	1
  1014  0107  00F5               	movwf	??___lwdiv
  1015  0108  0875               	movf	??___lwdiv,w
  1016  0109  07A4               	addwf	___lwdiv@counter,f
  1017  010A                     l1081:
  1018  010A  1FA1               	btfss	___lwdiv@divisor+1,7
  1019  010B  290D               	goto	u391
  1020  010C  290E               	goto	u390
  1021  010D                     u391:
  1022  010D  28FF               	goto	l1077
  1023  010E                     u390:
  1024  010E                     l1083:
  1025  010E  3001               	movlw	1
  1026  010F                     u405:
  1027  010F  1003               	clrc
  1028  0110  0DA5               	rlf	___lwdiv@quotient,f
  1029  0111  0DA6               	rlf	___lwdiv@quotient+1,f
  1030  0112  3EFF               	addlw	-1
  1031  0113  1D03               	skipz
  1032  0114  290F               	goto	u405
  1033  0115  0821               	movf	___lwdiv@divisor+1,w
  1034  0116  0223               	subwf	___lwdiv@dividend+1,w
  1035  0117  1D03               	skipz
  1036  0118  291B               	goto	u415
  1037  0119  0820               	movf	___lwdiv@divisor,w
  1038  011A  0222               	subwf	___lwdiv@dividend,w
  1039  011B                     u415:
  1040  011B  1C03               	skipc
  1041  011C  291E               	goto	u411
  1042  011D  291F               	goto	u410
  1043  011E                     u411:
  1044  011E  2926               	goto	l1089
  1045  011F                     u410:
  1046  011F                     l1085:
  1047  011F  0820               	movf	___lwdiv@divisor,w
  1048  0120  02A2               	subwf	___lwdiv@dividend,f
  1049  0121  0821               	movf	___lwdiv@divisor+1,w
  1050  0122  1C03               	skipc
  1051  0123  03A3               	decf	___lwdiv@dividend+1,f
  1052  0124  02A3               	subwf	___lwdiv@dividend+1,f
  1053  0125                     l1087:
  1054  0125  1425               	bsf	___lwdiv@quotient,0
  1055  0126                     l1089:
  1056  0126  3001               	movlw	1
  1057  0127                     u425:
  1058  0127  1003               	clrc
  1059  0128  0CA1               	rrf	___lwdiv@divisor+1,f
  1060  0129  0CA0               	rrf	___lwdiv@divisor,f
  1061  012A  3EFF               	addlw	-1
  1062  012B  1D03               	skipz
  1063  012C  2927               	goto	u425
  1064  012D                     l1091:
  1065  012D  3001               	movlw	1
  1066  012E  02A4               	subwf	___lwdiv@counter,f
  1067  012F  1D03               	btfss	3,2
  1068  0130  2932               	goto	u431
  1069  0131  2933               	goto	u430
  1070  0132                     u431:
  1071  0132  290E               	goto	l1083
  1072  0133                     u430:
  1073  0133                     l1093:
  1074  0133  0826               	movf	___lwdiv@quotient+1,w
  1075  0134  00A1               	movwf	?___lwdiv+1
  1076  0135  0825               	movf	___lwdiv@quotient,w
  1077  0136  00A0               	movwf	?___lwdiv
  1078  0137                     l447:
  1079  0137  0008               	return
  1080  0138                     __end_of___lwdiv:
  1081                           
  1082                           	psect	text5
  1083  0031                     __ptext5:	
  1084 ;; *************** function _isr *****************
  1085 ;; Defined at:
  1086 ;;		line 86 in file "Main8.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0
  1102 ;;      Temps:          5       0       0       0       0
  1103 ;;      Totals:         5       0       0       0       0
  1104 ;;Total ram usage:        5 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		Interrupt level 1
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _isr
  1115  0031                     _isr:
  1116  0031                     i1l961:
  1117                           
  1118                           ;Main8.c: 87:    if(T0IF == 1){
  1119  0031  1D0B               	btfss	11,2	;volatile
  1120  0032  2834               	goto	u28_21
  1121  0033  2835               	goto	u28_20
  1122  0034                     u28_21:
  1123  0034  2870               	goto	i1l63
  1124  0035                     u28_20:
  1125  0035                     i1l963:
  1126                           
  1127                           ;Main8.c: 88:        INTCONbits.T0IF = 0;
  1128  0035  110B               	bcf	11,2	;volatile
  1129  0036                     i1l965:
  1130                           
  1131                           ;Main8.c: 89:        TMR0 = 100;
  1132  0036  3064               	movlw	100
  1133  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0039  0081               	movwf	1	;volatile
  1136                           
  1137                           ;Main8.c: 91:        switch(DISPLAY){
  1138  003A  285C               	goto	i1l993
  1139  003B                     i1l967:
  1140                           
  1141                           ;Main8.c: 93:             PORTE = 0X00;
  1142  003B  0189               	clrf	9	;volatile
  1143  003C                     i1l969:
  1144                           
  1145                           ;Main8.c: 94:             PORTC = NUMEROS[CENTENAS];
  1146  003C  083B               	movf	_CENTENAS,w
  1147  003D  3E2B               	addlw	(low (_NUMEROS| 0))& (0+255)
  1148  003E  0084               	movwf	4
  1149  003F  1383               	bcf	3,7	;select IRP bank0
  1150  0040  0800               	movf	0,w
  1151  0041  0087               	movwf	7	;volatile
  1152  0042                     i1l971:
  1153                           
  1154                           ;Main8.c: 95:             PORTEbits.RE0 = 1;
  1155  0042  1409               	bsf	9,0	;volatile
  1156  0043                     i1l973:
  1157                           
  1158                           ;Main8.c: 96:             DISPLAY++;
  1159  0043  3001               	movlw	1
  1160  0044  00F0               	movwf	??_isr
  1161  0045  0870               	movf	??_isr,w
  1162  0046  07F8               	addwf	_DISPLAY,f
  1163                           
  1164                           ;Main8.c: 97:             break;
  1165  0047  286F               	goto	i1l66
  1166  0048                     i1l975:
  1167                           
  1168                           ;Main8.c: 99:             PORTE = 0X00;
  1169  0048  0189               	clrf	9	;volatile
  1170  0049                     i1l977:
  1171                           
  1172                           ;Main8.c: 100:             PORTC = NUMEROS[DECENAS];
  1173  0049  0839               	movf	_DECENAS,w
  1174  004A  3E2B               	addlw	(low (_NUMEROS| 0))& (0+255)
  1175  004B  0084               	movwf	4
  1176  004C  1383               	bcf	3,7	;select IRP bank0
  1177  004D  0800               	movf	0,w
  1178  004E  0087               	movwf	7	;volatile
  1179  004F                     i1l979:
  1180                           
  1181                           ;Main8.c: 101:             PORTEbits.RE1 = 1;
  1182  004F  1489               	bsf	9,1	;volatile
  1183  0050  2843               	goto	i1l973
  1184  0051                     i1l983:
  1185                           
  1186                           ;Main8.c: 105:             PORTE = 0X00;
  1187  0051  0189               	clrf	9	;volatile
  1188  0052                     i1l985:
  1189                           
  1190                           ;Main8.c: 106:             PORTC = NUMEROS[UNIDADES];
  1191  0052  0837               	movf	_UNIDADES,w
  1192  0053  3E2B               	addlw	(low (_NUMEROS| 0))& (0+255)
  1193  0054  0084               	movwf	4
  1194  0055  1383               	bcf	3,7	;select IRP bank0
  1195  0056  0800               	movf	0,w
  1196  0057  0087               	movwf	7	;volatile
  1197  0058                     i1l987:
  1198                           
  1199                           ;Main8.c: 107:             PORTEbits.RE2 = 1;
  1200  0058  1509               	bsf	9,2	;volatile
  1201  0059                     i1l989:
  1202                           
  1203                           ;Main8.c: 108:             DISPLAY = 1;
  1204  0059  01F8               	clrf	_DISPLAY
  1205  005A  0AF8               	incf	_DISPLAY,f
  1206                           
  1207                           ;Main8.c: 109:             break;
  1208  005B  286F               	goto	i1l66
  1209  005C                     i1l993:
  1210  005C  0878               	movf	_DISPLAY,w
  1211  005D  00F0               	movwf	??_isr
  1212  005E  01F1               	clrf	??_isr+1
  1213                           
  1214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 1, Range of values is 0 to 0
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte            4     3 (average)
  1220                           ; direct_byte           11     8 (fixed)
  1221                           ; jumptable            260     6 (fixed)
  1222                           ;	Chosen strategy is simple_byte
  1223  005F  0871               	movf	??_isr+1,w
  1224  0060  3A00               	xorlw	0	; case 0
  1225  0061  1903               	skipnz
  1226  0062  2864               	goto	i1l1155
  1227  0063  286F               	goto	i1l66
  1228  0064                     i1l1155:
  1229                           
  1230                           ; Switch size 1, requested type "simple"
  1231                           ; Number of cases is 3, Range of values is 1 to 3
  1232                           ; switch strategies available:
  1233                           ; Name         Instructions Cycles
  1234                           ; simple_byte           10     6 (average)
  1235                           ; direct_byte           20    11 (fixed)
  1236                           ; jumptable            263     9 (fixed)
  1237                           ;	Chosen strategy is simple_byte
  1238  0064  0870               	movf	??_isr,w
  1239  0065  3A01               	xorlw	1	; case 1
  1240  0066  1903               	skipnz
  1241  0067  283B               	goto	i1l967
  1242  0068  3A03               	xorlw	3	; case 2
  1243  0069  1903               	skipnz
  1244  006A  2848               	goto	i1l975
  1245  006B  3A01               	xorlw	1	; case 3
  1246  006C  1903               	skipnz
  1247  006D  2851               	goto	i1l983
  1248  006E  286F               	goto	i1l66
  1249  006F                     i1l66:
  1250                           
  1251                           ;Main8.c: 111:         INTCONbits.T0IF = 0;
  1252  006F  110B               	bcf	11,2	;volatile
  1253  0070                     i1l63:	
  1254                           ;Main8.c: 112:                  }
  1255                           
  1256                           
  1257                           ;Main8.c: 113:    if(PIR1bits.ADIF == 1){
  1258  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0072  1F0C               	btfss	12,6	;volatile
  1261  0073  2875               	goto	u29_21
  1262  0074  2876               	goto	u29_20
  1263  0075                     u29_21:
  1264  0075  288A               	goto	i1l72
  1265  0076                     u29_20:
  1266  0076                     i1l995:
  1267                           
  1268                           ;Main8.c: 114:        if(ADCON0bits.CHS == 0){
  1269  0076  0C1F               	rrf	31,w	;volatile
  1270  0077  00F0               	movwf	??_isr
  1271  0078  0C70               	rrf	??_isr,w
  1272  0079  390F               	andlw	15
  1273  007A  3A00               	xorlw	0
  1274  007B  1D03               	skipz
  1275  007C  287E               	goto	u30_21
  1276  007D  287F               	goto	u30_20
  1277  007E                     u30_21:
  1278  007E  2882               	goto	i1l999
  1279  007F                     u30_20:
  1280  007F                     i1l997:
  1281                           
  1282                           ;Main8.c: 115:            PORTB = ADRESH;}
  1283  007F  081E               	movf	30,w	;volatile
  1284  0080  0086               	movwf	6	;volatile
  1285  0081  2889               	goto	i1l1001
  1286  0082                     i1l999:
  1287                           
  1288                           ;Main8.c: 117:            VAL = ADRESH;}
  1289  0082  081E               	movf	30,w	;volatile
  1290  0083  00F0               	movwf	??_isr
  1291  0084  01F1               	clrf	??_isr+1
  1292  0085  0870               	movf	??_isr,w
  1293  0086  00B5               	movwf	_VAL
  1294  0087  0871               	movf	??_isr+1,w
  1295  0088  00B6               	movwf	_VAL+1
  1296  0089                     i1l1001:
  1297                           
  1298                           ;Main8.c: 119:    PIR1bits.ADIF = 0;
  1299  0089  130C               	bcf	12,6	;volatile
  1300  008A                     i1l72:
  1301  008A  0874               	movf	??_isr+4,w
  1302  008B  008A               	movwf	10
  1303  008C  0873               	movf	??_isr+3,w
  1304  008D  0084               	movwf	4
  1305  008E  0E72               	swapf	??_isr+2,w
  1306  008F  0083               	movwf	3
  1307  0090  0EFE               	swapf	btemp,f
  1308  0091  0E7E               	swapf	btemp,w
  1309  0092  0009               	retfie
  1310  0093                     __end_of_isr:
  1311  007E                     btemp	set	126	;btemp
  1312  007E                     wtemp0	set	126
  1313                           
  1314                           	psect	intentry
  1315  0004                     __pintentry:	
  1316                           ;incstack = 0
  1317                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1318                           
  1319  0004                     interrupt_function:
  1320  007E                     saved_w	set	btemp
  1321  0004  00FE               	movwf	btemp
  1322  0005  0E03               	swapf	3,w
  1323  0006  00F2               	movwf	??_isr+2
  1324  0007  0804               	movf	4,w
  1325  0008  00F3               	movwf	??_isr+3
  1326  0009  080A               	movf	10,w
  1327  000A  00F4               	movwf	??_isr+4
  1328  000B  120A  118A  2831   	ljmp	_isr
  1329                           
  1330                           	psect	config
  1331                           
  1332                           ;Config register CONFIG1 @ 0x2007
  1333                           ;	Oscillator Selection bits
  1334                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1335                           ;	Watchdog Timer Enable bit
  1336                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1337                           ;	Power-up Timer Enable bit
  1338                           ;	PWRTE = OFF, PWRT disabled
  1339                           ;	RE3/MCLR pin function select bit
  1340                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1341                           ;	Code Protection bit
  1342                           ;	CP = OFF, Program memory code protection is disabled
  1343                           ;	Data Code Protection bit
  1344                           ;	CPD = OFF, Data memory code protection is disabled
  1345                           ;	Brown Out Reset Selection bits
  1346                           ;	BOREN = OFF, BOR disabled
  1347                           ;	Internal External Switchover bit
  1348                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1349                           ;	Fail-Safe Clock Monitor Enabled bit
  1350                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1351                           ;	Low Voltage Programming Enable bit
  1352                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1353                           ;	In-Circuit Debugger Mode bit
  1354                           ;	DEBUG = 0x1, unprogrammed default
  1355  2007                     	org	8199
  1356  2007  20D4               	dw	8404
  1357                           
  1358                           ;Config register CONFIG2 @ 0x2008
  1359                           ;	Brown-out Reset Selection bit
  1360                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1361                           ;	Flash Program Memory Self Write Enable bits
  1362                           ;	WRT = OFF, Write protection off
  1363  2008                     	org	8200
  1364  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     11      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _VALORES->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_VALORES
    _VALORES->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1382
                                              7 COMMON     1     1      0
                            _VALORES
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _VALORES                                              4     2      2    1382
                                              7 BANK0      4     2      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _VALORES
     ___lwdiv
     ___wmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      1D       5       36.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 13:01:23 2021

                      pc 0002                       l75 0170                       l89 00F1  
                     fsr 0004      ___wmul@multiplicand 0022                      l175 01B1  
                    l177 01C9                      l447 0137                      l911 013C  
                    l921 0155                      l913 013D                      l931 0164  
                    l923 0159                      l915 014A                      l941 0169  
                    l933 0165                      l925 015F                      l917 014E  
                    l909 0138                      l943 016A                      l935 0166  
                    l927 0162                      l919 0151                      l945 016B  
                    l937 0167                      l929 0163                      l947 016C  
                    l939 0168                      l949 016D                      u410 011F  
                    u330 01AB                      u411 011E                      u331 01AA  
                    u405 010F                      u430 0133                      u431 0132  
                    u415 011B                      u360 01C5                      u440 017F  
                    u425 0127                      u361 01C4                      u345 01B2  
                    u441 017E                      u370 00FC                      u450 0188  
                    u371 00FB                      u355 01B9                      u451 0187  
                    u390 010E                      u391 010D                      u385 0100  
                    u467 0191                      u477 0157                      _VAL 0035  
                    _isr 0031                      fsr0 0004                      indf 0000  
                   l1101 00AC                     l1103 00C3                     l1111 0179  
                   l1105 00D6                     l1121 0193                     l1113 017F  
                   l1115 0188                     l1123 0196                     l1107 0171  
                   l1061 01AB                     l1117 018D                     l1109 0176  
                   l1071 00F2                     l1063 01B8                     l1119 018F  
                   l1081 010A                     l1073 00F6                     l1065 01BF  
                   l1057 01A3                     l1091 012D                     l1083 010E  
                   l1075 00FC                     l1067 01C5                     l1059 01A5  
                   l1085 011F                     l1077 00FF                     l1093 0133  
                   l1087 0125                     l1079 0106                     l1089 0126  
                   l1097 0093                     l1099 0099                     ?_isr 0070  
                   _T0IF 005A                     i1l63 0070                     i1l72 008A  
                   i1l66 006F                     _TMR0 0001          __end_of_VALORES 00F2  
                   _main 0171                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
        __end_of___lwdiv 0138                    i1l961 0031                    i1l971 0042  
                  i1l963 0035                    i1l973 0043                    i1l965 0036  
                  i1l983 0051                    i1l975 0048                    i1l967 003B  
                  i1l985 0052                    i1l977 0049                    i1l969 003C  
                  i1l993 005C                    i1l995 0076                    i1l987 0058  
                  i1l979 004F                    i1l997 007F                    i1l989 0059  
                  i1l999 0082                    u30_20 007F                    u30_21 007E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTE 0009                    u28_20 0035                    u28_21 0034  
                  u29_20 0076                    u29_21 0075                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISE 0089  
                  _setup 0138                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01A3  
                 ??_main 0077                ??_VALORES 0077                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   i1l1001 0089  
                 i1l1155 0064                   ___wmul 01A3                ??___lwdiv 0075  
           __pdataCOMMON 0078                   saved_w 007E  __end_of__initialization 002D  
         __pcstackCOMMON 0070             __pidataBANK0 01DD            __end_of_setup 0171  
                ??_setup 0075               __pbssBANK0 0035              VALORES@arg1 0027  
            VALORES@temp 0029               __pmaintext 0171                  ?___wmul 0020  
             __pintentry 0004                  _DECENAS 0039                  _DISPLAY 0078  
                _VALORES 0093                  _NUMEROS 002B          __size_of___wmul 0027  
                ___lwdiv 00F2                  __ptext1 0138                  __ptext2 0093  
                __ptext3 01A3                  __ptext4 00F2                  __ptext5 0031  
           __size_of_isr 0062     end_of_initialization 002D                _PORTEbits 0009  
         __end_of___wmul 01CA            __pidataCOMMON 01E7      start_initialization 0011  
            __end_of_isr 0093                 ??___wmul 0075               init_fetch0 01CA  
            __pdataBANK0 002B                ___latbits 0002            __pcstackBANK0 0020  
               ?_VALORES 0027         ___lwdiv@dividend 0022                 ?___lwdiv 0020  
               _CENTENAS 003B         ___lwdiv@quotient 0025           __size_of_setup 0039  
      interrupt_function 0004           ___wmul@product 0075                 _PIE1bits 008C  
               _PIR1bits 000C                 _UNIDADES 0037               _ADCON0bits 001F  
             _ADCON1bits 009F        ___wmul@multiplier 0020         __size_of_VALORES 005F  
       __size_of___lwdiv 0046          ___lwdiv@divisor 0020          ___lwdiv@counter 0024  
          __size_of_main 0032               _INTCONbits 000B                 init_ram0 01CE  
               intlevel1 0000               _OSCCONbits 008F               _OPTION_REG 0081  
