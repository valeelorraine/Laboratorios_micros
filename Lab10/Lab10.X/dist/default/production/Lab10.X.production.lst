

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 09 23:09:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208                           
   209                           	psect	idataBANK0
   210  0680                     __pidataBANK0:
   211                           
   212                           ;initializer for _DATO
   213  0680  3420               	retlw	32
   214  0681  340D               	retlw	13
   215  0682  3456               	retlw	86
   216  0683  3461               	retlw	97
   217  0684  346D               	retlw	109
   218  0685  346F               	retlw	111
   219  0686  3473               	retlw	115
   220  0687  3420               	retlw	32
   221  0688  3461               	retlw	97
   222  0689  3420               	retlw	32
   223  068A  3473               	retlw	115
   224  068B  3461               	retlw	97
   225  068C  3463               	retlw	99
   226  068D  3461               	retlw	97
   227  068E  3472               	retlw	114
   228  068F  3420               	retlw	32
   229  0690  3431               	retlw	49
   230  0691  3430               	retlw	48
   231  0692  3430               	retlw	48
   232  0693  340D               	retlw	13
   233  0694  3400               	retlw	0
   234                           
   235                           	psect	idataBANK3
   236  070C                     __pidataBANK3:
   237                           
   238                           ;initializer for _I
   239  070C  3420               	retlw	32
   240  070D  3451               	retlw	81
   241  070E  3475               	retlw	117
   242  070F  3465               	retlw	101
   243  0710  3420               	retlw	32
   244  0711  3461               	retlw	97
   245  0712  3463               	retlw	99
   246  0713  3463               	retlw	99
   247  0714  3469               	retlw	105
   248  0715  346F               	retlw	111
   249  0716  346E               	retlw	110
   250  0717  3420               	retlw	32
   251  0718  3464               	retlw	100
   252  0719  3465               	retlw	101
   253  071A  3473               	retlw	115
   254  071B  3465               	retlw	101
   255  071C  3461               	retlw	97
   256  071D  3420               	retlw	32
   257  071E  3472               	retlw	114
   258  071F  3465               	retlw	101
   259  0720  3461               	retlw	97
   260  0721  346C               	retlw	108
   261  0722  3469               	retlw	105
   262  0723  347A               	retlw	122
   263  0724  3461               	retlw	97
   264  0725  3472               	retlw	114
   265  0726  343F               	retlw	63
   266  0727  340D               	retlw	13
   267  0728  3431               	retlw	49
   268  0729  3429               	retlw	41
   269  072A  3420               	retlw	32
   270  072B  3444               	retlw	68
   271  072C  3465               	retlw	101
   272  072D  3473               	retlw	115
   273  072E  3470               	retlw	112
   274  072F  346C               	retlw	108
   275  0730  3465               	retlw	101
   276  0731  3467               	retlw	103
   277  0732  3461               	retlw	97
   278  0733  3472               	retlw	114
   279  0734  3420               	retlw	32
   280  0735  3463               	retlw	99
   281  0736  3461               	retlw	97
   282  0737  3464               	retlw	100
   283  0738  3465               	retlw	101
   284  0739  346E               	retlw	110
   285  073A  3461               	retlw	97
   286  073B  3420               	retlw	32
   287  073C  3464               	retlw	100
   288  073D  3465               	retlw	101
   289  073E  3420               	retlw	32
   290  073F  3463               	retlw	99
   291  0740  3461               	retlw	97
   292  0741  3472               	retlw	114
   293  0742  3461               	retlw	97
   294  0743  3463               	retlw	99
   295  0744  3474               	retlw	116
   296  0745  3465               	retlw	101
   297  0746  3472               	retlw	114
   298  0747  3465               	retlw	101
   299  0748  3473               	retlw	115
   300  0749  340D               	retlw	13
   301  074A  3432               	retlw	50
   302  074B  3429               	retlw	41
   303  074C  3420               	retlw	32
   304  074D  3443               	retlw	67
   305  074E  3461               	retlw	97
   306  074F  346D               	retlw	109
   307  0750  3462               	retlw	98
   308  0751  3469               	retlw	105
   309  0752  3461               	retlw	97
   310  0753  3472               	retlw	114
   311  0754  3420               	retlw	32
   312  0755  3450               	retlw	80
   313  0756  344F               	retlw	79
   314  0757  3452               	retlw	82
   315  0758  3454               	retlw	84
   316  0759  3441               	retlw	65
   317  075A  340D               	retlw	13
   318  075B  3433               	retlw	51
   319  075C  3429               	retlw	41
   320  075D  3420               	retlw	32
   321  075E  3443               	retlw	67
   322  075F  3461               	retlw	97
   323  0760  346D               	retlw	109
   324  0761  3462               	retlw	98
   325  0762  3469               	retlw	105
   326  0763  3461               	retlw	97
   327  0764  3472               	retlw	114
   328  0765  3420               	retlw	32
   329  0766  3450               	retlw	80
   330  0767  344F               	retlw	79
   331  0768  3452               	retlw	82
   332  0769  3454               	retlw	84
   333  076A  3442               	retlw	66
   334  076B  340D               	retlw	13
   335  001A                     _RCREG	set	26
   336  0019                     _TXREG	set	25
   337  0018                     _RCSTAbits	set	24
   338  000C                     _PIR1bits	set	12
   339  000B                     _INTCONbits	set	11
   340  0006                     _PORTB	set	6
   341  0005                     _PORTA	set	5
   342  0065                     _RCIF	set	101
   343  009A                     _SPBRGH	set	154
   344  0099                     _SPBRG	set	153
   345  0098                     _TXSTAbits	set	152
   346  008C                     _PIE1bits	set	140
   347  008F                     _OSCCONbits	set	143
   348  0087                     _TRISCbits	set	135
   349  0086                     _TRISB	set	134
   350  0085                     _TRISA	set	133
   351  0187                     _BAUDCTLbits	set	391
   352  0189                     _ANSELH	set	393
   353  0188                     _ANSEL	set	392
   354                           
   355                           	psect	cinit
   356  07DA                     start_initialization:	
   357                           ; #config settings
   358                           
   359  07DA                     __initialization:
   360                           
   361                           ; Initialize objects allocated to BANK3
   362  07DA  1783               	bsf	3,7	;select IRP bank2
   363  07DB  30F0               	movlw	low (__pdataBANK3+96)
   364  07DC  00FD               	movwf	btemp+-1
   365  07DD  3007               	movlw	high __pidataBANK3
   366  07DE  00FE               	movwf	btemp
   367  07DF  300C               	movlw	low __pidataBANK3
   368  07E0  00FF               	movwf	btemp+1
   369  07E1  3090               	movlw	low __pdataBANK3
   370  07E2  0084               	movwf	4
   371  07E3  120A  118A  2671  120A  118A  	fcall	init_ram0
   372                           
   373                           ; Initialize objects allocated to BANK0
   374  07E8  1383               	bcf	3,7	;select IRP bank0
   375  07E9  3035               	movlw	low (__pdataBANK0+21)
   376  07EA  00FD               	movwf	btemp+-1
   377  07EB  3006               	movlw	high __pidataBANK0
   378  07EC  00FE               	movwf	btemp
   379  07ED  3080               	movlw	low __pidataBANK0
   380  07EE  00FF               	movwf	btemp+1
   381  07EF  3020               	movlw	low __pdataBANK0
   382  07F0  0084               	movwf	4
   383  07F1  120A  118A  2671  120A  118A  	fcall	init_ram0
   384                           
   385                           ; Clear objects allocated to COMMON
   386  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   387  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   388  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   389  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   390  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   391  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   392  07FC                     end_of_initialization:	
   393                           ;End of C runtime variable initialization code
   394                           
   395  07FC                     __end_of__initialization:
   396  07FC  0183               	clrf	3
   397  07FD  120A  118A  2EC5   	ljmp	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMMON
   400  0070                     __pbssCOMMON:
   401  0070                     _OP:
   402  0070                     	ds	2
   403  0072                     _VALOR1:
   404  0072                     	ds	2
   405  0074                     _VALOR:
   406  0074                     	ds	2
   407                           
   408                           	psect	dataBANK0
   409  0020                     __pdataBANK0:
   410  0020                     _DATO:
   411  0020                     	ds	21
   412                           
   413                           	psect	dataBANK3
   414  0190                     __pdataBANK3:
   415  0190                     _I:
   416  0190                     	ds	96
   417                           
   418                           	psect	inittext
   419  066D                     init_fetch0:	
   420                           ;	Called with low address in FSR and high address in W
   421                           
   422  066D  087E               	movf	btemp,w
   423  066E  008A               	movwf	10
   424  066F  087F               	movf	btemp+1,w
   425  0670  0082               	movwf	2
   426  0671                     init_ram0:	
   427                           ;Called with:
   428                           ;	high address of idata address in btemp 
   429                           ;	low address of idata address in btemp+1 
   430                           ;	low address of data in FSR
   431                           ;	high address + 1 of data in btemp-1
   432                           
   433  0671  120A  118A  266D  120A  118A  	fcall	init_fetch0
   434  0676  0080               	movwf	0
   435  0677  0A84               	incf	4,f
   436  0678  0804               	movf	4,w
   437  0679  067D               	xorwf	btemp+-1,w
   438  067A  1903               	btfsc	3,2
   439  067B  3400               	retlw	0
   440  067C  0AFF               	incf	btemp+1,f
   441  067D  1903               	btfsc	3,2
   442  067E  0AFE               	incf	btemp,f
   443  067F  2E71               	goto	init_ram0
   444                           
   445                           	psect	cstackCOMMON
   446  0076                     __pcstackCOMMON:
   447  0076                     ?_INS:
   448  0076                     ??_INS:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0076                     ?_setup:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0076                     ??_setup:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0076                     ?_main:	
   458                           ; 1 bytes @ 0x0
   459                           
   460                           
   461                           ; 1 bytes @ 0x0
   462  0076                     	ds	3
   463  0079                     ??_main:
   464                           
   465                           ; 1 bytes @ 0x3
   466  0079                     	ds	3
   467                           
   468                           	psect	maintext
   469  06C5                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 113 in file "Main10.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : B00/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       0       0       0       0
   491 ;;      Temps:          3       0       0       0       0
   492 ;;      Totals:         3       0       0       0       0
   493 ;;Total ram usage:        3 bytes
   494 ;; Hardware stack levels required when called:    1
   495 ;; This function calls:
   496 ;;		_INS
   497 ;;		_setup
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _main
   505  06C5                     _main:
   506  06C5                     l754:	
   507                           ;incstack = 0
   508                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   509                           
   510                           
   511                           ;Main10.c: 114:     setup();
   512  06C5  120A  118A  2695  120A  118A  	fcall	_setup
   513  06CA                     l756:
   514                           
   515                           ;Main10.c: 116:             _delay((unsigned long)((500)*(4000000/4000.0)));
   516  06CA  3003               	movlw	3
   517  06CB  00FB               	movwf	??_main+2
   518  06CC  308A               	movlw	138
   519  06CD  00FA               	movwf	??_main+1
   520  06CE  3055               	movlw	85
   521  06CF  00F9               	movwf	??_main
   522  06D0                     u67:
   523  06D0  0BF9               	decfsz	??_main,f
   524  06D1  2ED0               	goto	u67
   525  06D2  0BFA               	decfsz	??_main+1,f
   526  06D3  2ED0               	goto	u67
   527  06D4  0BFB               	decfsz	??_main+2,f
   528  06D5  2ED0               	goto	u67
   529  06D6  2ED7               	nop2
   530  06D7                     l758:
   531                           
   532                           ;Main10.c: 117:             VALOR = 0;
   533  06D7  01F4               	clrf	_VALOR
   534  06D8  01F5               	clrf	_VALOR+1
   535  06D9                     l760:
   536  06D9  3001               	movlw	1
   537  06DA  07F4               	addwf	_VALOR,f
   538  06DB  1803               	skipnc
   539  06DC  0AF5               	incf	_VALOR+1,f
   540  06DD  3000               	movlw	0
   541  06DE  07F5               	addwf	_VALOR+1,f
   542  06DF                     l762:
   543                           
   544                           ;Main10.c: 119:                 TXREG = I[VALOR];
   545  06DF  0874               	movf	_VALOR,w
   546  06E0  3E90               	addlw	(low (_I| (0+256)))& (0+255)
   547  06E1  0084               	movwf	4
   548  06E2  1783               	bsf	3,7	;select IRP bank3
   549  06E3  0800               	movf	0,w
   550  06E4  1283               	bcf	3,5	;RP0=0, select bank0
   551  06E5  1303               	bcf	3,6	;RP1=0, select bank0
   552  06E6  0099               	movwf	25	;volatile
   553  06E7                     l764:
   554                           
   555                           ;Main10.c: 120:                 _delay((unsigned long)((50)*(4000000/4000.0)));
   556  06E7  3041               	movlw	65
   557  06E8  00FA               	movwf	??_main+1
   558  06E9  30EE               	movlw	238
   559  06EA  00F9               	movwf	??_main
   560  06EB                     u77:
   561  06EB  0BF9               	decfsz	??_main,f
   562  06EC  2EEB               	goto	u77
   563  06ED  0BFA               	decfsz	??_main+1,f
   564  06EE  2EEB               	goto	u77
   565  06EF  0000               	nop
   566  06F0                     l766:
   567                           
   568                           ;Main10.c: 121:             }
   569  06F0  0875               	movf	_VALOR+1,w
   570  06F1  3A80               	xorlw	128
   571  06F2  00FF               	movwf	btemp+1
   572  06F3  3080               	movlw	128
   573  06F4  027F               	subwf	btemp+1,w
   574  06F5  1D03               	skipz
   575  06F6  2EF9               	goto	u45
   576  06F7  3060               	movlw	96
   577  06F8  0274               	subwf	_VALOR,w
   578  06F9                     u45:
   579  06F9  1C03               	skipc
   580  06FA  2EFC               	goto	u41
   581  06FB  2EFD               	goto	u40
   582  06FC                     u41:
   583  06FC  2ED9               	goto	l760
   584  06FD                     u40:
   585  06FD                     l63:
   586  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   587  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   588  06FF  1E8C               	btfss	12,5	;volatile
   589  0700  2F02               	goto	u51
   590  0701  2F03               	goto	u50
   591  0702                     u51:
   592  0702  2EFD               	goto	l63
   593  0703                     u50:
   594  0703                     l768:
   595                           
   596                           ;Main10.c: 124:             INS();
   597  0703  120A  118A  276C  120A  118A  	fcall	_INS
   598  0708  2ECA               	goto	l756
   599  0709  120A  118A  2800   	ljmp	start
   600  070C                     __end_of_main:
   601                           
   602                           	psect	text1
   603  0695                     __ptext1:	
   604 ;; *************** function _setup *****************
   605 ;; Defined at:
   606 ;;		line 68 in file "Main10.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0
   623 ;;      Totals:         0       0       0       0       0
   624 ;;Total ram usage:        0 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           
   634                           ;psect for function _setup
   635  0695                     _setup:
   636  0695                     l676:	
   637                           ;incstack = 0
   638                           ; Regs used in _setup: [wreg+status,2]
   639                           
   640                           
   641                           ;Main10.c: 70:     ANSEL = 0X00;
   642  0695  1683               	bsf	3,5	;RP0=1, select bank3
   643  0696  1703               	bsf	3,6	;RP1=1, select bank3
   644  0697  0188               	clrf	8	;volatile
   645                           
   646                           ;Main10.c: 71:     ANSELH = 0X00;
   647  0698  0189               	clrf	9	;volatile
   648                           
   649                           ;Main10.c: 73:     TRISA = 0x00;
   650  0699  1683               	bsf	3,5	;RP0=1, select bank1
   651  069A  1303               	bcf	3,6	;RP1=0, select bank1
   652  069B  0185               	clrf	5	;volatile
   653                           
   654                           ;Main10.c: 74:     TRISB = 0X00;
   655  069C  0186               	clrf	6	;volatile
   656  069D                     l678:
   657                           
   658                           ;Main10.c: 75:     TRISCbits.TRISC6 = 0;
   659  069D  1307               	bcf	7,6	;volatile
   660  069E                     l680:
   661                           
   662                           ;Main10.c: 76:     TRISCbits.TRISC7 = 1;
   663  069E  1787               	bsf	7,7	;volatile
   664                           
   665                           ;Main10.c: 78:     PORTA = 0X00;
   666  069F  1283               	bcf	3,5	;RP0=0, select bank0
   667  06A0  1303               	bcf	3,6	;RP1=0, select bank0
   668  06A1  0185               	clrf	5	;volatile
   669                           
   670                           ;Main10.c: 79:     PORTB = 0X00;
   671  06A2  0186               	clrf	6	;volatile
   672  06A3                     l682:
   673                           
   674                           ;Main10.c: 82:     OSCCONbits.SCS = 1;
   675  06A3  1683               	bsf	3,5	;RP0=1, select bank1
   676  06A4  1303               	bcf	3,6	;RP1=0, select bank1
   677  06A5  140F               	bsf	15,0	;volatile
   678  06A6                     l684:
   679                           
   680                           ;Main10.c: 83:     INTCONbits.GIE = 1;
   681  06A6  178B               	bsf	11,7	;volatile
   682  06A7                     l686:
   683                           
   684                           ;Main10.c: 84:     INTCONbits.PEIE = 1;
   685  06A7  170B               	bsf	11,6	;volatile
   686  06A8                     l688:
   687                           
   688                           ;Main10.c: 86:     OSCCONbits.IRCF2 = 1;
   689  06A8  170F               	bsf	15,6	;volatile
   690  06A9                     l690:
   691                           
   692                           ;Main10.c: 87:     OSCCONbits.IRCF1 = 1;
   693  06A9  168F               	bsf	15,5	;volatile
   694  06AA                     l692:
   695                           
   696                           ;Main10.c: 88:     OSCCONbits.IRCF0 = 0;
   697  06AA  120F               	bcf	15,4	;volatile
   698  06AB                     l694:
   699                           
   700                           ;Main10.c: 91:     PIR1bits.RCIF = 0;
   701  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   702  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   703  06AD  128C               	bcf	12,5	;volatile
   704  06AE                     l696:
   705                           
   706                           ;Main10.c: 92:     PIE1bits.RCIE = 0;
   707  06AE  1683               	bsf	3,5	;RP0=1, select bank1
   708  06AF  1303               	bcf	3,6	;RP1=0, select bank1
   709  06B0  128C               	bcf	12,5	;volatile
   710  06B1                     l698:
   711                           
   712                           ;Main10.c: 93:     PIE1bits.TXIE = 0;
   713  06B1  120C               	bcf	12,4	;volatile
   714  06B2                     l700:
   715                           
   716                           ;Main10.c: 94:     TXSTAbits.TX9 = 0;
   717  06B2  1318               	bcf	24,6	;volatile
   718  06B3                     l702:
   719                           
   720                           ;Main10.c: 95:     TXSTAbits.TXEN = 1;
   721  06B3  1698               	bsf	24,5	;volatile
   722  06B4                     l704:
   723                           
   724                           ;Main10.c: 96:     TXSTAbits.SYNC = 0;
   725  06B4  1218               	bcf	24,4	;volatile
   726  06B5                     l706:
   727                           
   728                           ;Main10.c: 97:     TXSTAbits.BRGH = 1;
   729  06B5  1518               	bsf	24,2	;volatile
   730  06B6                     l708:
   731                           
   732                           ;Main10.c: 98:     RCSTAbits.RX9 = 0;
   733  06B6  1283               	bcf	3,5	;RP0=0, select bank0
   734  06B7  1303               	bcf	3,6	;RP1=0, select bank0
   735  06B8  1318               	bcf	24,6	;volatile
   736  06B9                     l710:
   737                           
   738                           ;Main10.c: 99:     RCSTAbits.CREN = 1;
   739  06B9  1618               	bsf	24,4	;volatile
   740  06BA                     l712:
   741                           
   742                           ;Main10.c: 100:     RCSTAbits.SPEN = 1;
   743  06BA  1798               	bsf	24,7	;volatile
   744  06BB                     l714:
   745                           
   746                           ;Main10.c: 104:     BAUDCTLbits.BRG16 = 0;
   747  06BB  1683               	bsf	3,5	;RP0=1, select bank3
   748  06BC  1703               	bsf	3,6	;RP1=1, select bank3
   749  06BD  1187               	bcf	7,3	;volatile
   750  06BE                     l716:
   751                           
   752                           ;Main10.c: 105:     SPBRG = 25;
   753  06BE  3019               	movlw	25
   754  06BF  1683               	bsf	3,5	;RP0=1, select bank1
   755  06C0  1303               	bcf	3,6	;RP1=0, select bank1
   756  06C1  0099               	movwf	25	;volatile
   757  06C2                     l718:
   758                           
   759                           ;Main10.c: 106:     SPBRGH = 1;
   760  06C2  3001               	movlw	1
   761  06C3  009A               	movwf	26	;volatile
   762  06C4                     l55:
   763  06C4  0008               	return
   764  06C5                     __end_of_setup:
   765                           
   766                           	psect	text2
   767  076C                     __ptext2:	
   768 ;; *************** function _INS *****************
   769 ;; Defined at:
   770 ;;		line 132 in file "Main10.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          3       0       0       0       0
   787 ;;      Totals:         3       0       0       0       0
   788 ;;Total ram usage:        3 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _INS
   799  076C                     _INS:
   800  076C                     l720:	
   801                           ;incstack = 0
   802                           ; Regs used in _INS: [wreg-fsr0h+status,2+status,0+btemp+1]
   803                           
   804                           
   805                           ;Main10.c: 133:     OP = RCREG;
   806  076C  1283               	bcf	3,5	;RP0=0, select bank0
   807  076D  1303               	bcf	3,6	;RP1=0, select bank0
   808  076E  081A               	movf	26,w	;volatile
   809  076F  00F6               	movwf	??_INS
   810  0770  01F7               	clrf	??_INS+1
   811  0771  0876               	movf	??_INS,w
   812  0772  00F0               	movwf	_OP
   813  0773  0877               	movf	??_INS+1,w
   814  0774  00F1               	movwf	_OP+1
   815                           
   816                           ;Main10.c: 134:     switch(OP){
   817  0775  2FC9               	goto	l746
   818  0776                     l722:
   819  0776  3001               	movlw	1
   820  0777  07F2               	addwf	_VALOR1,f
   821  0778  1803               	skipnc
   822  0779  0AF3               	incf	_VALOR1+1,f
   823  077A  3000               	movlw	0
   824  077B  07F3               	addwf	_VALOR1+1,f
   825  077C                     l724:
   826                           
   827                           ;Main10.c: 137:                 TXREG = DATO[VALOR1];
   828  077C  0872               	movf	_VALOR1,w
   829  077D  3E20               	addlw	(low (_DATO| 0))& (0+255)
   830  077E  0084               	movwf	4
   831  077F  1383               	bcf	3,7	;select IRP bank0
   832  0780  0800               	movf	0,w
   833  0781  1283               	bcf	3,5	;RP0=0, select bank0
   834  0782  1303               	bcf	3,6	;RP1=0, select bank0
   835  0783  0099               	movwf	25	;volatile
   836  0784                     l726:
   837                           
   838                           ;Main10.c: 138:                 _delay((unsigned long)((50)*(4000000/4000.0)));
   839  0784  3041               	movlw	65
   840  0785  00F7               	movwf	??_INS+1
   841  0786  30EE               	movlw	238
   842  0787  00F6               	movwf	??_INS
   843  0788                     u87:
   844  0788  0BF6               	decfsz	??_INS,f
   845  0789  2F88               	goto	u87
   846  078A  0BF7               	decfsz	??_INS+1,f
   847  078B  2F88               	goto	u87
   848  078C  0000               	nop
   849  078D                     l728:
   850                           
   851                           ;Main10.c: 139:             }
   852  078D  0873               	movf	_VALOR1+1,w
   853  078E  3A80               	xorlw	128
   854  078F  00FF               	movwf	btemp+1
   855  0790  3080               	movlw	128
   856  0791  027F               	subwf	btemp+1,w
   857  0792  1D03               	skipz
   858  0793  2F96               	goto	u15
   859  0794  3016               	movlw	22
   860  0795  0272               	subwf	_VALOR1,w
   861  0796                     u15:
   862  0796  1C03               	skipc
   863  0797  2F99               	goto	u11
   864  0798  2F9A               	goto	u10
   865  0799                     u11:
   866  0799  2F76               	goto	l722
   867  079A                     u10:
   868  079A                     l730:
   869                           
   870                           ;Main10.c: 141:                  VALOR1 = 0;
   871  079A  01F2               	clrf	_VALOR1
   872  079B  01F3               	clrf	_VALOR1+1
   873                           
   874                           ;Main10.c: 142:                  OP = 0;
   875  079C  01F0               	clrf	_OP
   876  079D  01F1               	clrf	_OP+1
   877                           
   878                           ;Main10.c: 143:                 break;
   879  079E  2FD9               	goto	l84
   880  079F                     l732:
   881                           
   882                           ;Main10.c: 146:                  _delay((unsigned long)((500)*(4000000/4000.0)));
   883  079F  3003               	movlw	3
   884  07A0  00F8               	movwf	??_INS+2
   885  07A1  308A               	movlw	138
   886  07A2  00F7               	movwf	??_INS+1
   887  07A3  3055               	movlw	85
   888  07A4  00F6               	movwf	??_INS
   889  07A5                     u97:
   890  07A5  0BF6               	decfsz	??_INS,f
   891  07A6  2FA5               	goto	u97
   892  07A7  0BF7               	decfsz	??_INS+1,f
   893  07A8  2FA5               	goto	u97
   894  07A9  0BF8               	decfsz	??_INS+2,f
   895  07AA  2FA5               	goto	u97
   896  07AB  2FAC               	nop2
   897  07AC                     l77:	
   898                           ;Main10.c: 147:                 while(RCIF == 0);
   899                           
   900  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   901  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   902  07AE  1E8C               	btfss	12,5	;volatile
   903  07AF  2FB1               	goto	u21
   904  07B0  2FB2               	goto	u20
   905  07B1                     u21:
   906  07B1  2FAC               	goto	l77
   907  07B2                     u20:
   908  07B2                     l734:
   909                           
   910                           ;Main10.c: 148:                 PORTA = RCREG;
   911  07B2  081A               	movf	26,w	;volatile
   912  07B3  0085               	movwf	5	;volatile
   913  07B4                     l736:
   914                           
   915                           ;Main10.c: 149:                 OP = 0;
   916  07B4  01F0               	clrf	_OP
   917  07B5  01F1               	clrf	_OP+1
   918                           
   919                           ;Main10.c: 150:                 break;
   920  07B6  2FD9               	goto	l84
   921  07B7                     l738:
   922                           
   923                           ;Main10.c: 153:                 _delay((unsigned long)((50)*(4000000/4000.0)));
   924  07B7  3041               	movlw	65
   925  07B8  00F7               	movwf	??_INS+1
   926  07B9  30EE               	movlw	238
   927  07BA  00F6               	movwf	??_INS
   928  07BB                     u107:
   929  07BB  0BF6               	decfsz	??_INS,f
   930  07BC  2FBB               	goto	u107
   931  07BD  0BF7               	decfsz	??_INS+1,f
   932  07BE  2FBB               	goto	u107
   933  07BF  0000               	nop
   934  07C0                     l81:	
   935                           ;Main10.c: 154:                 while(RCIF == 0);
   936                           
   937  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   938  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   939  07C2  1E8C               	btfss	12,5	;volatile
   940  07C3  2FC5               	goto	u31
   941  07C4  2FC6               	goto	u30
   942  07C5                     u31:
   943  07C5  2FC0               	goto	l81
   944  07C6                     u30:
   945  07C6                     l740:
   946                           
   947                           ;Main10.c: 155:                 PORTB = RCREG;
   948  07C6  081A               	movf	26,w	;volatile
   949  07C7  0086               	movwf	6	;volatile
   950  07C8  2FB4               	goto	l736
   951  07C9                     l746:
   952                           
   953                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   954                           ; Switch size 1, requested type "simple"
   955                           ; Number of cases is 1, Range of values is 0 to 0
   956                           ; switch strategies available:
   957                           ; Name         Instructions Cycles
   958                           ; simple_byte            4     3 (average)
   959                           ; direct_byte           11     8 (fixed)
   960                           ; jumptable            260     6 (fixed)
   961                           ;	Chosen strategy is simple_byte
   962  07C9  0871               	movf	_OP+1,w
   963  07CA  3A00               	xorlw	0	; case 0
   964  07CB  1903               	skipnz
   965  07CC  2FCE               	goto	l800
   966  07CD  2FD9               	goto	l84
   967  07CE                     l800:
   968                           
   969                           ; Switch size 1, requested type "simple"
   970                           ; Number of cases is 3, Range of values is 49 to 51
   971                           ; switch strategies available:
   972                           ; Name         Instructions Cycles
   973                           ; simple_byte           10     6 (average)
   974                           ; direct_byte           20    11 (fixed)
   975                           ; jumptable            263     9 (fixed)
   976                           ;	Chosen strategy is simple_byte
   977  07CE  0870               	movf	_OP,w
   978  07CF  3A31               	xorlw	49	; case 49
   979  07D0  1903               	skipnz
   980  07D1  2F76               	goto	l722
   981  07D2  3A03               	xorlw	3	; case 50
   982  07D3  1903               	skipnz
   983  07D4  2F9F               	goto	l732
   984  07D5  3A01               	xorlw	1	; case 51
   985  07D6  1903               	skipnz
   986  07D7  2FB7               	goto	l738
   987  07D8  2FD9               	goto	l84
   988  07D9                     l84:
   989  07D9  0008               	return
   990  07DA                     __end_of_INS:
   991  007E                     btemp	set	126	;btemp
   992  007E                     wtemp0	set	126
   993                           
   994                           	psect	config
   995                           
   996                           ;Config register CONFIG1 @ 0x2007
   997                           ;	Oscillator Selection bits
   998                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   999                           ;	Watchdog Timer Enable bit
  1000                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1001                           ;	Power-up Timer Enable bit
  1002                           ;	PWRTE = OFF, PWRT disabled
  1003                           ;	RE3/MCLR pin function select bit
  1004                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1005                           ;	Code Protection bit
  1006                           ;	CP = OFF, Program memory code protection is disabled
  1007                           ;	Data Code Protection bit
  1008                           ;	CPD = OFF, Data memory code protection is disabled
  1009                           ;	Brown Out Reset Selection bits
  1010                           ;	BOREN = OFF, BOR disabled
  1011                           ;	Internal External Switchover bit
  1012                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1013                           ;	Fail-Safe Clock Monitor Enabled bit
  1014                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1015                           ;	Low Voltage Programming Enable bit
  1016                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1017                           ;	In-Circuit Debugger Mode bit
  1018                           ;	DEBUG = 0x1, unprogrammed default
  1019  2007                     	org	8199
  1020  2007  20D4               	dw	8404
  1021                           
  1022                           ;Config register CONFIG2 @ 0x2008
  1023                           ;	Brown-out Reset Selection bit
  1024                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1025                           ;	Flash Program Memory Self Write Enable bits
  1026                           ;	WRT = OFF, Write protection off
  1027  2008                     	org	8200
  1028  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        117
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0      21
    BANK1            80      0       0
    BANK3            96      0      96
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_INS

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                                _INS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INS                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INS
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60       9      100.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      81      12        0.0%
ABS                  0      0      81       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 09 23:09:32 2021

                      _I 0190                        pc 0002                       l55 06C4  
                     l63 06FD                       l81 07C0                       l84 07D9  
                     l77 07AC                       u10 079A                       u11 0799  
                     u20 07B2                       u21 07B1                       u30 07C6  
                     _OP 0070                       u31 07C5                       u15 0796  
                     u40 06FD                       u41 06FC                       u50 0703  
                     u51 0702                       u45 06F9                       u67 06D0  
                     u77 06EB                       u87 0788                       u97 07A5  
                     fsr 0004                      l700 06B2                      l710 06B9  
                    l702 06B3                      l800 07CE                      l720 076C  
                    l712 06BA                      l704 06B4                      l730 079A  
                    l722 0776                      l714 06BB                      l706 06B5  
                    l740 07C6                      l732 079F                      l724 077C  
                    l716 06BE                      l708 06B6                      l734 07B2  
                    l726 0784                      l718 06C2                      l736 07B4  
                    l728 078D                      l680 069E                      l760 06D9  
                    l738 07B7                      l746 07C9                      l690 06A9  
                    l682 06A3                      l762 06DF                      l754 06C5  
                    l692 06AA                      l684 06A6                      l676 0695  
                    l764 06E7                      l756 06CA                      l694 06AB  
                    l686 06A7                      l678 069D                      l766 06F0  
                    l758 06D7                      l696 06AE                      l688 06A8  
                    l768 0703                      l698 06B1                      u107 07BB  
                    _INS 076C                      fsr0 0004                      indf 0000  
                   ?_INS 0076                     _DATO 0020                     _RCIF 0065  
                   _main 06C5                     btemp 007E                     start 0000  
                  ??_INS 0076                    ?_main 0076                    _ANSEL 0188  
                  _RCREG 001A                    _VALOR 0074                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _setup 0695  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07DA             __end_of_main 070C                   ??_main 0079  
                 ?_setup 0076                   _ANSELH 0189                   _VALOR1 0072  
                 _SPBRGH 009A  __end_of__initialization 07FC           __pcstackCOMMON 0076  
           __pidataBANK0 0680             __pidataBANK3 070C            __end_of_setup 06C5  
                ??_setup 0076               __pmaintext 06C5                  __ptext1 0695  
                __ptext2 076C             __size_of_INS 006E     end_of_initialization 07FC  
              _RCSTAbits 0018                _TRISCbits 0087                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 07DA              __end_of_INS 07DA  
             init_fetch0 066D              __pdataBANK0 0020              __pdataBANK3 0190  
            __pbssCOMMON 0070                ___latbits 0002           __size_of_setup 0030  
               _PIE1bits 008C                 _PIR1bits 000C            __size_of_main 0047  
             _INTCONbits 000B                 init_ram0 0671               _OSCCONbits 008F  
