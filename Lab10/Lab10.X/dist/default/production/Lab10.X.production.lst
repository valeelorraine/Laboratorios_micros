

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 09 19:58:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataCOMMON
   214  06AC                     __pidataCOMMON:
   215                           
   216                           ;initializer for _DATO
   217  06AC  3460               	retlw	96
   218                           
   219                           	psect	idataBANK3
   220  0785                     __pidataBANK3:
   221                           
   222                           ;initializer for _I
   223  0785  34BF               	retlw	191
   224  0786  3451               	retlw	81
   225  0787  3475               	retlw	117
   226  0788  3465               	retlw	101
   227  0789  3420               	retlw	32
   228  078A  3461               	retlw	97
   229  078B  3463               	retlw	99
   230  078C  3463               	retlw	99
   231  078D  3469               	retlw	105
   232  078E  346F               	retlw	111
   233  078F  346E               	retlw	110
   234  0790  3420               	retlw	32
   235  0791  3464               	retlw	100
   236  0792  3465               	retlw	101
   237  0793  3473               	retlw	115
   238  0794  3465               	retlw	101
   239  0795  3461               	retlw	97
   240  0796  3420               	retlw	32
   241  0797  3472               	retlw	114
   242  0798  3465               	retlw	101
   243  0799  3461               	retlw	97
   244  079A  346C               	retlw	108
   245  079B  3469               	retlw	105
   246  079C  347A               	retlw	122
   247  079D  3461               	retlw	97
   248  079E  3472               	retlw	114
   249  079F  343F               	retlw	63
   250  07A0  340D               	retlw	13
   251  07A1  3431               	retlw	49
   252  07A2  3429               	retlw	41
   253  07A3  3420               	retlw	32
   254  07A4  3444               	retlw	68
   255  07A5  3465               	retlw	101
   256  07A6  3473               	retlw	115
   257  07A7  3470               	retlw	112
   258  07A8  346C               	retlw	108
   259  07A9  3465               	retlw	101
   260  07AA  3467               	retlw	103
   261  07AB  3461               	retlw	97
   262  07AC  3472               	retlw	114
   263  07AD  3420               	retlw	32
   264  07AE  3463               	retlw	99
   265  07AF  3461               	retlw	97
   266  07B0  3464               	retlw	100
   267  07B1  3465               	retlw	101
   268  07B2  346E               	retlw	110
   269  07B3  3461               	retlw	97
   270  07B4  3420               	retlw	32
   271  07B5  3464               	retlw	100
   272  07B6  3465               	retlw	101
   273  07B7  3420               	retlw	32
   274  07B8  3463               	retlw	99
   275  07B9  3461               	retlw	97
   276  07BA  3472               	retlw	114
   277  07BB  3461               	retlw	97
   278  07BC  3463               	retlw	99
   279  07BD  3474               	retlw	116
   280  07BE  3465               	retlw	101
   281  07BF  3472               	retlw	114
   282  07C0  3465               	retlw	101
   283  07C1  3473               	retlw	115
   284  07C2  340D               	retlw	13
   285  07C3  3432               	retlw	50
   286  07C4  3429               	retlw	41
   287  07C5  3420               	retlw	32
   288  07C6  3443               	retlw	67
   289  07C7  3461               	retlw	97
   290  07C8  346D               	retlw	109
   291  07C9  3462               	retlw	98
   292  07CA  3469               	retlw	105
   293  07CB  3461               	retlw	97
   294  07CC  3472               	retlw	114
   295  07CD  3420               	retlw	32
   296  07CE  3450               	retlw	80
   297  07CF  344F               	retlw	79
   298  07D0  3452               	retlw	82
   299  07D1  3454               	retlw	84
   300  07D2  3441               	retlw	65
   301  07D3  340D               	retlw	13
   302  07D4  3433               	retlw	51
   303  07D5  3429               	retlw	41
   304  07D6  3420               	retlw	32
   305  07D7  3443               	retlw	67
   306  07D8  3461               	retlw	97
   307  07D9  346D               	retlw	109
   308  07DA  3462               	retlw	98
   309  07DB  3469               	retlw	105
   310  07DC  3461               	retlw	97
   311  07DD  3472               	retlw	114
   312  07DE  3420               	retlw	32
   313  07DF  3450               	retlw	80
   314  07E0  344F               	retlw	79
   315  07E1  3452               	retlw	82
   316  07E2  3454               	retlw	84
   317  07E3  3442               	retlw	66
   318  001A                     _RCREG	set	26
   319  0019                     _TXREG	set	25
   320  0018                     _RCSTAbits	set	24
   321  000C                     _PIR1bits	set	12
   322  000B                     _INTCONbits	set	11
   323  0006                     _PORTB	set	6
   324  0005                     _PORTA	set	5
   325  0065                     _RCIF	set	101
   326  0064                     _TXIF	set	100
   327  009A                     _SPBRGH	set	154
   328  0099                     _SPBRG	set	153
   329  0098                     _TXSTAbits	set	152
   330  008C                     _PIE1bits	set	140
   331  008F                     _OSCCONbits	set	143
   332  0087                     _TRISCbits	set	135
   333  0086                     _TRISB	set	134
   334  0085                     _TRISA	set	133
   335  0187                     _BAUDCTLbits	set	391
   336  0189                     _ANSELH	set	393
   337  0188                     _ANSEL	set	392
   338                           
   339                           	psect	strings
   340  0003                     __pstrings:
   341  0003                     stringtab:
   342  0003                     __stringtab:
   343  0003                     stringcode:	
   344                           ;	String table - string pointers are 1 byte each
   345                           
   346  0003                     stringdir:
   347  0003  3000               	movlw	high stringdir
   348  0004  008A               	movwf	10
   349  0005  0804               	movf	4,w
   350  0006  0A84               	incf	4,f
   351  0007  0782               	addwf	2,f
   352  0008                     __stringbase:
   353  0008  3400               	retlw	0
   354  0009                     __end_of__stringtab:
   355  0009                     STR_1:
   356  0009  340D               	retlw	13
   357  000A  3420               	retlw	32	;' '
   358  000B  3450               	retlw	80	;'P'
   359  000C  3472               	retlw	114	;'r'
   360  000D  3465               	retlw	101	;'e'
   361  000E  3473               	retlw	115	;'s'
   362  000F  3469               	retlw	105	;'i'
   363  0010  346F               	retlw	111	;'o'
   364  0011  346E               	retlw	110	;'n'
   365  0012  3465               	retlw	101	;'e'
   366  0013  3420               	retlw	32	;' '
   367  0014  3465               	retlw	101	;'e'
   368  0015  346C               	retlw	108	;'l'
   369  0016  3420               	retlw	32	;' '
   370  0017  3463               	retlw	99	;'c'
   371  0018  3461               	retlw	97	;'a'
   372  0019  3472               	retlw	114	;'r'
   373  001A  3461               	retlw	97	;'a'
   374  001B  3463               	retlw	99	;'c'
   375  001C  3474               	retlw	116	;'t'
   376  001D  3465               	retlw	101	;'e'
   377  001E  3472               	retlw	114	;'r'
   378  001F  3420               	retlw	32	;' '
   379  0020  3470               	retlw	112	;'p'
   380  0021  3461               	retlw	97	;'a'
   381  0022  3472               	retlw	114	;'r'
   382  0023  3461               	retlw	97	;'a'
   383  0024  3420               	retlw	32	;' '
   384  0025  3464               	retlw	100	;'d'
   385  0026  3465               	retlw	101	;'e'
   386  0027  3473               	retlw	115	;'s'
   387  0028  3470               	retlw	112	;'p'
   388  0029  346C               	retlw	108	;'l'
   389  002A  3465               	retlw	101	;'e'
   390  002B  3467               	retlw	103	;'g'
   391  002C  3461               	retlw	97	;'a'
   392  002D  3472               	retlw	114	;'r'
   393  002E  3420               	retlw	32	;' '
   394  002F  3465               	retlw	101	;'e'
   395  0030  346E               	retlw	110	;'n'
   396  0031  3420               	retlw	32	;' '
   397  0032  3450               	retlw	80	;'P'
   398  0033  344F               	retlw	79	;'O'
   399  0034  3452               	retlw	82	;'R'
   400  0035  3454               	retlw	84	;'T'
   401  0036  3441               	retlw	65	;'A'
   402  0037  343A               	retlw	58	;':'
   403  0038  3420               	retlw	32	;' '
   404  0039  340D               	retlw	13
   405  003A  3400               	retlw	0
   406  003B                     STR_2:
   407  003B  340D               	retlw	13
   408  003C  3420               	retlw	32	;' '
   409  003D  3450               	retlw	80	;'P'
   410  003E  3472               	retlw	114	;'r'
   411  003F  3465               	retlw	101	;'e'
   412  0040  3473               	retlw	115	;'s'
   413  0041  3469               	retlw	105	;'i'
   414  0042  346F               	retlw	111	;'o'
   415  0043  346E               	retlw	110	;'n'
   416  0044  3465               	retlw	101	;'e'
   417  0045  3420               	retlw	32	;' '
   418  0046  3465               	retlw	101	;'e'
   419  0047  346C               	retlw	108	;'l'
   420  0048  3420               	retlw	32	;' '
   421  0049  3463               	retlw	99	;'c'
   422  004A  3461               	retlw	97	;'a'
   423  004B  3472               	retlw	114	;'r'
   424  004C  3461               	retlw	97	;'a'
   425  004D  3463               	retlw	99	;'c'
   426  004E  3474               	retlw	116	;'t'
   427  004F  3465               	retlw	101	;'e'
   428  0050  3472               	retlw	114	;'r'
   429  0051  3420               	retlw	32	;' '
   430  0052  3470               	retlw	112	;'p'
   431  0053  3461               	retlw	97	;'a'
   432  0054  3472               	retlw	114	;'r'
   433  0055  3461               	retlw	97	;'a'
   434  0056  3420               	retlw	32	;' '
   435  0057  3464               	retlw	100	;'d'
   436  0058  3465               	retlw	101	;'e'
   437  0059  3473               	retlw	115	;'s'
   438  005A  3470               	retlw	112	;'p'
   439  005B  346C               	retlw	108	;'l'
   440  005C  3465               	retlw	101	;'e'
   441  005D  3467               	retlw	103	;'g'
   442  005E  3461               	retlw	97	;'a'
   443  005F  3472               	retlw	114	;'r'
   444  0060  3420               	retlw	32	;' '
   445  0061  3465               	retlw	101	;'e'
   446  0062  346E               	retlw	110	;'n'
   447  0063  3420               	retlw	32	;' '
   448  0064  3450               	retlw	80	;'P'
   449  0065  344F               	retlw	79	;'O'
   450  0066  3452               	retlw	82	;'R'
   451  0067  3454               	retlw	84	;'T'
   452  0068  3442               	retlw	66	;'B'
   453  0069  343A               	retlw	58	;':'
   454  006A  3420               	retlw	32	;' '
   455  006B  340D               	retlw	13
   456  006C  3400               	retlw	0
   457                           
   458                           	psect	cinit
   459  07E4                     start_initialization:	
   460                           ; #config settings
   461                           
   462  07E4                     __initialization:
   463                           
   464                           ; Initialize objects allocated to BANK3
   465  07E4  1783               	bsf	3,7	;select IRP bank2
   466  07E5  30EF               	movlw	low (__pdataBANK3+95)
   467  07E6  00FD               	movwf	btemp+-1
   468  07E7  3007               	movlw	high __pidataBANK3
   469  07E8  00FE               	movwf	btemp
   470  07E9  3085               	movlw	low __pidataBANK3
   471  07EA  00FF               	movwf	btemp+1
   472  07EB  3090               	movlw	low __pdataBANK3
   473  07EC  0084               	movwf	4
   474  07ED  120A  118A  26BC  120A  118A  	fcall	init_ram0
   475                           
   476                           ; Initialize objects allocated to COMMON
   477  07F2  120A  118A  26AC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   478  07F7  00FC               	movwf	__pdataCOMMON& (0+127)
   479                           
   480                           ; Clear objects allocated to BANK0
   481  07F8  01A0               	clrf	__pbssBANK0& (0+127)
   482  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   483                           
   484                           ; Clear objects allocated to COMMON
   485  07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   486  07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   487  07FC                     end_of_initialization:	
   488                           ;End of C runtime variable initialization code
   489                           
   490  07FC                     __end_of__initialization:
   491  07FC  0183               	clrf	3
   492  07FD  120A  118A  2EEA   	ljmp	_main	;jump to C main() function
   493                           
   494                           	psect	bssCOMMON
   495  007A                     __pbssCOMMON:
   496  007A                     _PUERTOB:
   497  007A                     	ds	1
   498  007B                     _PUERTOA:
   499  007B                     	ds	1
   500                           
   501                           	psect	dataCOMMON
   502  007C                     __pdataCOMMON:
   503  007C                     _DATO:
   504  007C                     	ds	1
   505                           
   506                           	psect	bssBANK0
   507  0020                     __pbssBANK0:
   508  0020                     _VALOR:
   509  0020                     	ds	2
   510                           
   511                           	psect	dataBANK3
   512  0190                     __pdataBANK3:
   513  0190                     _I:
   514  0190                     	ds	95
   515                           
   516                           	psect	inittext
   517  06B8                     init_fetch0:	
   518                           ;	Called with low address in FSR and high address in W
   519                           
   520  06B8  087E               	movf	btemp,w
   521  06B9  008A               	movwf	10
   522  06BA  087F               	movf	btemp+1,w
   523  06BB  0082               	movwf	2
   524  06BC                     init_ram0:	
   525                           ;Called with:
   526                           ;	high address of idata address in btemp 
   527                           ;	low address of idata address in btemp+1 
   528                           ;	low address of data in FSR
   529                           ;	high address + 1 of data in btemp-1
   530                           
   531  06BC  120A  118A  26B8  120A  118A  	fcall	init_fetch0
   532  06C1  0080               	movwf	0
   533  06C2  0A84               	incf	4,f
   534  06C3  0804               	movf	4,w
   535  06C4  067D               	xorwf	btemp+-1,w
   536  06C5  1903               	btfsc	3,2
   537  06C6  3400               	retlw	0
   538  06C7  0AFF               	incf	btemp+1,f
   539  06C8  1903               	btfsc	3,2
   540  06C9  0AFE               	incf	btemp,f
   541  06CA  2EBC               	goto	init_ram0
   542                           
   543                           	psect	cstackCOMMON
   544  0070                     __pcstackCOMMON:
   545  0070                     ?_INS:
   546  0070                     ?_setup:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_setup:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_main:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_putch:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ??_putch:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_printf:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     putch@DATA:	
   565                           ; 2 bytes @ 0x0
   566                           
   567                           
   568                           ; 1 bytes @ 0x0
   569  0070                     	ds	1
   570  0071                     ??_printf:
   571                           
   572                           ; 1 bytes @ 0x1
   573  0071                     	ds	1
   574  0072                     printf@ap:
   575                           
   576                           ; 1 bytes @ 0x2
   577  0072                     	ds	1
   578  0073                     printf@c:
   579                           
   580                           ; 1 bytes @ 0x3
   581  0073                     	ds	1
   582  0074                     printf@f:
   583                           
   584                           ; 1 bytes @ 0x4
   585  0074                     	ds	1
   586  0075                     ??_INS:
   587                           
   588                           ; 1 bytes @ 0x5
   589  0075                     	ds	2
   590  0077                     ??_main:
   591                           
   592                           ; 1 bytes @ 0x7
   593  0077                     	ds	3
   594                           
   595                           	psect	maintext
   596  06EA                     __pmaintext:	
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 117 in file "Main10.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : B00/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0
   618 ;;      Temps:          3       0       0       0       0
   619 ;;      Totals:         3       0       0       0       0
   620 ;;Total ram usage:        3 bytes
   621 ;; Hardware stack levels required when called:    3
   622 ;; This function calls:
   623 ;;		_INS
   624 ;;		_setup
   625 ;; This function is called by:
   626 ;;		Startup code after reset
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _main
   632  06EA                     _main:
   633  06EA                     l892:	
   634                           ;incstack = 0
   635                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   636                           
   637                           
   638                           ;Main10.c: 118:     setup();
   639  06EA  120A  118A  2709  120A  118A  	fcall	_setup
   640  06EF                     l894:
   641                           
   642                           ;Main10.c: 120:          _delay((unsigned long)((500)*(4000000/4000.0)));
   643  06EF  3003               	movlw	3
   644  06F0  00F9               	movwf	??_main+2
   645  06F1  308A               	movlw	138
   646  06F2  00F8               	movwf	??_main+1
   647  06F3  3055               	movlw	85
   648  06F4  00F7               	movwf	??_main
   649  06F5                     u97:
   650  06F5  0BF7               	decfsz	??_main,f
   651  06F6  2EF5               	goto	u97
   652  06F7  0BF8               	decfsz	??_main+1,f
   653  06F8  2EF5               	goto	u97
   654  06F9  0BF9               	decfsz	??_main+2,f
   655  06FA  2EF5               	goto	u97
   656  06FB  2EFC               	nop2
   657  06FC                     l896:
   658                           
   659                           ;Main10.c: 121:         VALOR = 0;
   660  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   661  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   662  06FE  01A0               	clrf	_VALOR
   663  06FF  01A1               	clrf	_VALOR+1
   664  0700                     l904:
   665                           
   666                           ;Main10.c: 126:         INS();
   667  0700  120A  118A  2739  120A  118A  	fcall	_INS
   668  0705  2EEF               	goto	l894
   669  0706  120A  118A  2800   	ljmp	start
   670  0709                     __end_of_main:
   671                           
   672                           	psect	text1
   673  0709                     __ptext1:	
   674 ;; *************** function _setup *****************
   675 ;; Defined at:
   676 ;;		line 72 in file "Main10.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _setup
   705  0709                     _setup:
   706  0709                     l820:	
   707                           ;incstack = 0
   708                           ; Regs used in _setup: [wreg+status,2]
   709                           
   710                           
   711                           ;Main10.c: 74:     ANSEL = 0X00;
   712  0709  1683               	bsf	3,5	;RP0=1, select bank3
   713  070A  1703               	bsf	3,6	;RP1=1, select bank3
   714  070B  0188               	clrf	8	;volatile
   715                           
   716                           ;Main10.c: 75:     ANSELH = 0X00;
   717  070C  0189               	clrf	9	;volatile
   718                           
   719                           ;Main10.c: 77:     TRISA = 0x00;
   720  070D  1683               	bsf	3,5	;RP0=1, select bank1
   721  070E  1303               	bcf	3,6	;RP1=0, select bank1
   722  070F  0185               	clrf	5	;volatile
   723                           
   724                           ;Main10.c: 78:     TRISB = 0X00;
   725  0710  0186               	clrf	6	;volatile
   726  0711                     l822:
   727                           
   728                           ;Main10.c: 79:     TRISCbits.TRISC6 = 0;
   729  0711  1307               	bcf	7,6	;volatile
   730  0712                     l824:
   731                           
   732                           ;Main10.c: 80:     TRISCbits.TRISC7 = 1;
   733  0712  1787               	bsf	7,7	;volatile
   734                           
   735                           ;Main10.c: 82:     PORTA = 0X00;
   736  0713  1283               	bcf	3,5	;RP0=0, select bank0
   737  0714  1303               	bcf	3,6	;RP1=0, select bank0
   738  0715  0185               	clrf	5	;volatile
   739                           
   740                           ;Main10.c: 83:     PORTB = 0X00;
   741  0716  0186               	clrf	6	;volatile
   742  0717                     l826:
   743                           
   744                           ;Main10.c: 86:     OSCCONbits.SCS = 1;
   745  0717  1683               	bsf	3,5	;RP0=1, select bank1
   746  0718  1303               	bcf	3,6	;RP1=0, select bank1
   747  0719  140F               	bsf	15,0	;volatile
   748  071A                     l828:
   749                           
   750                           ;Main10.c: 87:     INTCONbits.GIE = 1;
   751  071A  178B               	bsf	11,7	;volatile
   752  071B                     l830:
   753                           
   754                           ;Main10.c: 88:     INTCONbits.PEIE = 1;
   755  071B  170B               	bsf	11,6	;volatile
   756  071C                     l832:
   757                           
   758                           ;Main10.c: 90:     OSCCONbits.IRCF2 = 1;
   759  071C  170F               	bsf	15,6	;volatile
   760  071D                     l834:
   761                           
   762                           ;Main10.c: 91:     OSCCONbits.IRCF1 = 1;
   763  071D  168F               	bsf	15,5	;volatile
   764  071E                     l836:
   765                           
   766                           ;Main10.c: 92:     OSCCONbits.IRCF0 = 0;
   767  071E  120F               	bcf	15,4	;volatile
   768  071F                     l838:
   769                           
   770                           ;Main10.c: 95:     PIR1bits.RCIF = 0;
   771  071F  1283               	bcf	3,5	;RP0=0, select bank0
   772  0720  1303               	bcf	3,6	;RP1=0, select bank0
   773  0721  128C               	bcf	12,5	;volatile
   774  0722                     l840:
   775                           
   776                           ;Main10.c: 96:     PIE1bits.RCIE = 1;
   777  0722  1683               	bsf	3,5	;RP0=1, select bank1
   778  0723  1303               	bcf	3,6	;RP1=0, select bank1
   779  0724  168C               	bsf	12,5	;volatile
   780  0725                     l842:
   781                           
   782                           ;Main10.c: 97:     PIE1bits.TXIE = 0;
   783  0725  120C               	bcf	12,4	;volatile
   784  0726                     l844:
   785                           
   786                           ;Main10.c: 98:     TXSTAbits.TX9 = 0;
   787  0726  1318               	bcf	24,6	;volatile
   788  0727                     l846:
   789                           
   790                           ;Main10.c: 99:     TXSTAbits.TXEN = 1;
   791  0727  1698               	bsf	24,5	;volatile
   792  0728                     l848:
   793                           
   794                           ;Main10.c: 100:     TXSTAbits.SYNC = 0;
   795  0728  1218               	bcf	24,4	;volatile
   796  0729                     l850:
   797                           
   798                           ;Main10.c: 101:     TXSTAbits.BRGH = 1;
   799  0729  1518               	bsf	24,2	;volatile
   800  072A                     l852:
   801                           
   802                           ;Main10.c: 102:     RCSTAbits.RX9 = 0;
   803  072A  1283               	bcf	3,5	;RP0=0, select bank0
   804  072B  1303               	bcf	3,6	;RP1=0, select bank0
   805  072C  1318               	bcf	24,6	;volatile
   806  072D                     l854:
   807                           
   808                           ;Main10.c: 103:     RCSTAbits.CREN = 1;
   809  072D  1618               	bsf	24,4	;volatile
   810  072E                     l856:
   811                           
   812                           ;Main10.c: 104:     RCSTAbits.SPEN = 1;
   813  072E  1798               	bsf	24,7	;volatile
   814  072F                     l858:
   815                           
   816                           ;Main10.c: 108:     BAUDCTLbits.BRG16 = 0;
   817  072F  1683               	bsf	3,5	;RP0=1, select bank3
   818  0730  1703               	bsf	3,6	;RP1=1, select bank3
   819  0731  1187               	bcf	7,3	;volatile
   820  0732                     l860:
   821                           
   822                           ;Main10.c: 109:     SPBRG = 25;
   823  0732  3019               	movlw	25
   824  0733  1683               	bsf	3,5	;RP0=1, select bank1
   825  0734  1303               	bcf	3,6	;RP1=0, select bank1
   826  0735  0099               	movwf	25	;volatile
   827  0736                     l862:
   828                           
   829                           ;Main10.c: 110:     SPBRGH = 1;
   830  0736  3001               	movlw	1
   831  0737  009A               	movwf	26	;volatile
   832  0738                     l59:
   833  0738  0008               	return
   834  0739                     __end_of_setup:
   835                           
   836                           	psect	text2
   837  0739                     __ptext2:	
   838 ;; *************** function _INS *****************
   839 ;; Defined at:
   840 ;;		line 140 in file "Main10.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0
   856 ;;      Temps:          2       0       0       0       0
   857 ;;      Totals:         2       0       0       0       0
   858 ;;Total ram usage:        2 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    2
   861 ;; This function calls:
   862 ;;		_printf
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _INS
   870  0739                     _INS:
   871  0739                     l864:	
   872                           ;incstack = 0
   873                           ; Regs used in _INS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   874                           
   875                           
   876                           ;Main10.c: 141:     switch(RCREG){
   877  0739  2F6F               	goto	l886
   878  073A                     l80:	
   879                           ;Main10.c: 143:             case 49:
   880                           
   881                           
   882                           ;Main10.c: 144:                 if (PIR1bits.TXIF == 1){
   883  073A  1E0C               	btfss	12,4	;volatile
   884  073B  2F3D               	goto	u71
   885  073C  2F3E               	goto	u70
   886  073D                     u71:
   887  073D  2F84               	goto	l88
   888  073E                     u70:
   889  073E                     l868:
   890                           
   891                           ;Main10.c: 145:                     DATO++;
   892  073E  3001               	movlw	1
   893  073F  00F5               	movwf	??_INS
   894  0740  0875               	movf	??_INS,w
   895  0741  07FC               	addwf	_DATO,f
   896  0742                     l870:
   897                           
   898                           ;Main10.c: 146:                     if(DATO > 122){
   899  0742  307B               	movlw	123
   900  0743  027C               	subwf	_DATO,w
   901  0744  1C03               	skipc
   902  0745  2F47               	goto	u81
   903  0746  2F48               	goto	u80
   904  0747                     u81:
   905  0747  2F4C               	goto	l82
   906  0748                     u80:
   907  0748                     l872:
   908                           
   909                           ;Main10.c: 147:                         DATO = 97;
   910  0748  3061               	movlw	97
   911  0749  00F5               	movwf	??_INS
   912  074A  0875               	movf	??_INS,w
   913  074B  00FC               	movwf	_DATO
   914  074C                     l82:	
   915                           ;Main10.c: 148:                               }
   916                           
   917                           
   918                           ;Main10.c: 149:                     TXREG = DATO;
   919  074C  087C               	movf	_DATO,w
   920  074D  0099               	movwf	25	;volatile
   921                           
   922                           ;Main10.c: 150:                     TXREG = 32;
   923  074E  3020               	movlw	32
   924  074F  0099               	movwf	25	;volatile
   925  0750  2F84               	goto	l88
   926  0751                     l874:
   927                           
   928                           ;Main10.c: 155:                 printf("\r Presione el caracter para desplegar en PORTA:
      +                           \r");
   929  0751  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   930  0752  120A  118A  26CB  120A  118A  	fcall	_printf
   931  0757                     l876:
   932                           
   933                           ;Main10.c: 156:                 PUERTOA = RCREG;
   934  0757  1283               	bcf	3,5	;RP0=0, select bank0
   935  0758  1303               	bcf	3,6	;RP1=0, select bank0
   936  0759  081A               	movf	26,w	;volatile
   937  075A  00F5               	movwf	??_INS
   938  075B  0875               	movf	??_INS,w
   939  075C  00FB               	movwf	_PUERTOA
   940  075D                     l878:
   941                           
   942                           ;Main10.c: 157:                 PORTA = PUERTOA;
   943  075D  087B               	movf	_PUERTOA,w
   944  075E  0085               	movwf	5	;volatile
   945                           
   946                           ;Main10.c: 158:                 break;
   947  075F  2F84               	goto	l88
   948  0760                     l880:
   949                           
   950                           ;Main10.c: 161:                 printf("\r Presione el caracter para desplegar en PORTB:
      +                           \r");
   951  0760  3033               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   952  0761  120A  118A  26CB  120A  118A  	fcall	_printf
   953  0766                     l882:
   954                           
   955                           ;Main10.c: 162:                 PUERTOB = RCREG;
   956  0766  1283               	bcf	3,5	;RP0=0, select bank0
   957  0767  1303               	bcf	3,6	;RP1=0, select bank0
   958  0768  081A               	movf	26,w	;volatile
   959  0769  00F5               	movwf	??_INS
   960  076A  0875               	movf	??_INS,w
   961  076B  00FA               	movwf	_PUERTOB
   962  076C                     l884:
   963                           
   964                           ;Main10.c: 163:                 PORTB = PUERTOB;
   965  076C  087A               	movf	_PUERTOB,w
   966  076D  0086               	movwf	6	;volatile
   967                           
   968                           ;Main10.c: 164:                 break;
   969  076E  2F84               	goto	l88
   970  076F                     l886:
   971  076F  1283               	bcf	3,5	;RP0=0, select bank0
   972  0770  1303               	bcf	3,6	;RP1=0, select bank0
   973  0771  081A               	movf	26,w	;volatile
   974  0772  00F5               	movwf	??_INS
   975  0773  01F6               	clrf	??_INS+1
   976                           
   977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 1, Range of values is 0 to 0
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte            4     3 (average)
   983                           ; direct_byte           11     8 (fixed)
   984                           ; jumptable            260     6 (fixed)
   985                           ;	Chosen strategy is simple_byte
   986  0774  0876               	movf	??_INS+1,w
   987  0775  3A00               	xorlw	0	; case 0
   988  0776  1903               	skipnz
   989  0777  2F79               	goto	l926
   990  0778  2F84               	goto	l88
   991  0779                     l926:
   992                           
   993                           ; Switch size 1, requested type "simple"
   994                           ; Number of cases is 3, Range of values is 49 to 51
   995                           ; switch strategies available:
   996                           ; Name         Instructions Cycles
   997                           ; simple_byte           10     6 (average)
   998                           ; direct_byte           20    11 (fixed)
   999                           ; jumptable            263     9 (fixed)
  1000                           ;	Chosen strategy is simple_byte
  1001  0779  0875               	movf	??_INS,w
  1002  077A  3A31               	xorlw	49	; case 49
  1003  077B  1903               	skipnz
  1004  077C  2F3A               	goto	l80
  1005  077D  3A03               	xorlw	3	; case 50
  1006  077E  1903               	skipnz
  1007  077F  2F51               	goto	l874
  1008  0780  3A01               	xorlw	1	; case 51
  1009  0781  1903               	skipnz
  1010  0782  2F60               	goto	l880
  1011  0783  2F84               	goto	l88
  1012  0784                     l88:
  1013  0784  0008               	return
  1014  0785                     __end_of_INS:
  1015                           
  1016                           	psect	text3
  1017  06CB                     __ptext3:	
  1018 ;; *************** function _printf *****************
  1019 ;; Defined at:
  1020 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  f               1    wreg     PTR const unsigned char 
  1023 ;;		 -> STR_2(50), STR_1(50), 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  f               1    4[COMMON] PTR const unsigned char 
  1026 ;;		 -> STR_2(50), STR_1(50), 
  1027 ;;  tmpval          4    0        struct .
  1028 ;;  cp              2    0        PTR const unsigned char 
  1029 ;;  len             2    0        unsigned int 
  1030 ;;  val             2    0        unsigned int 
  1031 ;;  c               1    3[COMMON] unsigned char 
  1032 ;;  ap              1    2[COMMON] PTR void [1]
  1033 ;;		 -> ?_printf(2), 
  1034 ;;  flag            1    0        unsigned char 
  1035 ;;  prec            1    0        char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2   42[None  ] int 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       0       0       0       0
  1046 ;;      Locals:         3       0       0       0       0
  1047 ;;      Temps:          1       0       0       0       0
  1048 ;;      Totals:         4       0       0       0       0
  1049 ;;Total ram usage:        4 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		_putch
  1054 ;; This function is called by:
  1055 ;;		_INS
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _printf
  1061  06CB                     _printf:
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1065                           ;printf@f stored from wreg
  1066  06CB  00F4               	movwf	printf@f
  1067  06CC                     l814:
  1068                           
  1069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  1070  06CC  3070               	movlw	(low (?_printf| 0))& (0+255)
  1071  06CD  00F1               	movwf	??_printf
  1072  06CE  0871               	movf	??_printf,w
  1073  06CF  00F2               	movwf	printf@ap
  1074                           
  1075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1076  06D0  2ED7               	goto	l818
  1077  06D1                     l816:
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  1080  06D1  0873               	movf	printf@c,w
  1081  06D2  120A  118A  26AD  120A  118A  	fcall	_putch
  1082  06D7                     l818:	
  1083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1084                           
  1085                           
  1086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1087  06D7  3001               	movlw	1
  1088  06D8  07F4               	addwf	printf@f,f
  1089  06D9  30FF               	movlw	-1
  1090  06DA  0774               	addwf	printf@f,w
  1091  06DB  0084               	movwf	4
  1092  06DC  120A  118A  2003  120A  118A  	fcall	stringdir
  1093  06E1  00F1               	movwf	??_printf
  1094  06E2  0871               	movf	??_printf,w
  1095  06E3  00F3               	movwf	printf@c
  1096  06E4  0873               	movf	printf@c,w
  1097  06E5  1D03               	btfss	3,2
  1098  06E6  2EE8               	goto	u61
  1099  06E7  2EE9               	goto	u60
  1100  06E8                     u61:
  1101  06E8  2ED1               	goto	l816
  1102  06E9                     u60:
  1103  06E9                     l180:
  1104  06E9  0008               	return
  1105  06EA                     __end_of_printf:
  1106                           
  1107                           	psect	text4
  1108  06AD                     __ptext4:	
  1109 ;; *************** function _putch *****************
  1110 ;; Defined at:
  1111 ;;		line 134 in file "Main10.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  DATA            1    wreg     unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  DATA            1    0[COMMON] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0
  1128 ;;      Totals:         1       0       0       0       0
  1129 ;;Total ram usage:        1 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_printf
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _putch
  1140  06AD                     _putch:
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _putch: [wreg]
  1144                           ;putch@DATA stored from wreg
  1145  06AD  00F0               	movwf	putch@DATA
  1146  06AE                     l808:
  1147                           
  1148                           ;Main10.c: 135:     while(TXIF == 0){
  1149  06AE  2EB1               	goto	l812
  1150  06AF                     l810:
  1151                           
  1152                           ;Main10.c: 136:         TXREG = DATA;
  1153  06AF  0870               	movf	putch@DATA,w
  1154  06B0  0099               	movwf	25	;volatile
  1155  06B1                     l812:
  1156                           
  1157                           ;Main10.c: 135:     while(TXIF == 0){
  1158  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1159  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1160  06B3  1E0C               	btfss	12,4	;volatile
  1161  06B4  2EB6               	goto	u51
  1162  06B5  2EB7               	goto	u50
  1163  06B6                     u51:
  1164  06B6  2EAF               	goto	l810
  1165  06B7                     u50:
  1166  06B7                     l74:
  1167  06B7  0008               	return
  1168  06B8                     __end_of_putch:
  1169  007E                     btemp	set	126	;btemp
  1170  007E                     wtemp0	set	126
  1171                           
  1172                           	psect	config
  1173                           
  1174                           ;Config register CONFIG1 @ 0x2007
  1175                           ;	Oscillator Selection bits
  1176                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1177                           ;	Watchdog Timer Enable bit
  1178                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1179                           ;	Power-up Timer Enable bit
  1180                           ;	PWRTE = OFF, PWRT disabled
  1181                           ;	RE3/MCLR pin function select bit
  1182                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1183                           ;	Code Protection bit
  1184                           ;	CP = OFF, Program memory code protection is disabled
  1185                           ;	Data Code Protection bit
  1186                           ;	CPD = OFF, Data memory code protection is disabled
  1187                           ;	Brown Out Reset Selection bits
  1188                           ;	BOREN = OFF, BOR disabled
  1189                           ;	Internal External Switchover bit
  1190                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1191                           ;	Fail-Safe Clock Monitor Enabled bit
  1192                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1193                           ;	Low Voltage Programming Enable bit
  1194                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1195                           ;	In-Circuit Debugger Mode bit
  1196                           ;	DEBUG = 0x1, unprogrammed default
  1197  2007                     	org	8199
  1198  2007  20D4               	dw	8404
  1199                           
  1200                           ;Config register CONFIG2 @ 0x2008
  1201                           ;	Brown-out Reset Selection bit
  1202                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1203                           ;	Flash Program Memory Self Write Enable bits
  1204                           ;	WRT = OFF, Write protection off
  1205  2008                     	org	8200
  1206  2008  3FFF               	dw	16383

Data Sizes:
    Strings     100
    Constant    0
    Data        96
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0      95
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 50
		 -> STR_2(CODE[50]), STR_1(CODE[50]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_INS
    _INS->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     134
                                              7 COMMON     3     3      0
                                _INS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INS                                                  2     2      0     134
                                              5 COMMON     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16    16      0     134
                                              1 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INS
     _printf
       _putch
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      5F       9       99.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       2       5        2.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6E      12        0.0%
ABS                  0      0      6E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 09 19:58:38 2021

                      _I 0190                        pc 0002                       l80 073A  
                     l74 06B7                       l82 074C                       l59 0738  
                     l88 0784                       u50 06B7                       u51 06B6  
                     u60 06E9                       u61 06E8                       u70 073E  
                     u71 073D                       u80 0748                       u81 0747  
                     u97 06F5                       fsr 0004                      l180 06E9  
                    l810 06AF                      l812 06B1                      l820 0709  
                    l814 06CC                      l830 071B                      l822 0711  
                    l808 06AE                      l816 06D1                      l840 0722  
                    l832 071C                      l824 0712                      l904 0700  
                    l818 06D7                      l850 0729                      l842 0725  
                    l834 071D                      l826 0717                      l860 0732  
                    l852 072A                      l844 0726                      l836 071E  
                    l828 071A                      l926 0779                      l870 0742  
                    l862 0736                      l854 072D                      l846 0727  
                    l838 071F                      l880 0760                      l872 0748  
                    l864 0739                      l856 072E                      l848 0728  
                    l882 0766                      l874 0751                      l858 072F  
                    l884 076C                      l876 0757                      l868 073E  
                    l892 06EA                      l878 075D                      l886 076F  
                    l894 06EF                      l896 06FC                      _INS 0739  
                    fsr0 0004                      indf 0000                     ?_INS 0070  
                   STR_1 0009                     STR_2 003B                     _DATO 007C  
                   _RCIF 0065                     _TXIF 0064                     _main 06EA  
                   btemp 007E                     start 0000                    ??_INS 0075  
                  ?_main 0070                    _ANSEL 0188                    _RCREG 001A  
                  _VALOR 0020                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _TXREG 0019                    _setup 0709                    _putch 06AD  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E4             __end_of_main 0709                   ??_main 0077  
                 ?_setup 0070                   ?_putch 0070                   _ANSELH 0189  
                 _SPBRGH 009A                   _printf 06CB             __pdataCOMMON 007C  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK3 0785  
          __end_of_setup 0739            __end_of_putch 06B8                  ??_setup 0070  
                ??_putch 0070               __pbssBANK0 0020               __pmaintext 06EA  
                ?_printf 0070                  _PUERTOA 007B                  _PUERTOB 007A  
             __stringtab 0003                  __ptext1 0709                  __ptext2 0739  
                __ptext3 06CB                  __ptext4 06AD          __size_of_printf 001F  
           __size_of_INS 004C     end_of_initialization 07FC                _RCSTAbits 0018  
                printf@c 0073                  printf@f 0074                _TRISCbits 0087  
              _TXSTAbits 0098            __pidataCOMMON 06AC              _BAUDCTLbits 0187  
         __end_of_printf 06EA      start_initialization 07E4              __end_of_INS 0785  
             init_fetch0 06B8              __pdataBANK3 0190                 ??_printf 0071  
            __pbssCOMMON 007A                ___latbits 0002                __pstrings 0003  
         __size_of_setup 0030           __size_of_putch 000B                 _PIE1bits 008C  
               _PIR1bits 000C              __stringbase 0008       __end_of__stringtab 0009  
          __size_of_main 001F                putch@DATA 0070               _INTCONbits 000B  
               init_ram0 06BC                stringcode 0003               _OSCCONbits 008F  
               printf@ap 0072                 stringdir 0003                 stringtab 0003  
