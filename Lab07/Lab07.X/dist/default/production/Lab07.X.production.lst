

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 18 20:18:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215                           
   216                           	psect	idataCOMMON
   217  01C5                     __pidataCOMMON:
   218                           
   219                           ;initializer for _DISPLAY
   220  01C5  3401               	retlw	1
   221                           
   222                           	psect	idataBANK0
   223  01BB                     __pidataBANK0:
   224                           
   225                           ;initializer for _NUMEROS
   226  01BB  343F               	retlw	63
   227  01BC  3406               	retlw	6
   228  01BD  345B               	retlw	91
   229  01BE  344F               	retlw	79
   230  01BF  3466               	retlw	102
   231  01C0  346D               	retlw	109
   232  01C1  347D               	retlw	125
   233  01C2  3407               	retlw	7
   234  01C3  347F               	retlw	127
   235  01C4  3467               	retlw	103
   236                           
   237                           	psect	nvCOMMON
   238  0075                     __pnvCOMMON:
   239  0075                     _VAL:
   240  0075                     	ds	1
   241  0076                     _CENTENAS:
   242  0076                     	ds	1
   243                           
   244                           	psect	nvBANK0
   245  0037                     __pnvBANK0:
   246  0037                     _UNIDADES:
   247  0037                     	ds	1
   248  0038                     _DECENAS:
   249  0038                     	ds	1
   250  0006                     _PORTB	set	6
   251  0007                     _PORTC	set	7
   252  0006                     _PORTBbits	set	6
   253  0009                     _PORTEbits	set	9
   254  0008                     _PORTD	set	8
   255  0009                     _PORTE	set	9
   256  0001                     _TMR0	set	1
   257  0005                     _PORTA	set	5
   258  000B                     _INTCONbits	set	11
   259  005A                     _T0IF	set	90
   260  0081                     _OPTION_REGbits	set	129
   261  008F                     _OSCCONbits	set	143
   262  0081                     _OPTION_REG	set	129
   263  0095                     _WPUB	set	149
   264  0096                     _IOCB	set	150
   265  0086                     _TRISB	set	134
   266  0089                     _TRISE	set	137
   267  0088                     _TRISD	set	136
   268  0087                     _TRISC	set	135
   269  0085                     _TRISA	set	133
   270  0189                     _ANSELH	set	393
   271  0188                     _ANSEL	set	392
   272                           
   273                           	psect	cinit
   274  0011                     start_initialization:	
   275                           ; #config settings
   276                           
   277  0011                     __initialization:
   278                           
   279                           ; Initialize objects allocated to BANK0
   280  0011  1383               	bcf	3,7	;select IRP bank0
   281  0012  3037               	movlw	low (__pdataBANK0+10)
   282  0013  00FD               	movwf	btemp+-1
   283  0014  3001               	movlw	high __pidataBANK0
   284  0015  00FE               	movwf	btemp
   285  0016  30BB               	movlw	low __pidataBANK0
   286  0017  00FF               	movwf	btemp+1
   287  0018  302D               	movlw	low __pdataBANK0
   288  0019  0084               	movwf	4
   289  001A  120A  118A  21AC  120A  118A  	fcall	init_ram0
   290                           
   291                           ; Initialize objects allocated to COMMON
   292  001F  120A  118A  21C5  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   293  0024  00F9               	movwf	__pdataCOMMON& (0+127)
   294                           
   295                           ; Clear objects allocated to COMMON
   296  0025  01F7               	clrf	__pbssCOMMON& (0+127)
   297  0026  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   298  0027                     end_of_initialization:	
   299                           ;End of C runtime variable initialization code
   300                           
   301  0027                     __end_of__initialization:
   302  0027  0183               	clrf	3
   303  0028  120A  118A  2994   	ljmp	_main	;jump to C main() function
   304                           
   305                           	psect	bssCOMMON
   306  0077                     __pbssCOMMON:
   307  0077                     _FLAGS:
   308  0077                     	ds	1
   309  0078                     _FLAG:
   310  0078                     	ds	1
   311                           
   312                           	psect	dataCOMMON
   313  0079                     __pdataCOMMON:
   314  0079                     _DISPLAY:
   315  0079                     	ds	1
   316                           
   317                           	psect	dataBANK0
   318  002D                     __pdataBANK0:
   319  002D                     _NUMEROS:
   320  002D                     	ds	10
   321                           
   322                           	psect	inittext
   323  01A8                     init_fetch0:	
   324                           ;	Called with low address in FSR and high address in W
   325                           
   326  01A8  087E               	movf	btemp,w
   327  01A9  008A               	movwf	10
   328  01AA  087F               	movf	btemp+1,w
   329  01AB  0082               	movwf	2
   330  01AC                     init_ram0:	
   331                           ;Called with:
   332                           ;	high address of idata address in btemp 
   333                           ;	low address of idata address in btemp+1 
   334                           ;	low address of data in FSR
   335                           ;	high address + 1 of data in btemp-1
   336                           
   337  01AC  120A  118A  21A8  120A  118A  	fcall	init_fetch0
   338  01B1  0080               	movwf	0
   339  01B2  0A84               	incf	4,f
   340  01B3  0804               	movf	4,w
   341  01B4  067D               	xorwf	btemp+-1,w
   342  01B5  1903               	btfsc	3,2
   343  01B6  3400               	retlw	0
   344  01B7  0AFF               	incf	btemp+1,f
   345  01B8  1903               	btfsc	3,2
   346  01B9  0AFE               	incf	btemp,f
   347  01BA  29AC               	goto	init_ram0
   348                           
   349                           	psect	cstackCOMMON
   350  0070                     __pcstackCOMMON:
   351  0070                     ?_VALORES:
   352  0070                     ?_isr:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ??_isr:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_setup:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_main:	
   362                           ; 1 bytes @ 0x0
   363                           
   364                           
   365                           ; 1 bytes @ 0x0
   366  0070                     	ds	5
   367                           
   368                           	psect	cstackBANK0
   369  0020                     __pcstackBANK0:
   370  0020                     ??_setup:
   371  0020                     ?___bmul:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0020                     ?___awdiv:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0020                     ___bmul@multiplicand:	
   378                           ; 2 bytes @ 0x0
   379                           
   380  0020                     ___awdiv@divisor:	
   381                           ; 1 bytes @ 0x0
   382                           
   383                           
   384                           ; 2 bytes @ 0x0
   385  0020                     	ds	1
   386  0021                     ??___bmul:
   387                           
   388                           ; 1 bytes @ 0x1
   389  0021                     	ds	1
   390  0022                     ___bmul@product:
   391  0022                     ___awdiv@dividend:	
   392                           ; 1 bytes @ 0x2
   393                           
   394                           
   395                           ; 2 bytes @ 0x2
   396  0022                     	ds	1
   397  0023                     ___bmul@multiplier:
   398                           
   399                           ; 1 bytes @ 0x3
   400  0023                     	ds	1
   401  0024                     ??___awdiv:
   402                           
   403                           ; 1 bytes @ 0x4
   404  0024                     	ds	1
   405  0025                     ___awdiv@counter:
   406                           
   407                           ; 1 bytes @ 0x5
   408  0025                     	ds	1
   409  0026                     ___awdiv@sign:
   410                           
   411                           ; 1 bytes @ 0x6
   412  0026                     	ds	1
   413  0027                     ___awdiv@quotient:
   414                           
   415                           ; 2 bytes @ 0x7
   416  0027                     	ds	2
   417  0029                     ??_VALORES:
   418                           
   419                           ; 1 bytes @ 0x9
   420  0029                     	ds	3
   421  002C                     ??_main:
   422                           
   423                           ; 1 bytes @ 0xC
   424  002C                     	ds	1
   425                           
   426                           	psect	maintext
   427  0194                     __pmaintext:	
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   430 ;;
   431 ;; *************** function _main *****************
   432 ;; Defined at:
   433 ;;		line 185 in file "Main7.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : B00/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0
   449 ;;      Temps:          0       1       0       0       0
   450 ;;      Totals:         0       1       0       0       0
   451 ;;Total ram usage:        1 bytes
   452 ;; Hardware stack levels required when called:    3
   453 ;; This function calls:
   454 ;;		_VALORES
   455 ;;		_setup
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _main
   463  0194                     _main:
   464  0194                     l1128:	
   465                           ;incstack = 0
   466                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;Main7.c: 186:     setup();
   470  0194  120A  118A  215A  120A  118A  	fcall	_setup
   471  0199                     l1130:
   472                           
   473                           ;Main7.c: 189:         VAL = PORTC;
   474  0199  1283               	bcf	3,5	;RP0=0, select bank0
   475  019A  1303               	bcf	3,6	;RP1=0, select bank0
   476  019B  0807               	movf	7,w	;volatile
   477  019C  00AC               	movwf	??_main
   478  019D  082C               	movf	??_main,w
   479  019E  00F5               	movwf	_VAL
   480  019F                     l1132:
   481                           
   482                           ;Main7.c: 190:         VALORES(); }
   483  019F  120A  118A  2107  120A  118A  	fcall	_VALORES
   484  01A4  2999               	goto	l1130
   485  01A5  120A  118A  280E   	ljmp	start
   486  01A8                     __end_of_main:
   487                           
   488                           	psect	text1
   489  015A                     __ptext1:	
   490 ;; *************** function _setup *****************
   491 ;; Defined at:
   492 ;;		line 146 in file "Main7.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, status,2
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels used:    1
   512 ;; Hardware stack levels required when called:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _setup
   522  015A                     _setup:
   523  015A                     l1096:	
   524                           ;incstack = 0
   525                           ; Regs used in _setup: [wreg+status,2]
   526                           
   527                           
   528                           ;Main7.c: 148:     ANSEL = 0X00;
   529  015A  1683               	bsf	3,5	;RP0=1, select bank3
   530  015B  1703               	bsf	3,6	;RP1=1, select bank3
   531  015C  0188               	clrf	8	;volatile
   532                           
   533                           ;Main7.c: 149:     ANSELH = 0X00;
   534  015D  0189               	clrf	9	;volatile
   535                           
   536                           ;Main7.c: 151:     TRISA = 0X00;
   537  015E  1683               	bsf	3,5	;RP0=1, select bank1
   538  015F  1303               	bcf	3,6	;RP1=0, select bank1
   539  0160  0185               	clrf	5	;volatile
   540                           
   541                           ;Main7.c: 152:     TRISC = 0X00;
   542  0161  0187               	clrf	7	;volatile
   543                           
   544                           ;Main7.c: 153:     TRISD = 0X00;
   545  0162  0188               	clrf	8	;volatile
   546                           
   547                           ;Main7.c: 154:     TRISE = 0X00;
   548  0163  0189               	clrf	9	;volatile
   549  0164                     l1098:
   550                           
   551                           ;Main7.c: 155:     TRISB = 0B00000011;
   552  0164  3003               	movlw	3
   553  0165  0086               	movwf	6	;volatile
   554  0166                     l1100:
   555                           
   556                           ;Main7.c: 157:     PORTA = 0X00;
   557  0166  1283               	bcf	3,5	;RP0=0, select bank0
   558  0167  1303               	bcf	3,6	;RP1=0, select bank0
   559  0168  0185               	clrf	5	;volatile
   560  0169                     l1102:
   561                           
   562                           ;Main7.c: 158:     PORTB = 0X00;
   563  0169  0186               	clrf	6	;volatile
   564  016A                     l1104:
   565                           
   566                           ;Main7.c: 159:     PORTC = 0X00;
   567  016A  0187               	clrf	7	;volatile
   568  016B                     l1106:
   569                           
   570                           ;Main7.c: 160:     PORTD = 0X00;
   571  016B  0188               	clrf	8	;volatile
   572  016C                     l1108:
   573                           
   574                           ;Main7.c: 161:     PORTE = 0X00;
   575  016C  0189               	clrf	9	;volatile
   576                           
   577                           ;Main7.c: 164:     IOCB = 0B00000011;
   578  016D  3003               	movlw	3
   579  016E  1683               	bsf	3,5	;RP0=1, select bank1
   580  016F  1303               	bcf	3,6	;RP1=0, select bank1
   581  0170  0096               	movwf	22	;volatile
   582                           
   583                           ;Main7.c: 165:     WPUB = 0B00000011;
   584  0171  3003               	movlw	3
   585  0172  0095               	movwf	21	;volatile
   586                           
   587                           ;Main7.c: 167:     OPTION_REG = 0B01010100;
   588  0173  3054               	movlw	84
   589  0174  0081               	movwf	1	;volatile
   590  0175                     l1110:
   591                           
   592                           ;Main7.c: 171:     OSCCONbits.SCS = 1;
   593  0175  140F               	bsf	15,0	;volatile
   594  0176                     l1112:
   595                           
   596                           ;Main7.c: 172:     OPTION_REGbits.nRBPU = 0;
   597  0176  1381               	bcf	1,7	;volatile
   598  0177                     l1114:
   599                           
   600                           ;Main7.c: 174:     INTCONbits.GIE = 1;
   601  0177  178B               	bsf	11,7	;volatile
   602  0178                     l1116:
   603                           
   604                           ;Main7.c: 175:     INTCONbits.RBIE = 1;
   605  0178  158B               	bsf	11,3	;volatile
   606  0179                     l1118:
   607                           
   608                           ;Main7.c: 176:     INTCONbits.T0IE = 1;
   609  0179  168B               	bsf	11,5	;volatile
   610  017A                     l1120:
   611                           
   612                           ;Main7.c: 177:     INTCONbits.RBIF = 0;
   613  017A  100B               	bcf	11,0	;volatile
   614  017B                     l1122:
   615                           
   616                           ;Main7.c: 178:     INTCONbits.T0IF = 0;
   617  017B  110B               	bcf	11,2	;volatile
   618  017C                     l83:
   619  017C  0008               	return
   620  017D                     __end_of_setup:
   621                           
   622                           	psect	text2
   623  0107                     __ptext2:	
   624 ;; *************** function _VALORES *****************
   625 ;; Defined at:
   626 ;;		line 193 in file "Main7.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       3       0       0       0
   643 ;;      Totals:         0       3       0       0       0
   644 ;;Total ram usage:        3 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    2
   647 ;; This function calls:
   648 ;;		___awdiv
   649 ;;		___bmul
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _VALORES
   657  0107                     _VALORES:
   658  0107                     l1124:	
   659                           ;incstack = 0
   660                           ; Regs used in _VALORES: [wreg+status,2+status,0+pclath+cstack]
   661                           
   662                           
   663                           ;Main7.c: 194:     CENTENAS = VAL/100;
   664  0107  3064               	movlw	100
   665  0108  1283               	bcf	3,5	;RP0=0, select bank0
   666  0109  1303               	bcf	3,6	;RP1=0, select bank0
   667  010A  00A0               	movwf	___awdiv@divisor
   668  010B  3000               	movlw	0
   669  010C  00A1               	movwf	___awdiv@divisor+1
   670  010D  0875               	movf	_VAL,w
   671  010E  00A9               	movwf	??_VALORES
   672  010F  01AA               	clrf	??_VALORES+1
   673  0110  0829               	movf	??_VALORES,w
   674  0111  00A2               	movwf	___awdiv@dividend
   675  0112  082A               	movf	??_VALORES+1,w
   676  0113  00A3               	movwf	___awdiv@dividend+1
   677  0114  120A  118A  209E  120A  118A  	fcall	___awdiv
   678  0119  1283               	bcf	3,5	;RP0=0, select bank0
   679  011A  1303               	bcf	3,6	;RP1=0, select bank0
   680  011B  0820               	movf	?___awdiv,w
   681  011C  00AB               	movwf	??_VALORES+2
   682  011D  082B               	movf	??_VALORES+2,w
   683  011E  00F6               	movwf	_CENTENAS
   684                           
   685                           ;Main7.c: 195:     VAL = VAL-CENTENAS*100;
   686  011F  309C               	movlw	156
   687  0120  00A9               	movwf	??_VALORES
   688  0121  0829               	movf	??_VALORES,w
   689  0122  00A0               	movwf	___bmul@multiplicand
   690  0123  0876               	movf	_CENTENAS,w
   691  0124  120A  118A  217D  120A  118A  	fcall	___bmul
   692  0129  0775               	addwf	_VAL,w
   693  012A  1283               	bcf	3,5	;RP0=0, select bank0
   694  012B  1303               	bcf	3,6	;RP1=0, select bank0
   695  012C  00AA               	movwf	??_VALORES+1
   696  012D  082A               	movf	??_VALORES+1,w
   697  012E  00F5               	movwf	_VAL
   698                           
   699                           ;Main7.c: 196:     DECENAS = VAL/10;
   700  012F  300A               	movlw	10
   701  0130  00A0               	movwf	___awdiv@divisor
   702  0131  3000               	movlw	0
   703  0132  00A1               	movwf	___awdiv@divisor+1
   704  0133  0875               	movf	_VAL,w
   705  0134  00A9               	movwf	??_VALORES
   706  0135  01AA               	clrf	??_VALORES+1
   707  0136  0829               	movf	??_VALORES,w
   708  0137  00A2               	movwf	___awdiv@dividend
   709  0138  082A               	movf	??_VALORES+1,w
   710  0139  00A3               	movwf	___awdiv@dividend+1
   711  013A  120A  118A  209E  120A  118A  	fcall	___awdiv
   712  013F  1283               	bcf	3,5	;RP0=0, select bank0
   713  0140  1303               	bcf	3,6	;RP1=0, select bank0
   714  0141  0820               	movf	?___awdiv,w
   715  0142  00AB               	movwf	??_VALORES+2
   716  0143  082B               	movf	??_VALORES+2,w
   717  0144  00B8               	movwf	_DECENAS
   718                           
   719                           ;Main7.c: 197:     VAL = VAL-DECENAS*10;
   720  0145  30F6               	movlw	246
   721  0146  00A9               	movwf	??_VALORES
   722  0147  0829               	movf	??_VALORES,w
   723  0148  00A0               	movwf	___bmul@multiplicand
   724  0149  0838               	movf	_DECENAS,w
   725  014A  120A  118A  217D  120A  118A  	fcall	___bmul
   726  014F  0775               	addwf	_VAL,w
   727  0150  1283               	bcf	3,5	;RP0=0, select bank0
   728  0151  1303               	bcf	3,6	;RP1=0, select bank0
   729  0152  00AA               	movwf	??_VALORES+1
   730  0153  082A               	movf	??_VALORES+1,w
   731  0154  00F5               	movwf	_VAL
   732  0155                     l1126:
   733                           
   734                           ;Main7.c: 198:     UNIDADES = VAL;
   735  0155  0875               	movf	_VAL,w
   736  0156  00A9               	movwf	??_VALORES
   737  0157  0829               	movf	??_VALORES,w
   738  0158  00B7               	movwf	_UNIDADES
   739  0159                     l94:
   740  0159  0008               	return
   741  015A                     __end_of_VALORES:
   742                           
   743                           	psect	text3
   744  017D                     __ptext3:	
   745 ;; *************** function ___bmul *****************
   746 ;; Defined at:
   747 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  multiplier      1    wreg     unsigned char 
   750 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  multiplier      1    3[BANK0 ] unsigned char 
   753 ;;  product         1    2[BANK0 ] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      unsigned char 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       1       0       0       0
   764 ;;      Locals:         0       2       0       0       0
   765 ;;      Temps:          0       1       0       0       0
   766 ;;      Totals:         0       4       0       0       0
   767 ;;Total ram usage:        4 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_VALORES
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function ___bmul
   779  017D                     ___bmul:
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   783                           ;___bmul@multiplier stored from wreg
   784  017D  1283               	bcf	3,5	;RP0=0, select bank0
   785  017E  1303               	bcf	3,6	;RP1=0, select bank0
   786  017F  00A3               	movwf	___bmul@multiplier
   787  0180                     l1038:
   788  0180  01A2               	clrf	___bmul@product
   789  0181                     l1040:
   790  0181  1C23               	btfss	___bmul@multiplier,0
   791  0182  2984               	goto	u371
   792  0183  2985               	goto	u370
   793  0184                     u371:
   794  0184  2989               	goto	l1044
   795  0185                     u370:
   796  0185                     l1042:
   797  0185  0820               	movf	___bmul@multiplicand,w
   798  0186  00A1               	movwf	??___bmul
   799  0187  0821               	movf	??___bmul,w
   800  0188  07A2               	addwf	___bmul@product,f
   801  0189                     l1044:
   802  0189  1003               	clrc
   803  018A  0DA0               	rlf	___bmul@multiplicand,f
   804  018B                     l1046:
   805  018B  1003               	clrc
   806  018C  0CA3               	rrf	___bmul@multiplier,f
   807  018D  0823               	movf	___bmul@multiplier,w
   808  018E  1D03               	btfss	3,2
   809  018F  2991               	goto	u381
   810  0190  2992               	goto	u380
   811  0191                     u381:
   812  0191  2981               	goto	l1040
   813  0192                     u380:
   814  0192                     l1048:
   815  0192  0822               	movf	___bmul@product,w
   816  0193                     l206:
   817  0193  0008               	return
   818  0194                     __end_of___bmul:
   819                           
   820                           	psect	text4
   821  009E                     __ptext4:	
   822 ;; *************** function ___awdiv *****************
   823 ;; Defined at:
   824 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  divisor         2    0[BANK0 ] int 
   827 ;;  dividend        2    2[BANK0 ] int 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  quotient        2    7[BANK0 ] int 
   830 ;;  sign            1    6[BANK0 ] unsigned char 
   831 ;;  counter         1    5[BANK0 ] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  2    0[BANK0 ] int 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       4       0       0       0
   842 ;;      Locals:         0       4       0       0       0
   843 ;;      Temps:          0       1       0       0       0
   844 ;;      Totals:         0       9       0       0       0
   845 ;;Total ram usage:        9 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_VALORES
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function ___awdiv
   857  009E                     ___awdiv:
   858  009E                     l1052:	
   859                           ;incstack = 0
   860                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   861                           
   862  009E  1283               	bcf	3,5	;RP0=0, select bank0
   863  009F  1303               	bcf	3,6	;RP1=0, select bank0
   864  00A0  01A6               	clrf	___awdiv@sign
   865  00A1                     l1054:
   866  00A1  1FA1               	btfss	___awdiv@divisor+1,7
   867  00A2  28A4               	goto	u391
   868  00A3  28A5               	goto	u390
   869  00A4                     u391:
   870  00A4  28AC               	goto	l1060
   871  00A5                     u390:
   872  00A5                     l1056:
   873  00A5  09A0               	comf	___awdiv@divisor,f
   874  00A6  09A1               	comf	___awdiv@divisor+1,f
   875  00A7  0AA0               	incf	___awdiv@divisor,f
   876  00A8  1903               	skipnz
   877  00A9  0AA1               	incf	___awdiv@divisor+1,f
   878  00AA                     l1058:
   879  00AA  01A6               	clrf	___awdiv@sign
   880  00AB  0AA6               	incf	___awdiv@sign,f
   881  00AC                     l1060:
   882  00AC  1FA3               	btfss	___awdiv@dividend+1,7
   883  00AD  28AF               	goto	u401
   884  00AE  28B0               	goto	u400
   885  00AF                     u401:
   886  00AF  28B9               	goto	l1066
   887  00B0                     u400:
   888  00B0                     l1062:
   889  00B0  09A2               	comf	___awdiv@dividend,f
   890  00B1  09A3               	comf	___awdiv@dividend+1,f
   891  00B2  0AA2               	incf	___awdiv@dividend,f
   892  00B3  1903               	skipnz
   893  00B4  0AA3               	incf	___awdiv@dividend+1,f
   894  00B5                     l1064:
   895  00B5  3001               	movlw	1
   896  00B6  00A4               	movwf	??___awdiv
   897  00B7  0824               	movf	??___awdiv,w
   898  00B8  06A6               	xorwf	___awdiv@sign,f
   899  00B9                     l1066:
   900  00B9  01A7               	clrf	___awdiv@quotient
   901  00BA  01A8               	clrf	___awdiv@quotient+1
   902  00BB                     l1068:
   903  00BB  0820               	movf	___awdiv@divisor,w
   904  00BC  0421               	iorwf	___awdiv@divisor+1,w
   905  00BD  1903               	btfsc	3,2
   906  00BE  28C0               	goto	u411
   907  00BF  28C1               	goto	u410
   908  00C0                     u411:
   909  00C0  28F8               	goto	l1088
   910  00C1                     u410:
   911  00C1                     l1070:
   912  00C1  01A5               	clrf	___awdiv@counter
   913  00C2  0AA5               	incf	___awdiv@counter,f
   914  00C3  28CF               	goto	l1076
   915  00C4                     l1072:
   916  00C4  3001               	movlw	1
   917  00C5                     u425:
   918  00C5  1003               	clrc
   919  00C6  0DA0               	rlf	___awdiv@divisor,f
   920  00C7  0DA1               	rlf	___awdiv@divisor+1,f
   921  00C8  3EFF               	addlw	-1
   922  00C9  1D03               	skipz
   923  00CA  28C5               	goto	u425
   924  00CB                     l1074:
   925  00CB  3001               	movlw	1
   926  00CC  00A4               	movwf	??___awdiv
   927  00CD  0824               	movf	??___awdiv,w
   928  00CE  07A5               	addwf	___awdiv@counter,f
   929  00CF                     l1076:
   930  00CF  1FA1               	btfss	___awdiv@divisor+1,7
   931  00D0  28D2               	goto	u431
   932  00D1  28D3               	goto	u430
   933  00D2                     u431:
   934  00D2  28C4               	goto	l1072
   935  00D3                     u430:
   936  00D3                     l1078:
   937  00D3  3001               	movlw	1
   938  00D4                     u445:
   939  00D4  1003               	clrc
   940  00D5  0DA7               	rlf	___awdiv@quotient,f
   941  00D6  0DA8               	rlf	___awdiv@quotient+1,f
   942  00D7  3EFF               	addlw	-1
   943  00D8  1D03               	skipz
   944  00D9  28D4               	goto	u445
   945  00DA  0821               	movf	___awdiv@divisor+1,w
   946  00DB  0223               	subwf	___awdiv@dividend+1,w
   947  00DC  1D03               	skipz
   948  00DD  28E0               	goto	u455
   949  00DE  0820               	movf	___awdiv@divisor,w
   950  00DF  0222               	subwf	___awdiv@dividend,w
   951  00E0                     u455:
   952  00E0  1C03               	skipc
   953  00E1  28E3               	goto	u451
   954  00E2  28E4               	goto	u450
   955  00E3                     u451:
   956  00E3  28EB               	goto	l1084
   957  00E4                     u450:
   958  00E4                     l1080:
   959  00E4  0820               	movf	___awdiv@divisor,w
   960  00E5  02A2               	subwf	___awdiv@dividend,f
   961  00E6  0821               	movf	___awdiv@divisor+1,w
   962  00E7  1C03               	skipc
   963  00E8  03A3               	decf	___awdiv@dividend+1,f
   964  00E9  02A3               	subwf	___awdiv@dividend+1,f
   965  00EA                     l1082:
   966  00EA  1427               	bsf	___awdiv@quotient,0
   967  00EB                     l1084:
   968  00EB  3001               	movlw	1
   969  00EC                     u465:
   970  00EC  1003               	clrc
   971  00ED  0CA1               	rrf	___awdiv@divisor+1,f
   972  00EE  0CA0               	rrf	___awdiv@divisor,f
   973  00EF  3EFF               	addlw	-1
   974  00F0  1D03               	skipz
   975  00F1  28EC               	goto	u465
   976  00F2                     l1086:
   977  00F2  3001               	movlw	1
   978  00F3  02A5               	subwf	___awdiv@counter,f
   979  00F4  1D03               	btfss	3,2
   980  00F5  28F7               	goto	u471
   981  00F6  28F8               	goto	u470
   982  00F7                     u471:
   983  00F7  28D3               	goto	l1078
   984  00F8                     u470:
   985  00F8                     l1088:
   986  00F8  0826               	movf	___awdiv@sign,w
   987  00F9  1903               	btfsc	3,2
   988  00FA  28FC               	goto	u481
   989  00FB  28FD               	goto	u480
   990  00FC                     u481:
   991  00FC  2902               	goto	l1092
   992  00FD                     u480:
   993  00FD                     l1090:
   994  00FD  09A7               	comf	___awdiv@quotient,f
   995  00FE  09A8               	comf	___awdiv@quotient+1,f
   996  00FF  0AA7               	incf	___awdiv@quotient,f
   997  0100  1903               	skipnz
   998  0101  0AA8               	incf	___awdiv@quotient+1,f
   999  0102                     l1092:
  1000  0102  0828               	movf	___awdiv@quotient+1,w
  1001  0103  00A1               	movwf	?___awdiv+1
  1002  0104  0827               	movf	___awdiv@quotient,w
  1003  0105  00A0               	movwf	?___awdiv
  1004  0106                     l333:
  1005  0106  0008               	return
  1006  0107                     __end_of___awdiv:
  1007                           
  1008                           	psect	text5
  1009  002B                     __ptext5:	
  1010 ;; *************** function _isr *****************
  1011 ;; Defined at:
  1012 ;;		line 90 in file "Main7.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          5       0       0       0       0
  1029 ;;      Totals:         5       0       0       0       0
  1030 ;;Total ram usage:        5 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		Interrupt level 1
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           
  1040                           ;psect for function _isr
  1041  002B                     _isr:
  1042  002B                     i1l938:
  1043                           
  1044                           ;Main7.c: 92:     if(T0IF == 1){
  1045  002B  1D0B               	btfss	11,2	;volatile
  1046  002C  282E               	goto	u31_21
  1047  002D  282F               	goto	u31_20
  1048  002E                     u31_21:
  1049  002E  286E               	goto	i1l67
  1050  002F                     u31_20:
  1051  002F                     i1l940:
  1052                           
  1053                           ;Main7.c: 93:        INTCONbits.T0IF = 0;
  1054  002F  110B               	bcf	11,2	;volatile
  1055  0030                     i1l942:
  1056                           
  1057                           ;Main7.c: 94:        PORTA++;
  1058  0030  3001               	movlw	1
  1059  0031  00F0               	movwf	??_isr
  1060  0032  0870               	movf	??_isr,w
  1061  0033  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0034  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0035  0785               	addwf	5,f	;volatile
  1064  0036                     i1l944:
  1065                           
  1066                           ;Main7.c: 95:        TMR0 = 100;
  1067  0036  3064               	movlw	100
  1068  0037  0081               	movwf	1	;volatile
  1069                           
  1070                           ;Main7.c: 97:        switch(DISPLAY){
  1071  0038  285A               	goto	i1l972
  1072  0039                     i1l946:
  1073                           
  1074                           ;Main7.c: 99:             PORTE = 0X00;
  1075  0039  0189               	clrf	9	;volatile
  1076  003A                     i1l948:
  1077                           
  1078                           ;Main7.c: 100:             PORTD = NUMEROS[CENTENAS];
  1079  003A  0876               	movf	_CENTENAS,w
  1080  003B  3E2D               	addlw	(low (_NUMEROS| 0))& (0+255)
  1081  003C  0084               	movwf	4
  1082  003D  1383               	bcf	3,7	;select IRP bank0
  1083  003E  0800               	movf	0,w
  1084  003F  0088               	movwf	8	;volatile
  1085  0040                     i1l950:
  1086                           
  1087                           ;Main7.c: 101:             PORTEbits.RE0 = 1;
  1088  0040  1409               	bsf	9,0	;volatile
  1089  0041                     i1l952:
  1090                           
  1091                           ;Main7.c: 102:             DISPLAY++;
  1092  0041  3001               	movlw	1
  1093  0042  00F0               	movwf	??_isr
  1094  0043  0870               	movf	??_isr,w
  1095  0044  07F9               	addwf	_DISPLAY,f
  1096                           
  1097                           ;Main7.c: 103:             break;
  1098  0045  286D               	goto	i1l70
  1099  0046                     i1l954:
  1100                           
  1101                           ;Main7.c: 105:             PORTE = 0X00;
  1102  0046  0189               	clrf	9	;volatile
  1103  0047                     i1l956:
  1104                           
  1105                           ;Main7.c: 106:             PORTD = NUMEROS[DECENAS];
  1106  0047  0838               	movf	_DECENAS,w
  1107  0048  3E2D               	addlw	(low (_NUMEROS| 0))& (0+255)
  1108  0049  0084               	movwf	4
  1109  004A  1383               	bcf	3,7	;select IRP bank0
  1110  004B  0800               	movf	0,w
  1111  004C  0088               	movwf	8	;volatile
  1112  004D                     i1l958:
  1113                           
  1114                           ;Main7.c: 107:             PORTEbits.RE1 = 1;
  1115  004D  1489               	bsf	9,1	;volatile
  1116  004E  2841               	goto	i1l952
  1117  004F                     i1l962:
  1118                           
  1119                           ;Main7.c: 111:             PORTE = 0X00;
  1120  004F  0189               	clrf	9	;volatile
  1121  0050                     i1l964:
  1122                           
  1123                           ;Main7.c: 112:             PORTD = NUMEROS[UNIDADES];
  1124  0050  0837               	movf	_UNIDADES,w
  1125  0051  3E2D               	addlw	(low (_NUMEROS| 0))& (0+255)
  1126  0052  0084               	movwf	4
  1127  0053  1383               	bcf	3,7	;select IRP bank0
  1128  0054  0800               	movf	0,w
  1129  0055  0088               	movwf	8	;volatile
  1130  0056                     i1l966:
  1131                           
  1132                           ;Main7.c: 113:             PORTEbits.RE2 = 1;
  1133  0056  1509               	bsf	9,2	;volatile
  1134  0057                     i1l968:
  1135                           
  1136                           ;Main7.c: 114:             DISPLAY = 1;
  1137  0057  01F9               	clrf	_DISPLAY
  1138  0058  0AF9               	incf	_DISPLAY,f
  1139                           
  1140                           ;Main7.c: 115:             break;
  1141  0059  286D               	goto	i1l70
  1142  005A                     i1l972:
  1143  005A  0879               	movf	_DISPLAY,w
  1144  005B  00F0               	movwf	??_isr
  1145  005C  01F1               	clrf	??_isr+1
  1146                           
  1147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1148                           ; Switch size 1, requested type "simple"
  1149                           ; Number of cases is 1, Range of values is 0 to 0
  1150                           ; switch strategies available:
  1151                           ; Name         Instructions Cycles
  1152                           ; simple_byte            4     3 (average)
  1153                           ; direct_byte           11     8 (fixed)
  1154                           ; jumptable            260     6 (fixed)
  1155                           ;	Chosen strategy is simple_byte
  1156  005D  0871               	movf	??_isr+1,w
  1157  005E  3A00               	xorlw	0	; case 0
  1158  005F  1903               	skipnz
  1159  0060  2862               	goto	i1l1164
  1160  0061  286D               	goto	i1l70
  1161  0062                     i1l1164:
  1162                           
  1163                           ; Switch size 1, requested type "simple"
  1164                           ; Number of cases is 3, Range of values is 1 to 3
  1165                           ; switch strategies available:
  1166                           ; Name         Instructions Cycles
  1167                           ; simple_byte           10     6 (average)
  1168                           ; direct_byte           20    11 (fixed)
  1169                           ; jumptable            263     9 (fixed)
  1170                           ;	Chosen strategy is simple_byte
  1171  0062  0870               	movf	??_isr,w
  1172  0063  3A01               	xorlw	1	; case 1
  1173  0064  1903               	skipnz
  1174  0065  2839               	goto	i1l946
  1175  0066  3A03               	xorlw	3	; case 2
  1176  0067  1903               	skipnz
  1177  0068  2846               	goto	i1l954
  1178  0069  3A01               	xorlw	1	; case 3
  1179  006A  1903               	skipnz
  1180  006B  284F               	goto	i1l962
  1181  006C  286D               	goto	i1l70
  1182  006D                     i1l70:
  1183                           
  1184                           ;Main7.c: 117:        INTCONbits.T0IF = 0;
  1185  006D  110B               	bcf	11,2	;volatile
  1186  006E                     i1l67:	
  1187                           ;Main7.c: 118:                  }
  1188                           
  1189                           
  1190                           ;Main7.c: 120:     if(INTCONbits.RBIF == 1){
  1191  006E  1C0B               	btfss	11,0	;volatile
  1192  006F  2871               	goto	u32_21
  1193  0070  2872               	goto	u32_20
  1194  0071                     u32_21:
  1195  0071  2895               	goto	i1l80
  1196  0072                     u32_20:
  1197  0072                     i1l974:
  1198                           
  1199                           ;Main7.c: 121:         if(PORTBbits.RB0 == 0){
  1200  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0074  1806               	btfsc	6,0	;volatile
  1203  0075  2877               	goto	u33_21
  1204  0076  2878               	goto	u33_20
  1205  0077                     u33_21:
  1206  0077  287B               	goto	i1l978
  1207  0078                     u33_20:
  1208  0078                     i1l976:
  1209                           
  1210                           ;Main7.c: 122:             FLAG = 1;}
  1211  0078  01F8               	clrf	_FLAG
  1212  0079  0AF8               	incf	_FLAG,f
  1213  007A  2885               	goto	i1l984
  1214  007B                     i1l978:
  1215                           
  1216                           ;Main7.c: 124:             if(FLAG == 1){
  1217  007B  0378               	decf	_FLAG,w
  1218  007C  1D03               	btfss	3,2
  1219  007D  287F               	goto	u34_21
  1220  007E  2880               	goto	u34_20
  1221  007F                     u34_21:
  1222  007F  2885               	goto	i1l984
  1223  0080                     u34_20:
  1224  0080                     i1l980:
  1225                           
  1226                           ;Main7.c: 125:                 FLAG = 0;
  1227  0080  01F8               	clrf	_FLAG
  1228  0081                     i1l982:
  1229                           
  1230                           ;Main7.c: 126:                 PORTC++;
  1231  0081  3001               	movlw	1
  1232  0082  00F0               	movwf	??_isr
  1233  0083  0870               	movf	??_isr,w
  1234  0084  0787               	addwf	7,f	;volatile
  1235  0085                     i1l984:
  1236                           
  1237                           ;Main7.c: 129:         if(PORTBbits.RB1 == 0){
  1238  0085  1886               	btfsc	6,1	;volatile
  1239  0086  2888               	goto	u35_21
  1240  0087  2889               	goto	u35_20
  1241  0088                     u35_21:
  1242  0088  288C               	goto	i1l988
  1243  0089                     u35_20:
  1244  0089                     i1l986:
  1245                           
  1246                           ;Main7.c: 130:             FLAGS = 1;
  1247  0089  01F7               	clrf	_FLAGS
  1248  008A  0AF7               	incf	_FLAGS,f
  1249                           
  1250                           ;Main7.c: 131:         }
  1251  008B  2894               	goto	i1l994
  1252  008C                     i1l988:
  1253                           
  1254                           ;Main7.c: 133:             if(FLAGS == 1){
  1255  008C  0377               	decf	_FLAGS,w
  1256  008D  1D03               	btfss	3,2
  1257  008E  2890               	goto	u36_21
  1258  008F  2891               	goto	u36_20
  1259  0090                     u36_21:
  1260  0090  2894               	goto	i1l994
  1261  0091                     u36_20:
  1262  0091                     i1l990:
  1263                           
  1264                           ;Main7.c: 134:                 FLAGS = 0;
  1265  0091  01F7               	clrf	_FLAGS
  1266  0092                     i1l992:
  1267                           
  1268                           ;Main7.c: 135:                 PORTC--;
  1269  0092  3001               	movlw	1
  1270  0093  0287               	subwf	7,f	;volatile
  1271  0094                     i1l994:
  1272                           
  1273                           ;Main7.c: 138:         INTCONbits.RBIF = 0;
  1274  0094  100B               	bcf	11,0	;volatile
  1275  0095                     i1l80:
  1276  0095  0874               	movf	??_isr+4,w
  1277  0096  008A               	movwf	10
  1278  0097  0873               	movf	??_isr+3,w
  1279  0098  0084               	movwf	4
  1280  0099  0E72               	swapf	??_isr+2,w
  1281  009A  0083               	movwf	3
  1282  009B  0EFE               	swapf	btemp,f
  1283  009C  0E7E               	swapf	btemp,w
  1284  009D  0009               	retfie
  1285  009E                     __end_of_isr:
  1286  007E                     btemp	set	126	;btemp
  1287  007E                     wtemp0	set	126
  1288                           
  1289                           	psect	intentry
  1290  0004                     __pintentry:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1293                           
  1294  0004                     interrupt_function:
  1295  007E                     saved_w	set	btemp
  1296  0004  00FE               	movwf	btemp
  1297  0005  0E03               	swapf	3,w
  1298  0006  00F2               	movwf	??_isr+2
  1299  0007  0804               	movf	4,w
  1300  0008  00F3               	movwf	??_isr+3
  1301  0009  080A               	movf	10,w
  1302  000A  00F4               	movwf	??_isr+4
  1303  000B  120A  118A  282B   	ljmp	_isr
  1304                           
  1305                           	psect	config
  1306                           
  1307                           ;Config register CONFIG1 @ 0x2007
  1308                           ;	Oscillator Selection bits
  1309                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1310                           ;	Watchdog Timer Enable bit
  1311                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1312                           ;	Power-up Timer Enable bit
  1313                           ;	PWRTE = OFF, PWRT disabled
  1314                           ;	RE3/MCLR pin function select bit
  1315                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1316                           ;	Code Protection bit
  1317                           ;	CP = OFF, Program memory code protection is disabled
  1318                           ;	Data Code Protection bit
  1319                           ;	CPD = OFF, Data memory code protection is disabled
  1320                           ;	Brown Out Reset Selection bits
  1321                           ;	BOREN = OFF, BOR disabled
  1322                           ;	Internal External Switchover bit
  1323                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1324                           ;	Fail-Safe Clock Monitor Enabled bit
  1325                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1326                           ;	Low Voltage Programming Enable bit
  1327                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1328                           ;	In-Circuit Debugger Mode bit
  1329                           ;	DEBUG = 0x1, unprogrammed default
  1330  2007                     	org	8199
  1331  2007  20D4               	dw	8404
  1332                           
  1333                           ;Config register CONFIG2 @ 0x2008
  1334                           ;	Brown-out Reset Selection bit
  1335                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1336                           ;	Flash Program Memory Self Write Enable bits
  1337                           ;	WRT = OFF, Write protection off
  1338  2008                     	org	8200
  1339  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     13      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_VALORES
    _VALORES->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1121
                                             12 BANK0      1     1      0
                            _VALORES
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VALORES                                              3     3      0    1121
                                              9 BANK0      3     3      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _VALORES
     ___awdiv
     ___bmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 18 20:18:47 2021

                      pc 0002           ___bmul@product 0022                       l83 017C  
                     l94 0159             ___awdiv@sign 0026                       fsr 0004  
                    l206 0193                      l333 0106                      u400 00B0  
                    u401 00AF                      u410 00C1                      u411 00C0  
                    u430 00D3                      u431 00D2                      u425 00C5  
                    u450 00E4                      u370 0185                      u451 00E3  
                    u371 0184                      u380 0192                      u445 00D4  
                    u381 0191                      u470 00F8                      u390 00A5  
                    u471 00F7                      u455 00E0                      u391 00A4  
                    u480 00FD                      u481 00FC                      u465 00EC  
                    _VAL 0075                      _isr 002B                      fsr0 0004  
                    indf 0000                     l1100 0166                     l1110 0175  
                   l1102 0169                     l1040 0181                     l1120 017A  
                   l1112 0176                     l1104 016A                     l1042 0185  
                   l1122 017B                     l1114 0177                     l1106 016B  
                   l1130 0199                     l1060 00AC                     l1052 009E  
                   l1044 0189                     l1124 0107                     l1116 0178  
                   l1108 016C                     l1132 019F                     l1070 00C1  
                   l1062 00B0                     l1054 00A1                     l1046 018B  
                   l1038 0180                     l1126 0155                     l1118 0179  
                   l1080 00E4                     l1072 00C4                     l1064 00B5  
                   l1056 00A5                     l1048 0192                     l1128 0194  
                   l1090 00FD                     l1082 00EA                     l1074 00CB  
                   l1066 00B9                     l1058 00AA                     l1092 0102  
                   l1084 00EB                     l1076 00CF                     l1068 00BB  
                   l1086 00F2                     l1078 00D3                     l1088 00F8  
                   l1096 015A                     l1098 0164                     ?_isr 0070  
                   _FLAG 0078                     _T0IF 005A                     _IOCB 0096  
                   i1l70 006D                     i1l80 0095                     i1l67 006E  
                   _TMR0 0001                     _WPUB 0095          __end_of_VALORES 015A  
                   _main 0194                     btemp 007E                     start 000E  
      ___bmul@multiplier 0023                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 0107                    _ANSEL 0188                    _FLAGS 0077  
        ___awdiv@divisor 0020                    i1l940 002F                    i1l950 0040  
                  i1l942 0030                    i1l952 0041                    i1l944 0036  
                  i1l962 004F                    i1l954 0046                    i1l946 0039  
                  i1l938 002B                    i1l980 0080                    i1l964 0050  
                  i1l956 0047                    i1l948 003A                    i1l972 005A  
                  i1l990 0091                    i1l982 0081                    i1l974 0072  
                  i1l966 0056                    i1l958 004D                    i1l992 0092  
                  i1l984 0085                    i1l976 0078                    i1l968 0057  
                  i1l994 0094                    i1l986 0089                    i1l978 007B  
                  i1l988 008C          ___awdiv@counter 0025                    u31_20 002F  
                  u31_21 002E                    u32_20 0072                    u32_21 0071  
                  u33_20 0078                    u33_21 0077                    u34_20 0080  
                  u34_21 007F                    u35_20 0089                    u35_21 0088  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u36_20 0091  
                  u36_21 0090                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _setup 015A                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01A8  
                 ??_main 002C                ??_VALORES 0029         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1164 0062  
                 ___bmul 017D                ??___awdiv 0024         ___awdiv@quotient 0027  
           __pdataCOMMON 0079                   saved_w 007E  __end_of__initialization 0027  
    ___bmul@multiplicand 0020           __pcstackCOMMON 0070             __pidataBANK0 01BB  
          __end_of_setup 017D           _OPTION_REGbits 0081                  ??_setup 0020  
             __pnvCOMMON 0075               __pmaintext 0194                  ?___bmul 0020  
             __pintentry 0004                  _DECENAS 0038                  _DISPLAY 0079  
                _VALORES 0107                  _NUMEROS 002D          __size_of___bmul 0017  
                ___awdiv 009E                  __ptext1 015A                  __ptext2 0107  
                __ptext3 017D                  __ptext4 009E                  __ptext5 002B  
           __size_of_isr 0073     end_of_initialization 0027                _PORTBbits 0006  
              _PORTEbits 0009           __end_of___bmul 0194            __pidataCOMMON 01C5  
    start_initialization 0011              __end_of_isr 009E                 ??___bmul 0021  
             init_fetch0 01A8              __pdataBANK0 002D              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020                 ?_VALORES 0070  
              __pnvBANK0 0037                 ?___awdiv 0020                 _CENTENAS 0076  
         __size_of_setup 0023        interrupt_function 0004                 _UNIDADES 0037  
       __size_of_VALORES 0053         __size_of___awdiv 0069            __size_of_main 0014  
             _INTCONbits 000B                 init_ram0 01AC                 intlevel1 0000  
             _OSCCONbits 008F               _OPTION_REG 0081  
