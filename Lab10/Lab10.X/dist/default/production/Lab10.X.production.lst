

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon May 03 23:22:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205                           
   206                           	psect	idataCOMMON
   207  0079                     __pidataCOMMON:
   208                           
   209                           ;initializer for _DATO
   210  0079  3461               	retlw	97
   211  007A  3400               	retlw	0
   212  0019                     _TXREG	set	25
   213  0018                     _RCSTAbits	set	24
   214  000B                     _INTCONbits	set	11
   215  0006                     _PORTB	set	6
   216  001A                     _RCREG	set	26
   217  0005                     _PORTA	set	5
   218  000C                     _PIR1bits	set	12
   219  009A                     _SPBRGH	set	154
   220  0099                     _SPBRG	set	153
   221  0098                     _TXSTAbits	set	152
   222  008C                     _PIE1bits	set	140
   223  008F                     _OSCCONbits	set	143
   224  0087                     _TRISCbits	set	135
   225  0086                     _TRISB	set	134
   226  0085                     _TRISA	set	133
   227  0187                     _BAUDCTLbits	set	391
   228  0189                     _ANSELH	set	393
   229  0188                     _ANSEL	set	392
   230                           
   231                           	psect	cinit
   232  000F                     start_initialization:	
   233                           ; #config settings
   234                           
   235  000F                     __initialization:
   236                           
   237                           ; Initialize objects allocated to COMMON
   238  000F  120A  118A  2079  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   239  0014  00F5               	movwf	__pdataCOMMON& (0+127)
   240  0015  120A  118A  207A  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   241  001A  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   242  001B                     end_of_initialization:	
   243                           ;End of C runtime variable initialization code
   244                           
   245  001B                     __end_of__initialization:
   246  001B  0183               	clrf	3
   247  001C  120A  118A  284C   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	dataCOMMON
   250  0075                     __pdataCOMMON:
   251  0075                     _DATO:
   252  0075                     	ds	2
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:
   256  0070                     ?_isr:
   257  0070                     ??_isr:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_setup:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 1 bytes @ 0x0
   268  0070                     	ds	2
   269  0072                     ??_setup:
   270  0072                     ??_main:	
   271                           ; 1 bytes @ 0x2
   272                           
   273                           
   274                           ; 1 bytes @ 0x2
   275  0072                     	ds	3
   276                           
   277                           	psect	maintext
   278  004C                     __pmaintext:	
   279 ;;
   280 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   281 ;;
   282 ;; *************** function _main *****************
   283 ;; Defined at:
   284 ;;		line 112 in file "Main10.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;		None
   287 ;; Auto vars:     Size  Location     Type
   288 ;;		None
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, status,2, status,0, pclath, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : B00/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   298 ;;      Params:         0       0       0       0       0
   299 ;;      Locals:         0       0       0       0       0
   300 ;;      Temps:          3       0       0       0       0
   301 ;;      Totals:         3       0       0       0       0
   302 ;;Total ram usage:        3 bytes
   303 ;; Hardware stack levels required when called:    2
   304 ;; This function calls:
   305 ;;		_setup
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _main
   313  004C                     _main:
   314  004C                     l692:	
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   317                           
   318                           
   319                           ;Main10.c: 113:     setup();
   320  004C  120A  118A  201F  120A  118A  	fcall	_setup
   321  0051                     l694:
   322                           
   323                           ;Main10.c: 115:         _delay((unsigned long)((500)*(4000000/4000.0)));
   324  0051  3003               	movlw	3
   325  0052  00F4               	movwf	??_main+2
   326  0053  308A               	movlw	138
   327  0054  00F3               	movwf	??_main+1
   328  0055  3055               	movlw	85
   329  0056  00F2               	movwf	??_main
   330  0057                     u37:
   331  0057  0BF2               	decfsz	??_main,f
   332  0058  2857               	goto	u37
   333  0059  0BF3               	decfsz	??_main+1,f
   334  005A  2857               	goto	u37
   335  005B  0BF4               	decfsz	??_main+2,f
   336  005C  2857               	goto	u37
   337  005D  285E               	nop2
   338  005E                     l696:
   339                           
   340                           ;Main10.c: 116:          if (PIR1bits.TXIF == 1){
   341  005E  1283               	bcf	3,5	;RP0=0, select bank0
   342  005F  1303               	bcf	3,6	;RP1=0, select bank0
   343  0060  1E0C               	btfss	12,4	;volatile
   344  0061  2863               	goto	u21
   345  0062  2864               	goto	u20
   346  0063                     u21:
   347  0063  2851               	goto	l694
   348  0064                     u20:
   349  0064                     l698:
   350                           
   351                           ;Main10.c: 117:              TXREG = DATO;
   352  0064  3061               	movlw	97
   353  0065  0099               	movwf	25	;volatile
   354  0066  2851               	goto	l694
   355  0067  120A  118A  280C   	ljmp	start
   356  006A                     __end_of_main:
   357                           
   358                           	psect	text1
   359  001F                     __ptext1:	
   360 ;; *************** function _setup *****************
   361 ;; Defined at:
   362 ;;		line 71 in file "Main10.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used:    1
   382 ;; Hardware stack levels required when called:    1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _setup
   392  001F                     _setup:
   393  001F                     l650:	
   394                           ;incstack = 0
   395                           ; Regs used in _setup: [wreg+status,2]
   396                           
   397                           
   398                           ;Main10.c: 73:     ANSEL = 0X00;
   399  001F  1683               	bsf	3,5	;RP0=1, select bank3
   400  0020  1703               	bsf	3,6	;RP1=1, select bank3
   401  0021  0188               	clrf	8	;volatile
   402                           
   403                           ;Main10.c: 74:     ANSELH = 0X00;
   404  0022  0189               	clrf	9	;volatile
   405                           
   406                           ;Main10.c: 76:     TRISA = 0x00;
   407  0023  1683               	bsf	3,5	;RP0=1, select bank1
   408  0024  1303               	bcf	3,6	;RP1=0, select bank1
   409  0025  0185               	clrf	5	;volatile
   410                           
   411                           ;Main10.c: 77:     TRISB = 0X00;
   412  0026  0186               	clrf	6	;volatile
   413  0027                     l652:
   414                           
   415                           ;Main10.c: 78:     TRISCbits.TRISC6 = 0;
   416  0027  1307               	bcf	7,6	;volatile
   417  0028                     l654:
   418                           
   419                           ;Main10.c: 79:     TRISCbits.TRISC7 = 1;
   420  0028  1787               	bsf	7,7	;volatile
   421                           
   422                           ;Main10.c: 81:     PORTA = 0X00;
   423  0029  1283               	bcf	3,5	;RP0=0, select bank0
   424  002A  1303               	bcf	3,6	;RP1=0, select bank0
   425  002B  0185               	clrf	5	;volatile
   426                           
   427                           ;Main10.c: 82:     PORTB = 0X00;
   428  002C  0186               	clrf	6	;volatile
   429  002D                     l656:
   430                           
   431                           ;Main10.c: 85:     OSCCONbits.SCS = 1;
   432  002D  1683               	bsf	3,5	;RP0=1, select bank1
   433  002E  1303               	bcf	3,6	;RP1=0, select bank1
   434  002F  140F               	bsf	15,0	;volatile
   435  0030                     l658:
   436                           
   437                           ;Main10.c: 86:     INTCONbits.GIE = 1;
   438  0030  178B               	bsf	11,7	;volatile
   439  0031                     l660:
   440                           
   441                           ;Main10.c: 87:     INTCONbits.PEIE = 1;
   442  0031  170B               	bsf	11,6	;volatile
   443  0032                     l662:
   444                           
   445                           ;Main10.c: 90:     PIR1bits.RCIF = 0;
   446  0032  1283               	bcf	3,5	;RP0=0, select bank0
   447  0033  1303               	bcf	3,6	;RP1=0, select bank0
   448  0034  128C               	bcf	12,5	;volatile
   449  0035                     l664:
   450                           
   451                           ;Main10.c: 91:     PIE1bits.RCIE = 1;
   452  0035  1683               	bsf	3,5	;RP0=1, select bank1
   453  0036  1303               	bcf	3,6	;RP1=0, select bank1
   454  0037  168C               	bsf	12,5	;volatile
   455  0038                     l666:
   456                           
   457                           ;Main10.c: 92:     PIE1bits.TXIE = 0;
   458  0038  120C               	bcf	12,4	;volatile
   459  0039                     l668:
   460                           
   461                           ;Main10.c: 93:     TXSTAbits.TX9 = 0;
   462  0039  1318               	bcf	24,6	;volatile
   463  003A                     l670:
   464                           
   465                           ;Main10.c: 94:     TXSTAbits.TXEN = 1;
   466  003A  1698               	bsf	24,5	;volatile
   467  003B                     l672:
   468                           
   469                           ;Main10.c: 95:     TXSTAbits.SYNC = 0;
   470  003B  1218               	bcf	24,4	;volatile
   471  003C                     l674:
   472                           
   473                           ;Main10.c: 96:     TXSTAbits.BRGH = 1;
   474  003C  1518               	bsf	24,2	;volatile
   475  003D                     l676:
   476                           
   477                           ;Main10.c: 97:     RCSTAbits.RX9 = 0;
   478  003D  1283               	bcf	3,5	;RP0=0, select bank0
   479  003E  1303               	bcf	3,6	;RP1=0, select bank0
   480  003F  1318               	bcf	24,6	;volatile
   481  0040                     l678:
   482                           
   483                           ;Main10.c: 98:     RCSTAbits.CREN = 1;
   484  0040  1618               	bsf	24,4	;volatile
   485  0041                     l680:
   486                           
   487                           ;Main10.c: 99:     RCSTAbits.SPEN = 1;
   488  0041  1798               	bsf	24,7	;volatile
   489  0042                     l682:
   490                           
   491                           ;Main10.c: 103:     BAUDCTLbits.BRG16 = 0;
   492  0042  1683               	bsf	3,5	;RP0=1, select bank3
   493  0043  1703               	bsf	3,6	;RP1=1, select bank3
   494  0044  1187               	bcf	7,3	;volatile
   495  0045                     l684:
   496                           
   497                           ;Main10.c: 104:     SPBRG = 25;
   498  0045  3019               	movlw	25
   499  0046  1683               	bsf	3,5	;RP0=1, select bank1
   500  0047  1303               	bcf	3,6	;RP1=0, select bank1
   501  0048  0099               	movwf	25	;volatile
   502  0049                     l686:
   503                           
   504                           ;Main10.c: 105:     SPBRGH = 1;
   505  0049  3001               	movlw	1
   506  004A  009A               	movwf	26	;volatile
   507  004B                     l49:
   508  004B  0008               	return
   509  004C                     __end_of_setup:
   510                           
   511                           	psect	text2
   512  006A                     __ptext2:	
   513 ;; *************** function _isr *****************
   514 ;; Defined at:
   515 ;;		line 61 in file "Main10.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          2       0       0       0       0
   532 ;;      Totals:         2       0       0       0       0
   533 ;;Total ram usage:        2 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		Interrupt level 1
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           
   543                           ;psect for function _isr
   544  006A                     _isr:
   545  006A                     i1l688:
   546                           
   547                           ;Main10.c: 62:     if(PIR1bits.RCIF == 1){
   548  006A  1283               	bcf	3,5	;RP0=0, select bank0
   549  006B  1303               	bcf	3,6	;RP1=0, select bank0
   550  006C  1E8C               	btfss	12,5	;volatile
   551  006D  286F               	goto	u1_21
   552  006E  2870               	goto	u1_20
   553  006F                     u1_21:
   554  006F  2872               	goto	i1l46
   555  0070                     u1_20:
   556  0070                     i1l690:
   557                           
   558                           ;Main10.c: 63:         PORTA = RCREG;
   559  0070  081A               	movf	26,w	;volatile
   560  0071  0085               	movwf	5	;volatile
   561  0072                     i1l46:
   562  0072  0871               	movf	??_isr+1,w
   563  0073  008A               	movwf	10
   564  0074  0E70               	swapf	??_isr,w
   565  0075  0083               	movwf	3
   566  0076  0EFE               	swapf	btemp,f
   567  0077  0E7E               	swapf	btemp,w
   568  0078  0009               	retfie
   569  0079                     __end_of_isr:
   570  007E                     btemp	set	126	;btemp
   571  007E                     wtemp0	set	126
   572                           
   573                           	psect	intentry
   574  0004                     __pintentry:	
   575                           ;incstack = 0
   576                           ; Regs used in _isr: [wreg]
   577                           
   578  0004                     interrupt_function:
   579  007E                     saved_w	set	btemp
   580  0004  00FE               	movwf	btemp
   581  0005  0E03               	swapf	3,w
   582  0006  00F0               	movwf	??_isr
   583  0007  080A               	movf	10,w
   584  0008  00F1               	movwf	??_isr+1
   585  0009  120A  118A  286A   	ljmp	_isr
   586                           
   587                           	psect	config
   588                           
   589                           ;Config register CONFIG1 @ 0x2007
   590                           ;	Oscillator Selection bits
   591                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   592                           ;	Watchdog Timer Enable bit
   593                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   594                           ;	Power-up Timer Enable bit
   595                           ;	PWRTE = OFF, PWRT disabled
   596                           ;	RE3/MCLR pin function select bit
   597                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   598                           ;	Code Protection bit
   599                           ;	CP = OFF, Program memory code protection is disabled
   600                           ;	Data Code Protection bit
   601                           ;	CPD = OFF, Data memory code protection is disabled
   602                           ;	Brown Out Reset Selection bits
   603                           ;	BOREN = OFF, BOR disabled
   604                           ;	Internal External Switchover bit
   605                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   606                           ;	Fail-Safe Clock Monitor Enabled bit
   607                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   608                           ;	Low Voltage Programming Enable bit
   609                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   610                           ;	In-Circuit Debugger Mode bit
   611                           ;	DEBUG = 0x1, unprogrammed default
   612  2007                     	org	8199
   613  2007  20D4               	dw	8404
   614                           
   615                           ;Config register CONFIG2 @ 0x2008
   616                           ;	Brown-out Reset Selection bit
   617                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   618                           ;	Flash Program Memory Self Write Enable bits
   619                           ;	WRT = OFF, Write protection off
   620  2008                     	org	8200
   621  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       7      12        0.0%
ABS                  0      0       7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon May 03 23:22:43 2021

                     l49 004B                       u20 0064                       u21 0063  
                     u37 0057                      l650 001F                      l660 0031  
                    l652 0027                      l670 003A                      l662 0032  
                    l654 0028                      l680 0041                      l672 003B  
                    l664 0035                      l656 002D                      l682 0042  
                    l674 003C                      l666 0038                      l658 0030  
                    l684 0045                      l676 003D                      l668 0039  
                    l692 004C                      l686 0049                      l678 0040  
                    l694 0051                      l696 005E                      l698 0064  
                    _isr 006A                     ?_isr 0070                     _DATO 0075  
                   i1l46 0072                     u1_20 0070                     u1_21 006F  
                   _main 004C                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l690 0070                    i1l688 006A                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 0019  
                  _setup 001F                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 006A  
                 ??_main 0072                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A             __pdataCOMMON 0075                   saved_w 007E  
__end_of__initialization 001B           __pcstackCOMMON 0070            __end_of_setup 004C  
                ??_setup 0072               __pmaintext 004C               __pintentry 0004  
                __ptext1 001F                  __ptext2 006A             __size_of_isr 000F  
   end_of_initialization 001B                _RCSTAbits 0018                _TRISCbits 0087  
              _TXSTAbits 0098            __pidataCOMMON 0079              _BAUDCTLbits 0187  
    start_initialization 000F              __end_of_isr 0079                ___latbits 0002  
         __size_of_setup 002D        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C            __size_of_main 001E               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F  
