

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 18 18:49:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  01C7                     __pidataBANK0:
   216                           
   217                           ;initializer for _NUMEROS
   218  01C7  343F               	retlw	63
   219  01C8  3406               	retlw	6
   220  01C9  345B               	retlw	91
   221  01CA  344F               	retlw	79
   222  01CB  3466               	retlw	102
   223  01CC  346D               	retlw	109
   224  01CD  347D               	retlw	125
   225  01CE  3407               	retlw	7
   226  01CF  347F               	retlw	127
   227  01D0  3467               	retlw	103
   228                           
   229                           ;initializer for _DISPLAY
   230  01D1  3401               	retlw	1
   231                           
   232                           	psect	nvCOMMON
   233  0079                     __pnvCOMMON:
   234  0079                     _VAL:
   235  0079                     	ds	1
   236  0009                     _PORTE	set	9
   237  0006                     _PORTB	set	6
   238  0009                     _PORTEbits	set	9
   239  0008                     _PORTD	set	8
   240  0007                     _PORTC	set	7
   241  0006                     _PORTBbits	set	6
   242  0001                     _TMR0	set	1
   243  0005                     _PORTA	set	5
   244  000B                     _INTCONbits	set	11
   245  005A                     _T0IF	set	90
   246  0081                     _OPTION_REGbits	set	129
   247  008F                     _OSCCONbits	set	143
   248  0081                     _OPTION_REG	set	129
   249  0095                     _WPUB	set	149
   250  0096                     _IOCB	set	150
   251  0086                     _TRISB	set	134
   252  0088                     _TRISD	set	136
   253  0087                     _TRISC	set	135
   254  0085                     _TRISA	set	133
   255  0189                     _ANSELH	set	393
   256  0188                     _ANSEL	set	392
   257                           
   258                           	psect	cinit
   259  0011                     start_initialization:	
   260                           ; #config settings
   261                           
   262  0011                     __initialization:
   263                           
   264                           ; Initialize objects allocated to BANK0
   265  0011  1383               	bcf	3,7	;select IRP bank0
   266  0012  3038               	movlw	low (__pdataBANK0+11)
   267  0013  00FD               	movwf	btemp+-1
   268  0014  3001               	movlw	high __pidataBANK0
   269  0015  00FE               	movwf	btemp
   270  0016  30C7               	movlw	low __pidataBANK0
   271  0017  00FF               	movwf	btemp+1
   272  0018  302D               	movlw	low __pdataBANK0
   273  0019  0084               	movwf	4
   274  001A  120A  118A  21B8  120A  118A  	fcall	init_ram0
   275                           
   276                           ; Clear objects allocated to BANK0
   277  001F  01B8               	clrf	__pbssBANK0& (0+127)
   278                           
   279                           ; Clear objects allocated to COMMON
   280  0020  01F5               	clrf	__pbssCOMMON& (0+127)
   281  0021  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   282  0022  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   283  0023  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   284  0024                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  0024                     __end_of__initialization:
   288  0024  0183               	clrf	3
   289  0025  120A  118A  29A0   	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMMON
   292  0075                     __pbssCOMMON:
   293  0075                     _DECENAS:
   294  0075                     	ds	1
   295  0076                     _CENTENAS:
   296  0076                     	ds	1
   297  0077                     _FLAGS:
   298  0077                     	ds	1
   299  0078                     _FLAG:
   300  0078                     	ds	1
   301                           
   302                           	psect	bssBANK0
   303  0038                     __pbssBANK0:
   304  0038                     _UNIDADES:
   305  0038                     	ds	1
   306                           
   307                           	psect	dataBANK0
   308  002D                     __pdataBANK0:
   309  002D                     _NUMEROS:
   310  002D                     	ds	10
   311  0037                     _DISPLAY:
   312  0037                     	ds	1
   313                           
   314                           	psect	inittext
   315  01B4                     init_fetch0:	
   316                           ;	Called with low address in FSR and high address in W
   317                           
   318  01B4  087E               	movf	btemp,w
   319  01B5  008A               	movwf	10
   320  01B6  087F               	movf	btemp+1,w
   321  01B7  0082               	movwf	2
   322  01B8                     init_ram0:	
   323                           ;Called with:
   324                           ;	high address of idata address in btemp 
   325                           ;	low address of idata address in btemp+1 
   326                           ;	low address of data in FSR
   327                           ;	high address + 1 of data in btemp-1
   328                           
   329  01B8  120A  118A  21B4  120A  118A  	fcall	init_fetch0
   330  01BD  0080               	movwf	0
   331  01BE  0A84               	incf	4,f
   332  01BF  0804               	movf	4,w
   333  01C0  067D               	xorwf	btemp+-1,w
   334  01C1  1903               	btfsc	3,2
   335  01C2  3400               	retlw	0
   336  01C3  0AFF               	incf	btemp+1,f
   337  01C4  1903               	btfsc	3,2
   338  01C5  0AFE               	incf	btemp,f
   339  01C6  29B8               	goto	init_ram0
   340                           
   341                           	psect	cstackCOMMON
   342  0070                     __pcstackCOMMON:
   343  0070                     ?_VALORES:
   344  0070                     ?_isr:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_isr:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_setup:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356                           
   357                           ; 1 bytes @ 0x0
   358  0070                     	ds	5
   359                           
   360                           	psect	cstackBANK0
   361  0020                     __pcstackBANK0:
   362  0020                     ??_setup:
   363  0020                     ?___bmul:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0020                     ?___awdiv:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0020                     ___bmul@multiplicand:	
   370                           ; 2 bytes @ 0x0
   371                           
   372  0020                     ___awdiv@divisor:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 2 bytes @ 0x0
   377  0020                     	ds	1
   378  0021                     ??___bmul:
   379                           
   380                           ; 1 bytes @ 0x1
   381  0021                     	ds	1
   382  0022                     ___bmul@product:
   383  0022                     ___awdiv@dividend:	
   384                           ; 1 bytes @ 0x2
   385                           
   386                           
   387                           ; 2 bytes @ 0x2
   388  0022                     	ds	1
   389  0023                     ___bmul@multiplier:
   390                           
   391                           ; 1 bytes @ 0x3
   392  0023                     	ds	1
   393  0024                     ??___awdiv:
   394                           
   395                           ; 1 bytes @ 0x4
   396  0024                     	ds	1
   397  0025                     ___awdiv@counter:
   398                           
   399                           ; 1 bytes @ 0x5
   400  0025                     	ds	1
   401  0026                     ___awdiv@sign:
   402                           
   403                           ; 1 bytes @ 0x6
   404  0026                     	ds	1
   405  0027                     ___awdiv@quotient:
   406                           
   407                           ; 2 bytes @ 0x7
   408  0027                     	ds	2
   409  0029                     ??_VALORES:
   410                           
   411                           ; 1 bytes @ 0x9
   412  0029                     	ds	3
   413  002C                     ??_main:
   414                           
   415                           ; 1 bytes @ 0xC
   416  002C                     	ds	1
   417                           
   418                           	psect	maintext
   419  01A0                     __pmaintext:	
   420 ;;
   421 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   422 ;;
   423 ;; *************** function _main *****************
   424 ;; Defined at:
   425 ;;		line 173 in file "Main7.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, pclath, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : B00/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0
   441 ;;      Temps:          0       1       0       0       0
   442 ;;      Totals:         0       1       0       0       0
   443 ;;Total ram usage:        1 bytes
   444 ;; Hardware stack levels required when called:    3
   445 ;; This function calls:
   446 ;;		_VALORES
   447 ;;		_setup
   448 ;; This function is called by:
   449 ;;		Startup code after reset
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           
   454                           ;psect for function _main
   455  01A0                     _main:
   456  01A0                     l1143:	
   457                           ;incstack = 0
   458                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   459                           
   460                           
   461                           ;Main7.c: 174:     setup();
   462  01A0  120A  118A  2167  120A  118A  	fcall	_setup
   463  01A5                     l1145:
   464                           
   465                           ;Main7.c: 177:         VAL = PORTC;
   466  01A5  1283               	bcf	3,5	;RP0=0, select bank0
   467  01A6  1303               	bcf	3,6	;RP1=0, select bank0
   468  01A7  0807               	movf	7,w	;volatile
   469  01A8  00AC               	movwf	??_main
   470  01A9  082C               	movf	??_main,w
   471  01AA  00F9               	movwf	_VAL
   472  01AB                     l1147:
   473                           
   474                           ;Main7.c: 178:         VALORES(); }
   475  01AB  120A  118A  2103  120A  118A  	fcall	_VALORES
   476  01B0  29A5               	goto	l1145
   477  01B1  120A  118A  280E   	ljmp	start
   478  01B4                     __end_of_main:
   479                           
   480                           	psect	text1
   481  0167                     __ptext1:	
   482 ;; *************** function _setup *****************
   483 ;; Defined at:
   484 ;;		line 135 in file "Main7.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function _setup
   514  0167                     _setup:
   515  0167                     l1105:	
   516                           ;incstack = 0
   517                           ; Regs used in _setup: [wreg+status,2]
   518                           
   519                           
   520                           ;Main7.c: 137:     ANSEL = 0X00;
   521  0167  1683               	bsf	3,5	;RP0=1, select bank3
   522  0168  1703               	bsf	3,6	;RP1=1, select bank3
   523  0169  0188               	clrf	8	;volatile
   524                           
   525                           ;Main7.c: 138:     ANSELH = 0X00;
   526  016A  0189               	clrf	9	;volatile
   527                           
   528                           ;Main7.c: 140:     TRISA = 0X00;
   529  016B  1683               	bsf	3,5	;RP0=1, select bank1
   530  016C  1303               	bcf	3,6	;RP1=0, select bank1
   531  016D  0185               	clrf	5	;volatile
   532                           
   533                           ;Main7.c: 141:     TRISC = 0X00;
   534  016E  0187               	clrf	7	;volatile
   535                           
   536                           ;Main7.c: 142:     TRISD = 0X00;
   537  016F  0188               	clrf	8	;volatile
   538  0170                     l1107:
   539                           
   540                           ;Main7.c: 143:     TRISB = 0B00000011;
   541  0170  3003               	movlw	3
   542  0171  0086               	movwf	6	;volatile
   543  0172                     l1109:
   544                           
   545                           ;Main7.c: 145:     PORTA = 0X00;
   546  0172  1283               	bcf	3,5	;RP0=0, select bank0
   547  0173  1303               	bcf	3,6	;RP1=0, select bank0
   548  0174  0185               	clrf	5	;volatile
   549  0175                     l1111:
   550                           
   551                           ;Main7.c: 146:     PORTB = 0X00;
   552  0175  0186               	clrf	6	;volatile
   553  0176                     l1113:
   554                           
   555                           ;Main7.c: 147:     PORTC = 0X00;
   556  0176  0187               	clrf	7	;volatile
   557  0177                     l1115:
   558                           
   559                           ;Main7.c: 148:     PORTD = 0X00;
   560  0177  0188               	clrf	8	;volatile
   561  0178                     l1117:
   562                           
   563                           ;Main7.c: 149:     PORTE = 0X00;
   564  0178  0189               	clrf	9	;volatile
   565                           
   566                           ;Main7.c: 152:     IOCB = 0B00000011;
   567  0179  3003               	movlw	3
   568  017A  1683               	bsf	3,5	;RP0=1, select bank1
   569  017B  1303               	bcf	3,6	;RP1=0, select bank1
   570  017C  0096               	movwf	22	;volatile
   571                           
   572                           ;Main7.c: 153:     WPUB = 0B00000011;
   573  017D  3003               	movlw	3
   574  017E  0095               	movwf	21	;volatile
   575                           
   576                           ;Main7.c: 155:     OPTION_REG = 0B01010100;
   577  017F  3054               	movlw	84
   578  0180  0081               	movwf	1	;volatile
   579  0181                     l1119:
   580                           
   581                           ;Main7.c: 159:     OSCCONbits.SCS = 1;
   582  0181  140F               	bsf	15,0	;volatile
   583  0182                     l1121:
   584                           
   585                           ;Main7.c: 160:     OPTION_REGbits.nRBPU = 0;
   586  0182  1381               	bcf	1,7	;volatile
   587  0183                     l1123:
   588                           
   589                           ;Main7.c: 162:     INTCONbits.GIE = 1;
   590  0183  178B               	bsf	11,7	;volatile
   591  0184                     l1125:
   592                           
   593                           ;Main7.c: 163:     INTCONbits.RBIE = 1;
   594  0184  158B               	bsf	11,3	;volatile
   595  0185                     l1127:
   596                           
   597                           ;Main7.c: 164:     INTCONbits.T0IE = 1;
   598  0185  168B               	bsf	11,5	;volatile
   599  0186                     l1129:
   600                           
   601                           ;Main7.c: 165:     INTCONbits.RBIF = 0;
   602  0186  100B               	bcf	11,0	;volatile
   603  0187                     l1131:
   604                           
   605                           ;Main7.c: 166:     INTCONbits.T0IF = 0;
   606  0187  110B               	bcf	11,2	;volatile
   607  0188                     l81:
   608  0188  0008               	return
   609  0189                     __end_of_setup:
   610                           
   611                           	psect	text2
   612  0103                     __ptext2:	
   613 ;; *************** function _VALORES *****************
   614 ;; Defined at:
   615 ;;		line 181 in file "Main7.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          0       3       0       0       0
   632 ;;      Totals:         0       3       0       0       0
   633 ;;Total ram usage:        3 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    2
   636 ;; This function calls:
   637 ;;		___awdiv
   638 ;;		___bmul
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           
   645                           ;psect for function _VALORES
   646  0103                     _VALORES:
   647  0103                     l1133:	
   648                           ;incstack = 0
   649                           ; Regs used in _VALORES: [wreg+status,2+status,0+pclath+cstack]
   650                           
   651                           
   652                           ;Main7.c: 182:     if(VAL >= 100){
   653  0103  3064               	movlw	100
   654  0104  0279               	subwf	_VAL,w
   655  0105  1C03               	skipc
   656  0106  2908               	goto	u531
   657  0107  2909               	goto	u530
   658  0108                     u531:
   659  0108  2931               	goto	l1137
   660  0109                     u530:
   661  0109                     l1135:
   662                           
   663                           ;Main7.c: 183:         CENTENAS = VAL/100;
   664  0109  3064               	movlw	100
   665  010A  1283               	bcf	3,5	;RP0=0, select bank0
   666  010B  1303               	bcf	3,6	;RP1=0, select bank0
   667  010C  00A0               	movwf	___awdiv@divisor
   668  010D  3000               	movlw	0
   669  010E  00A1               	movwf	___awdiv@divisor+1
   670  010F  0879               	movf	_VAL,w
   671  0110  00A9               	movwf	??_VALORES
   672  0111  01AA               	clrf	??_VALORES+1
   673  0112  0829               	movf	??_VALORES,w
   674  0113  00A2               	movwf	___awdiv@dividend
   675  0114  082A               	movf	??_VALORES+1,w
   676  0115  00A3               	movwf	___awdiv@dividend+1
   677  0116  120A  118A  209A  120A  118A  	fcall	___awdiv
   678  011B  1283               	bcf	3,5	;RP0=0, select bank0
   679  011C  1303               	bcf	3,6	;RP1=0, select bank0
   680  011D  0820               	movf	?___awdiv,w
   681  011E  00AB               	movwf	??_VALORES+2
   682  011F  082B               	movf	??_VALORES+2,w
   683  0120  00F6               	movwf	_CENTENAS
   684                           
   685                           ;Main7.c: 184:         VAL = VAL-CENTENAS*100;
   686  0121  309C               	movlw	156
   687  0122  00A9               	movwf	??_VALORES
   688  0123  0829               	movf	??_VALORES,w
   689  0124  00A0               	movwf	___bmul@multiplicand
   690  0125  0876               	movf	_CENTENAS,w
   691  0126  120A  118A  2189  120A  118A  	fcall	___bmul
   692  012B  0779               	addwf	_VAL,w
   693  012C  1283               	bcf	3,5	;RP0=0, select bank0
   694  012D  1303               	bcf	3,6	;RP1=0, select bank0
   695  012E  00AA               	movwf	??_VALORES+1
   696  012F  082A               	movf	??_VALORES+1,w
   697  0130  00F9               	movwf	_VAL
   698  0131                     l1137:
   699                           
   700                           ;Main7.c: 186:     if(VAL >= 10){
   701  0131  300A               	movlw	10
   702  0132  0279               	subwf	_VAL,w
   703  0133  1C03               	skipc
   704  0134  2936               	goto	u541
   705  0135  2937               	goto	u540
   706  0136                     u541:
   707  0136  2960               	goto	l1141
   708  0137                     u540:
   709  0137                     l1139:
   710                           
   711                           ;Main7.c: 187:         DECENAS = VAL/10;
   712  0137  300A               	movlw	10
   713  0138  1283               	bcf	3,5	;RP0=0, select bank0
   714  0139  1303               	bcf	3,6	;RP1=0, select bank0
   715  013A  00A0               	movwf	___awdiv@divisor
   716  013B  3000               	movlw	0
   717  013C  00A1               	movwf	___awdiv@divisor+1
   718  013D  0879               	movf	_VAL,w
   719  013E  00A9               	movwf	??_VALORES
   720  013F  01AA               	clrf	??_VALORES+1
   721  0140  0829               	movf	??_VALORES,w
   722  0141  00A2               	movwf	___awdiv@dividend
   723  0142  082A               	movf	??_VALORES+1,w
   724  0143  00A3               	movwf	___awdiv@dividend+1
   725  0144  120A  118A  209A  120A  118A  	fcall	___awdiv
   726  0149  1283               	bcf	3,5	;RP0=0, select bank0
   727  014A  1303               	bcf	3,6	;RP1=0, select bank0
   728  014B  0820               	movf	?___awdiv,w
   729  014C  00AB               	movwf	??_VALORES+2
   730  014D  082B               	movf	??_VALORES+2,w
   731  014E  00F5               	movwf	_DECENAS
   732                           
   733                           ;Main7.c: 188:         VAL = VAL-DECENAS*10;
   734  014F  30F6               	movlw	246
   735  0150  00A9               	movwf	??_VALORES
   736  0151  0829               	movf	??_VALORES,w
   737  0152  00A0               	movwf	___bmul@multiplicand
   738  0153  0875               	movf	_DECENAS,w
   739  0154  120A  118A  2189  120A  118A  	fcall	___bmul
   740  0159  0779               	addwf	_VAL,w
   741  015A  1283               	bcf	3,5	;RP0=0, select bank0
   742  015B  1303               	bcf	3,6	;RP1=0, select bank0
   743  015C  00AA               	movwf	??_VALORES+1
   744  015D  082A               	movf	??_VALORES+1,w
   745  015E  00F9               	movwf	_VAL
   746                           
   747                           ;Main7.c: 189:         }
   748  015F  2966               	goto	l95
   749  0160                     l1141:
   750                           
   751                           ;Main7.c: 191:         UNIDADES = VAL;
   752  0160  0879               	movf	_VAL,w
   753  0161  1283               	bcf	3,5	;RP0=0, select bank0
   754  0162  1303               	bcf	3,6	;RP1=0, select bank0
   755  0163  00A9               	movwf	??_VALORES
   756  0164  0829               	movf	??_VALORES,w
   757  0165  00B8               	movwf	_UNIDADES
   758  0166                     l95:
   759  0166  0008               	return
   760  0167                     __end_of_VALORES:
   761                           
   762                           	psect	text3
   763  0189                     __ptext3:	
   764 ;; *************** function ___bmul *****************
   765 ;; Defined at:
   766 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  multiplier      1    wreg     unsigned char 
   769 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  multiplier      1    3[BANK0 ] unsigned char 
   772 ;;  product         1    2[BANK0 ] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      unsigned char 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       1       0       0       0
   783 ;;      Locals:         0       2       0       0       0
   784 ;;      Temps:          0       1       0       0       0
   785 ;;      Totals:         0       4       0       0       0
   786 ;;Total ram usage:        4 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    1
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_VALORES
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function ___bmul
   798  0189                     ___bmul:
   799                           
   800                           ;incstack = 0
   801                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   802                           ;___bmul@multiplier stored from wreg
   803  0189  1283               	bcf	3,5	;RP0=0, select bank0
   804  018A  1303               	bcf	3,6	;RP1=0, select bank0
   805  018B  00A3               	movwf	___bmul@multiplier
   806  018C                     l1047:
   807  018C  01A2               	clrf	___bmul@product
   808  018D                     l1049:
   809  018D  1C23               	btfss	___bmul@multiplier,0
   810  018E  2990               	goto	u411
   811  018F  2991               	goto	u410
   812  0190                     u411:
   813  0190  2995               	goto	l1053
   814  0191                     u410:
   815  0191                     l1051:
   816  0191  0820               	movf	___bmul@multiplicand,w
   817  0192  00A1               	movwf	??___bmul
   818  0193  0821               	movf	??___bmul,w
   819  0194  07A2               	addwf	___bmul@product,f
   820  0195                     l1053:
   821  0195  1003               	clrc
   822  0196  0DA0               	rlf	___bmul@multiplicand,f
   823  0197                     l1055:
   824  0197  1003               	clrc
   825  0198  0CA3               	rrf	___bmul@multiplier,f
   826  0199  0823               	movf	___bmul@multiplier,w
   827  019A  1D03               	btfss	3,2
   828  019B  299D               	goto	u421
   829  019C  299E               	goto	u420
   830  019D                     u421:
   831  019D  298D               	goto	l1049
   832  019E                     u420:
   833  019E                     l1057:
   834  019E  0822               	movf	___bmul@product,w
   835  019F                     l207:
   836  019F  0008               	return
   837  01A0                     __end_of___bmul:
   838                           
   839                           	psect	text4
   840  009A                     __ptext4:	
   841 ;; *************** function ___awdiv *****************
   842 ;; Defined at:
   843 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;  divisor         2    0[BANK0 ] int 
   846 ;;  dividend        2    2[BANK0 ] int 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  quotient        2    7[BANK0 ] int 
   849 ;;  sign            1    6[BANK0 ] unsigned char 
   850 ;;  counter         1    5[BANK0 ] unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  2    0[BANK0 ] int 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   860 ;;      Params:         0       4       0       0       0
   861 ;;      Locals:         0       4       0       0       0
   862 ;;      Temps:          0       1       0       0       0
   863 ;;      Totals:         0       9       0       0       0
   864 ;;Total ram usage:        9 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_VALORES
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function ___awdiv
   876  009A                     ___awdiv:
   877  009A                     l1061:	
   878                           ;incstack = 0
   879                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   880                           
   881  009A  1283               	bcf	3,5	;RP0=0, select bank0
   882  009B  1303               	bcf	3,6	;RP1=0, select bank0
   883  009C  01A6               	clrf	___awdiv@sign
   884  009D                     l1063:
   885  009D  1FA1               	btfss	___awdiv@divisor+1,7
   886  009E  28A0               	goto	u431
   887  009F  28A1               	goto	u430
   888  00A0                     u431:
   889  00A0  28A8               	goto	l1069
   890  00A1                     u430:
   891  00A1                     l1065:
   892  00A1  09A0               	comf	___awdiv@divisor,f
   893  00A2  09A1               	comf	___awdiv@divisor+1,f
   894  00A3  0AA0               	incf	___awdiv@divisor,f
   895  00A4  1903               	skipnz
   896  00A5  0AA1               	incf	___awdiv@divisor+1,f
   897  00A6                     l1067:
   898  00A6  01A6               	clrf	___awdiv@sign
   899  00A7  0AA6               	incf	___awdiv@sign,f
   900  00A8                     l1069:
   901  00A8  1FA3               	btfss	___awdiv@dividend+1,7
   902  00A9  28AB               	goto	u441
   903  00AA  28AC               	goto	u440
   904  00AB                     u441:
   905  00AB  28B5               	goto	l1075
   906  00AC                     u440:
   907  00AC                     l1071:
   908  00AC  09A2               	comf	___awdiv@dividend,f
   909  00AD  09A3               	comf	___awdiv@dividend+1,f
   910  00AE  0AA2               	incf	___awdiv@dividend,f
   911  00AF  1903               	skipnz
   912  00B0  0AA3               	incf	___awdiv@dividend+1,f
   913  00B1                     l1073:
   914  00B1  3001               	movlw	1
   915  00B2  00A4               	movwf	??___awdiv
   916  00B3  0824               	movf	??___awdiv,w
   917  00B4  06A6               	xorwf	___awdiv@sign,f
   918  00B5                     l1075:
   919  00B5  01A7               	clrf	___awdiv@quotient
   920  00B6  01A8               	clrf	___awdiv@quotient+1
   921  00B7                     l1077:
   922  00B7  0820               	movf	___awdiv@divisor,w
   923  00B8  0421               	iorwf	___awdiv@divisor+1,w
   924  00B9  1903               	btfsc	3,2
   925  00BA  28BC               	goto	u451
   926  00BB  28BD               	goto	u450
   927  00BC                     u451:
   928  00BC  28F4               	goto	l1097
   929  00BD                     u450:
   930  00BD                     l1079:
   931  00BD  01A5               	clrf	___awdiv@counter
   932  00BE  0AA5               	incf	___awdiv@counter,f
   933  00BF  28CB               	goto	l1085
   934  00C0                     l1081:
   935  00C0  3001               	movlw	1
   936  00C1                     u465:
   937  00C1  1003               	clrc
   938  00C2  0DA0               	rlf	___awdiv@divisor,f
   939  00C3  0DA1               	rlf	___awdiv@divisor+1,f
   940  00C4  3EFF               	addlw	-1
   941  00C5  1D03               	skipz
   942  00C6  28C1               	goto	u465
   943  00C7                     l1083:
   944  00C7  3001               	movlw	1
   945  00C8  00A4               	movwf	??___awdiv
   946  00C9  0824               	movf	??___awdiv,w
   947  00CA  07A5               	addwf	___awdiv@counter,f
   948  00CB                     l1085:
   949  00CB  1FA1               	btfss	___awdiv@divisor+1,7
   950  00CC  28CE               	goto	u471
   951  00CD  28CF               	goto	u470
   952  00CE                     u471:
   953  00CE  28C0               	goto	l1081
   954  00CF                     u470:
   955  00CF                     l1087:
   956  00CF  3001               	movlw	1
   957  00D0                     u485:
   958  00D0  1003               	clrc
   959  00D1  0DA7               	rlf	___awdiv@quotient,f
   960  00D2  0DA8               	rlf	___awdiv@quotient+1,f
   961  00D3  3EFF               	addlw	-1
   962  00D4  1D03               	skipz
   963  00D5  28D0               	goto	u485
   964  00D6  0821               	movf	___awdiv@divisor+1,w
   965  00D7  0223               	subwf	___awdiv@dividend+1,w
   966  00D8  1D03               	skipz
   967  00D9  28DC               	goto	u495
   968  00DA  0820               	movf	___awdiv@divisor,w
   969  00DB  0222               	subwf	___awdiv@dividend,w
   970  00DC                     u495:
   971  00DC  1C03               	skipc
   972  00DD  28DF               	goto	u491
   973  00DE  28E0               	goto	u490
   974  00DF                     u491:
   975  00DF  28E7               	goto	l1093
   976  00E0                     u490:
   977  00E0                     l1089:
   978  00E0  0820               	movf	___awdiv@divisor,w
   979  00E1  02A2               	subwf	___awdiv@dividend,f
   980  00E2  0821               	movf	___awdiv@divisor+1,w
   981  00E3  1C03               	skipc
   982  00E4  03A3               	decf	___awdiv@dividend+1,f
   983  00E5  02A3               	subwf	___awdiv@dividend+1,f
   984  00E6                     l1091:
   985  00E6  1427               	bsf	___awdiv@quotient,0
   986  00E7                     l1093:
   987  00E7  3001               	movlw	1
   988  00E8                     u505:
   989  00E8  1003               	clrc
   990  00E9  0CA1               	rrf	___awdiv@divisor+1,f
   991  00EA  0CA0               	rrf	___awdiv@divisor,f
   992  00EB  3EFF               	addlw	-1
   993  00EC  1D03               	skipz
   994  00ED  28E8               	goto	u505
   995  00EE                     l1095:
   996  00EE  3001               	movlw	1
   997  00EF  02A5               	subwf	___awdiv@counter,f
   998  00F0  1D03               	btfss	3,2
   999  00F1  28F3               	goto	u511
  1000  00F2  28F4               	goto	u510
  1001  00F3                     u511:
  1002  00F3  28CF               	goto	l1087
  1003  00F4                     u510:
  1004  00F4                     l1097:
  1005  00F4  0826               	movf	___awdiv@sign,w
  1006  00F5  1903               	btfsc	3,2
  1007  00F6  28F8               	goto	u521
  1008  00F7  28F9               	goto	u520
  1009  00F8                     u521:
  1010  00F8  28FE               	goto	l1101
  1011  00F9                     u520:
  1012  00F9                     l1099:
  1013  00F9  09A7               	comf	___awdiv@quotient,f
  1014  00FA  09A8               	comf	___awdiv@quotient+1,f
  1015  00FB  0AA7               	incf	___awdiv@quotient,f
  1016  00FC  1903               	skipnz
  1017  00FD  0AA8               	incf	___awdiv@quotient+1,f
  1018  00FE                     l1101:
  1019  00FE  0828               	movf	___awdiv@quotient+1,w
  1020  00FF  00A1               	movwf	?___awdiv+1
  1021  0100  0827               	movf	___awdiv@quotient,w
  1022  0101  00A0               	movwf	?___awdiv
  1023  0102                     l334:
  1024  0102  0008               	return
  1025  0103                     __end_of___awdiv:
  1026                           
  1027                           	psect	text5
  1028  0028                     __ptext5:	
  1029 ;; *************** function _isr *****************
  1030 ;; Defined at:
  1031 ;;		line 83 in file "Main7.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0
  1047 ;;      Temps:          5       0       0       0       0
  1048 ;;      Totals:         5       0       0       0       0
  1049 ;;Total ram usage:        5 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		Interrupt level 1
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           
  1059                           ;psect for function _isr
  1060  0028                     _isr:
  1061  0028                     i1l949:
  1062                           
  1063                           ;Main7.c: 85:     if(T0IF == 1){
  1064  0028  1D0B               	btfss	11,2	;volatile
  1065  0029  282B               	goto	u35_21
  1066  002A  282C               	goto	u35_20
  1067  002B                     u35_21:
  1068  002B  2836               	goto	i1l959
  1069  002C                     u35_20:
  1070  002C                     i1l951:
  1071                           
  1072                           ;Main7.c: 86:        INTCONbits.T0IF = 0;
  1073  002C  110B               	bcf	11,2	;volatile
  1074  002D                     i1l953:
  1075                           
  1076                           ;Main7.c: 87:        PORTA++;
  1077  002D  3001               	movlw	1
  1078  002E  00F0               	movwf	??_isr
  1079  002F  0870               	movf	??_isr,w
  1080  0030  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0031  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0032  0785               	addwf	5,f	;volatile
  1083  0033                     i1l955:
  1084                           
  1085                           ;Main7.c: 88:        TMR0 = 100;
  1086  0033  3064               	movlw	100
  1087  0034  0081               	movwf	1	;volatile
  1088  0035                     i1l957:
  1089                           
  1090                           ;Main7.c: 89:        INTCONbits.T0IF = 0;
  1091  0035  110B               	bcf	11,2	;volatile
  1092  0036                     i1l959:
  1093                           
  1094                           ;Main7.c: 92:     if(INTCONbits.RBIF == 1){
  1095  0036  1C0B               	btfss	11,0	;volatile
  1096  0037  2839               	goto	u36_21
  1097  0038  283A               	goto	u36_20
  1098  0039                     u36_21:
  1099  0039  287C               	goto	i1l1003
  1100  003A                     u36_20:
  1101  003A                     i1l961:
  1102                           
  1103                           ;Main7.c: 93:         if(PORTBbits.RB0 == 0){
  1104  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1105  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1106  003C  1806               	btfsc	6,0	;volatile
  1107  003D  283F               	goto	u37_21
  1108  003E  2840               	goto	u37_20
  1109  003F                     u37_21:
  1110  003F  2843               	goto	i1l965
  1111  0040                     u37_20:
  1112  0040                     i1l963:
  1113                           
  1114                           ;Main7.c: 94:             FLAG = 1;}
  1115  0040  01F8               	clrf	_FLAG
  1116  0041  0AF8               	incf	_FLAG,f
  1117  0042  284D               	goto	i1l971
  1118  0043                     i1l965:
  1119                           
  1120                           ;Main7.c: 96:             if(FLAG == 1){
  1121  0043  0378               	decf	_FLAG,w
  1122  0044  1D03               	btfss	3,2
  1123  0045  2847               	goto	u38_21
  1124  0046  2848               	goto	u38_20
  1125  0047                     u38_21:
  1126  0047  284D               	goto	i1l971
  1127  0048                     u38_20:
  1128  0048                     i1l967:
  1129                           
  1130                           ;Main7.c: 97:                 FLAG = 0;
  1131  0048  01F8               	clrf	_FLAG
  1132  0049                     i1l969:
  1133                           
  1134                           ;Main7.c: 98:                 PORTC++;
  1135  0049  3001               	movlw	1
  1136  004A  00F0               	movwf	??_isr
  1137  004B  0870               	movf	??_isr,w
  1138  004C  0787               	addwf	7,f	;volatile
  1139  004D                     i1l971:
  1140                           
  1141                           ;Main7.c: 101:         if(PORTBbits.RB1 == 0){
  1142  004D  1886               	btfsc	6,1	;volatile
  1143  004E  2850               	goto	u39_21
  1144  004F  2851               	goto	u39_20
  1145  0050                     u39_21:
  1146  0050  2854               	goto	i1l975
  1147  0051                     u39_20:
  1148  0051                     i1l973:
  1149                           
  1150                           ;Main7.c: 102:             FLAGS = 1;
  1151  0051  01F7               	clrf	_FLAGS
  1152  0052  0AF7               	incf	_FLAGS,f
  1153                           
  1154                           ;Main7.c: 103:         }
  1155  0053  285C               	goto	i1l981
  1156  0054                     i1l975:
  1157                           
  1158                           ;Main7.c: 105:             if(FLAGS == 1){
  1159  0054  0377               	decf	_FLAGS,w
  1160  0055  1D03               	btfss	3,2
  1161  0056  2858               	goto	u40_21
  1162  0057  2859               	goto	u40_20
  1163  0058                     u40_21:
  1164  0058  285C               	goto	i1l981
  1165  0059                     u40_20:
  1166  0059                     i1l977:
  1167                           
  1168                           ;Main7.c: 106:                 FLAGS = 0;
  1169  0059  01F7               	clrf	_FLAGS
  1170  005A                     i1l979:
  1171                           
  1172                           ;Main7.c: 107:                 PORTC--;
  1173  005A  3001               	movlw	1
  1174  005B  0287               	subwf	7,f	;volatile
  1175  005C                     i1l981:
  1176                           
  1177                           ;Main7.c: 110:         INTCONbits.RBIF = 0;
  1178  005C  100B               	bcf	11,0	;volatile
  1179  005D  287C               	goto	i1l1003
  1180  005E                     i1l983:
  1181                           
  1182                           ;Main7.c: 114:             PORTD = NUMEROS[CENTENAS];
  1183  005E  0876               	movf	_CENTENAS,w
  1184  005F  3E2D               	addlw	(low (_NUMEROS| 0))& (0+255)
  1185  0060  0084               	movwf	4
  1186  0061  1383               	bcf	3,7	;select IRP bank0
  1187  0062  0800               	movf	0,w
  1188  0063  0088               	movwf	8	;volatile
  1189  0064                     i1l985:
  1190                           
  1191                           ;Main7.c: 115:             PORTEbits.RE0 = 1;
  1192  0064  1409               	bsf	9,0	;volatile
  1193  0065                     i1l987:
  1194                           
  1195                           ;Main7.c: 116:             DISPLAY++;
  1196  0065  3001               	movlw	1
  1197  0066  00F0               	movwf	??_isr
  1198  0067  0870               	movf	??_isr,w
  1199  0068  07B7               	addwf	_DISPLAY,f
  1200                           
  1201                           ;Main7.c: 117:             break;
  1202  0069  2891               	goto	i1l78
  1203  006A                     i1l989:
  1204                           
  1205                           ;Main7.c: 119:             PORTD = NUMEROS[DECENAS];
  1206  006A  0875               	movf	_DECENAS,w
  1207  006B  3E2D               	addlw	(low (_NUMEROS| 0))& (0+255)
  1208  006C  0084               	movwf	4
  1209  006D  1383               	bcf	3,7	;select IRP bank0
  1210  006E  0800               	movf	0,w
  1211  006F  0088               	movwf	8	;volatile
  1212  0070                     i1l991:
  1213                           
  1214                           ;Main7.c: 120:             PORTEbits.RE1 = 1;
  1215  0070  1489               	bsf	9,1	;volatile
  1216  0071  2865               	goto	i1l987
  1217  0072                     i1l995:
  1218                           
  1219                           ;Main7.c: 124:             PORTD = NUMEROS[UNIDADES];
  1220  0072  0838               	movf	_UNIDADES,w
  1221  0073  3E2D               	addlw	(low (_NUMEROS| 0))& (0+255)
  1222  0074  0084               	movwf	4
  1223  0075  1383               	bcf	3,7	;select IRP bank0
  1224  0076  0800               	movf	0,w
  1225  0077  0088               	movwf	8	;volatile
  1226  0078                     i1l997:
  1227                           
  1228                           ;Main7.c: 125:             PORTEbits.RE2 = 1;
  1229  0078  1509               	bsf	9,2	;volatile
  1230  0079                     i1l999:
  1231                           
  1232                           ;Main7.c: 126:             DISPLAY = 1;
  1233  0079  01B7               	clrf	_DISPLAY
  1234  007A  0AB7               	incf	_DISPLAY,f
  1235                           
  1236                           ;Main7.c: 127:             break;
  1237  007B  2891               	goto	i1l78
  1238  007C                     i1l1003:
  1239  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1240  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1241  007E  0837               	movf	_DISPLAY,w
  1242  007F  00F0               	movwf	??_isr
  1243  0080  01F1               	clrf	??_isr+1
  1244                           
  1245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1246                           ; Switch size 1, requested type "simple"
  1247                           ; Number of cases is 1, Range of values is 0 to 0
  1248                           ; switch strategies available:
  1249                           ; Name         Instructions Cycles
  1250                           ; simple_byte            4     3 (average)
  1251                           ; direct_byte           11     8 (fixed)
  1252                           ; jumptable            260     6 (fixed)
  1253                           ;	Chosen strategy is simple_byte
  1254  0081  0871               	movf	??_isr+1,w
  1255  0082  3A00               	xorlw	0	; case 0
  1256  0083  1903               	skipnz
  1257  0084  2886               	goto	i1l1179
  1258  0085  2891               	goto	i1l78
  1259  0086                     i1l1179:
  1260                           
  1261                           ; Switch size 1, requested type "simple"
  1262                           ; Number of cases is 3, Range of values is 1 to 3
  1263                           ; switch strategies available:
  1264                           ; Name         Instructions Cycles
  1265                           ; simple_byte           10     6 (average)
  1266                           ; direct_byte           20    11 (fixed)
  1267                           ; jumptable            263     9 (fixed)
  1268                           ;	Chosen strategy is simple_byte
  1269  0086  0870               	movf	??_isr,w
  1270  0087  3A01               	xorlw	1	; case 1
  1271  0088  1903               	skipnz
  1272  0089  285E               	goto	i1l983
  1273  008A  3A03               	xorlw	3	; case 2
  1274  008B  1903               	skipnz
  1275  008C  286A               	goto	i1l989
  1276  008D  3A01               	xorlw	1	; case 3
  1277  008E  1903               	skipnz
  1278  008F  2872               	goto	i1l995
  1279  0090  2891               	goto	i1l78
  1280  0091                     i1l78:
  1281  0091  0874               	movf	??_isr+4,w
  1282  0092  008A               	movwf	10
  1283  0093  0873               	movf	??_isr+3,w
  1284  0094  0084               	movwf	4
  1285  0095  0E72               	swapf	??_isr+2,w
  1286  0096  0083               	movwf	3
  1287  0097  0EFE               	swapf	btemp,f
  1288  0098  0E7E               	swapf	btemp,w
  1289  0099  0009               	retfie
  1290  009A                     __end_of_isr:
  1291  007E                     btemp	set	126	;btemp
  1292  007E                     wtemp0	set	126
  1293                           
  1294                           	psect	intentry
  1295  0004                     __pintentry:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1298                           
  1299  0004                     interrupt_function:
  1300  007E                     saved_w	set	btemp
  1301  0004  00FE               	movwf	btemp
  1302  0005  0E03               	swapf	3,w
  1303  0006  00F2               	movwf	??_isr+2
  1304  0007  0804               	movf	4,w
  1305  0008  00F3               	movwf	??_isr+3
  1306  0009  080A               	movf	10,w
  1307  000A  00F4               	movwf	??_isr+4
  1308  000B  120A  118A  2828   	ljmp	_isr
  1309                           
  1310                           	psect	config
  1311                           
  1312                           ;Config register CONFIG1 @ 0x2007
  1313                           ;	Oscillator Selection bits
  1314                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1315                           ;	Watchdog Timer Enable bit
  1316                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1317                           ;	Power-up Timer Enable bit
  1318                           ;	PWRTE = OFF, PWRT disabled
  1319                           ;	RE3/MCLR pin function select bit
  1320                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1321                           ;	Code Protection bit
  1322                           ;	CP = OFF, Program memory code protection is disabled
  1323                           ;	Data Code Protection bit
  1324                           ;	CPD = OFF, Data memory code protection is disabled
  1325                           ;	Brown Out Reset Selection bits
  1326                           ;	BOREN = OFF, BOR disabled
  1327                           ;	Internal External Switchover bit
  1328                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1329                           ;	Fail-Safe Clock Monitor Enabled bit
  1330                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1331                           ;	Low Voltage Programming Enable bit
  1332                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1333                           ;	In-Circuit Debugger Mode bit
  1334                           ;	DEBUG = 0x1, unprogrammed default
  1335  2007                     	org	8199
  1336  2007  20D4               	dw	8404
  1337                           
  1338                           ;Config register CONFIG2 @ 0x2008
  1339                           ;	Brown-out Reset Selection bit
  1340                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1341                           ;	Flash Program Memory Self Write Enable bits
  1342                           ;	WRT = OFF, Write protection off
  1343  2008                     	org	8200
  1344  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         5
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     13      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_VALORES
    _VALORES->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1121
                                             12 BANK0      1     1      0
                            _VALORES
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _VALORES                                              3     3      0    1121
                                              9 BANK0      3     3      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _VALORES
     ___awdiv
     ___bmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 18 18:49:33 2021

                      pc 0002           ___bmul@product 0022                       l81 0188  
                     l95 0166             ___awdiv@sign 0026                       fsr 0004  
                    l207 019F                      l334 0102                      u410 0191  
                    u411 0190                      u420 019E                      u421 019D  
                    u510 00F4                      u430 00A1                      u511 00F3  
                    u431 00A0                      u520 00F9                      u440 00AC  
                    u521 00F8                      u505 00E8                      u441 00AB  
                    u450 00BD                      u530 0109                      u451 00BC  
                    u531 0108                      u540 0137                      u541 0136  
                    u470 00CF                      u471 00CE                      u465 00C1  
                    u490 00E0                      u491 00DF                      u485 00D0  
                    _VAL 0079                      u495 00DC                      _isr 0028  
                    fsr0 0004                      indf 0000                     l1101 00FE  
                   l1111 0175                     l1121 0182                     l1113 0176  
                   l1105 0167                     l1051 0191                     l1131 0187  
                   l1123 0183                     l1115 0177                     l1107 0170  
                   l1061 009A                     l1053 0195                     l1141 0160  
                   l1133 0103                     l1125 0184                     l1117 0178  
                   l1109 0172                     l1071 00AC                     l1063 009D  
                   l1055 0197                     l1047 018C                     l1135 0109  
                   l1127 0185                     l1119 0181                     l1143 01A0  
                   l1081 00C0                     l1073 00B1                     l1065 00A1  
                   l1057 019E                     l1049 018D                     l1137 0131  
                   l1129 0186                     l1145 01A5                     l1091 00E6  
                   l1083 00C7                     l1075 00B5                     l1067 00A6  
                   l1139 0137                     l1147 01AB                     l1093 00E7  
                   l1085 00CB                     l1077 00B7                     l1069 00A8  
                   l1095 00EE                     l1087 00CF                     l1079 00BD  
                   l1089 00E0                     l1097 00F4                     l1099 00F9  
                   ?_isr 0070                     _FLAG 0078                     _T0IF 005A  
                   _IOCB 0096                     i1l78 0091                     _TMR0 0001  
                   _WPUB 0095          __end_of_VALORES 0167                     _main 01A0  
                   btemp 007E                     start 000E        ___bmul@multiplier 0023  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0103  
                  _ANSEL 0188                    _FLAGS 0077          ___awdiv@divisor 0020  
                  i1l951 002C                    i1l961 003A                    i1l953 002D  
                  i1l971 004D                    i1l963 0040                    i1l955 0033  
                  i1l981 005C                    i1l973 0051                    i1l965 0043  
                  i1l957 0035                    i1l949 0028                    i1l991 0070  
                  i1l983 005E                    i1l975 0054                    i1l967 0048  
                  i1l959 0036                    i1l985 0064                    i1l977 0059  
                  i1l969 0049                    i1l995 0072                    i1l987 0065  
                  i1l979 005A                    i1l997 0078                    i1l989 006A  
                  i1l999 0079          ___awdiv@counter 0025                    u40_20 0059  
                  u40_21 0058                    u35_20 002C                    u35_21 002B  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u36_20 003A  
                  u36_21 0039                    u37_20 0040                    u37_21 003F  
                  u38_20 0048                    u38_21 0047                    u39_20 0051  
                  u39_21 0050                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _setup 0167  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 01B4                   ??_main 002C  
              ??_VALORES 0029         ___awdiv@dividend 0022                   ?_setup 0070  
                 _ANSELH 0189                   i1l1003 007C                   i1l1179 0086  
                 ___bmul 0189                ??___awdiv 0024         ___awdiv@quotient 0027  
                 saved_w 007E  __end_of__initialization 0024      ___bmul@multiplicand 0020  
         __pcstackCOMMON 0070             __pidataBANK0 01C7            __end_of_setup 0189  
         _OPTION_REGbits 0081                  ??_setup 0020               __pbssBANK0 0038  
             __pnvCOMMON 0079               __pmaintext 01A0                  ?___bmul 0020  
             __pintentry 0004                  _DECENAS 0075                  _DISPLAY 0037  
                _VALORES 0103                  _NUMEROS 002D          __size_of___bmul 0017  
                ___awdiv 009A                  __ptext1 0167                  __ptext2 0103  
                __ptext3 0189                  __ptext4 009A                  __ptext5 0028  
           __size_of_isr 0072     end_of_initialization 0024                _PORTBbits 0006  
              _PORTEbits 0009           __end_of___bmul 01A0      start_initialization 0011  
            __end_of_isr 009A                 ??___bmul 0021               init_fetch0 01B4  
            __pdataBANK0 002D              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020                 ?_VALORES 0070                 ?___awdiv 0020  
               _CENTENAS 0076           __size_of_setup 0022        interrupt_function 0004  
               _UNIDADES 0038         __size_of_VALORES 0064         __size_of___awdiv 0069  
          __size_of_main 0014               _INTCONbits 000B                 init_ram0 01B8  
               intlevel1 0000               _OSCCONbits 008F               _OPTION_REG 0081  
